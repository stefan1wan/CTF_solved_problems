Gadgets information
============================================================
0x0000000000400b1f : add bl, dh ; ret
0x0000000000400b1d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400b1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400aa7 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000040062c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400aa8 : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000400533 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400aa9 : add byte ptr [rax], al ; leave ; ret
0x000000000040062e : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400b1e : add byte ptr [rax], al ; ret
0x0000000000400698 : add byte ptr [rcx], al ; ret
0x0000000000400aaa : add cl, cl ; ret
0x0000000000400877 : add dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000400694 : add eax, 0x2019ce ; add ebx, esi ; ret
0x0000000000400699 : add ebx, esi ; ret
0x0000000000400536 : add esp, 8 ; ret
0x0000000000400535 : add rsp, 8 ; ret
0x0000000000400622 : and byte ptr [rax], ah ; jmp rax
0x0000000000400697 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000400af9 : call qword ptr [r12 + rbx*8]
0x0000000000400afa : call qword ptr [rsp + rbx*8]
0x00000000004006be : call rax
0x00000000004007ce : clc ; leave ; ret
0x0000000000400879 : clc ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x00000000004007c7 : cmp eax, dword ptr [rbp - 0x10] ; jl 0x400766 ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000400afc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400876 : hlt ; add dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x00000000004006b9 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x000000000040061d : je 0x400638 ; pop rbp ; mov edi, 0x602060 ; jmp rax
0x000000000040066b : je 0x400680 ; pop rbp ; mov edi, 0x602060 ; jmp rax
0x00000000004006b8 : je 0x4006b1 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004007ca : jl 0x400763 ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000400625 : jmp rax
0x00000000004007cf : leave ; ret
0x0000000000400693 : mov byte ptr [rip + 0x2019ce], 1 ; ret
0x0000000000400aa6 : mov eax, 0 ; leave ; ret
0x0000000000400531 : mov eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004007cc : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x00000000004006bc : mov ebp, esp ; call rax
0x0000000000400620 : mov edi, 0x602060 ; jmp rax
0x0000000000400af7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000400af6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004006bb : mov rbp, rsp ; call rax
0x0000000000400628 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000400b18 : nop dword ptr [rax + rax] ; ret
0x0000000000400675 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000400b0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400b0e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400b10 : pop r14 ; pop r15 ; ret
0x0000000000400b12 : pop r15 ; ret
0x0000000000400692 : pop rbp ; mov byte ptr [rip + 0x2019ce], 1 ; ret
0x000000000040061f : pop rbp ; mov edi, 0x602060 ; jmp rax
0x0000000000400b0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400b0f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400630 : pop rbp ; ret
0x0000000000400b13 : pop rdi ; ret
0x0000000000400b11 : pop rsi ; pop r15 ; ret
0x0000000000400b0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004006ba : push rbp ; mov rbp, rsp ; call rax
0x0000000000400539 : ret
0x0000000000400542 : ret 0x201a
0x00000000004006b7 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x0000000000400696 : sbb dword ptr [rax], esp ; add byte ptr [rcx], al ; ret
0x0000000000400b25 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000400b24 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040062a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400b1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004006b6 : test eax, eax ; je 0x4006b3 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004006b5 : test rax, rax ; je 0x4006b4 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004007cb : xchg eax, ecx ; mov eax, dword ptr [rbp - 8] ; leave ; ret

Unique gadgets found: 71
