Gadgets information
============================================================
0x0000000000000b7f : add bl, dh ; ret
0x0000000000000b7d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000000b7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000000afc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000000a3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000000084c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000000b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000afe : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000006fb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000000779 : add byte ptr [rax], al ; jmp 0x719
0x00000000000007fe : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000000b7e : add byte ptr [rax], al ; ret
0x00000000000007fd : add byte ptr [rax], r8b ; pop rbp ; ret
0x000000000000088e : add byte ptr [rcx], al ; ret
0x000000000000088a : add eax, 0x2007d0 ; add ebx, esi ; ret
0x000000000000088f : add ebx, esi ; ret
0x0000000000000b01 : add esp, 0x28 ; ret
0x0000000000000a28 : add esp, 0x38 ; ret
0x0000000000000993 : add esp, 0x48 ; ret
0x00000000000006fe : add esp, 8 ; ret
0x0000000000000b00 : add rsp, 0x28 ; ret
0x0000000000000a27 : add rsp, 0x38 ; ret
0x0000000000000992 : add rsp, 0x48 ; ret
0x00000000000006fd : add rsp, 8 ; ret
0x0000000000000a25 : and al, 0x28 ; add rsp, 0x38 ; ret
0x0000000000000990 : and al, 0x38 ; add rsp, 0x48 ; ret
0x000000000000088d : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000000007f0 : and byte ptr [rax], al ; test rax, rax ; je 0x808 ; pop rbp ; jmp rax
0x000000000000083d : and byte ptr [rax], al ; test rax, rax ; je 0x858 ; pop rbp ; jmp rax
0x0000000000000b59 : call qword ptr [r12 + rbx*8]
0x0000000000000b5a : call qword ptr [rsp + rbx*8]
0x00000000000008c8 : call rax
0x0000000000000969 : cmp byte ptr [rax + 1], cl ; ret 0xb60f
0x0000000000000ab7 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000000b5c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000007f5 : je 0x803 ; pop rbp ; jmp rax
0x0000000000000842 : je 0x853 ; pop rbp ; jmp rax
0x00000000000008c2 : je 0x8b3 ; push rbp ; mov rbp, rsp ; call rax
0x000000000000077b : jmp 0x717
0x00000000000007f8 : jmp rax
0x00000000000007f9 : loopne 0x869 ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000000889 : mov byte ptr [rip + 0x2007d0], 1 ; ret
0x0000000000000afb : mov eax, 0 ; add rsp, 0x28 ; ret
0x0000000000000a3a : mov eax, 0 ; add rsp, 8 ; ret
0x0000000000000a23 : mov eax, dword ptr [rsp + 0x28] ; add rsp, 0x38 ; ret
0x000000000000098e : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x48 ; ret
0x00000000000008c6 : mov ebp, esp ; call rax
0x0000000000000b57 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000000b56 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000000a22 : mov rax, qword ptr [rsp + 0x28] ; add rsp, 0x38 ; ret
0x000000000000098d : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x48 ; ret
0x00000000000008c5 : mov rbp, rsp ; call rax
0x00000000000008de : nop ; add rsp, 8 ; ret
0x00000000000007fb : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000000b78 : nop dword ptr [rax + rax] ; ret
0x00000000000007fa : nop word ptr [rax + rax] ; pop rbp ; ret
0x0000000000000843 : or al, 0x5d ; jmp rax
0x0000000000000b6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000000b6e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000000b70 : pop r14 ; pop r15 ; ret
0x0000000000000b72 : pop r15 ; ret
0x00000000000007f7 : pop rbp ; jmp rax
0x0000000000000888 : pop rbp ; mov byte ptr [rip + 0x2007d0], 1 ; ret
0x0000000000000b6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000000b6f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000000800 : pop rbp ; ret
0x0000000000000b73 : pop rdi ; ret
0x0000000000000b71 : pop rsi ; pop r15 ; ret
0x0000000000000b6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000008c4 : push rbp ; mov rbp, rsp ; call rax
0x0000000000000701 : ret
0x0000000000000782 : ret 0x2008
0x0000000000000aba : ret 0x8948
0x00000000000009c0 : ret 0x8b48
0x000000000000096c : ret 0xb60f
0x000000000000088b : rol byte ptr [rdi], 1 ; and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000000008c1 : sal byte ptr [rcx + rbp*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x00000000000009bd : sub byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000000b85 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000000b84 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000000084a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000000b7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000007f3 : test eax, eax ; je 0x805 ; pop rbp ; jmp rax
0x0000000000000840 : test eax, eax ; je 0x855 ; pop rbp ; jmp rax
0x00000000000008c0 : test eax, eax ; je 0x8b5 ; push rbp ; mov rbp, rsp ; call rax
0x00000000000007f2 : test rax, rax ; je 0x806 ; pop rbp ; jmp rax
0x000000000000083f : test rax, rax ; je 0x856 ; pop rbp ; jmp rax
0x00000000000008bf : test rax, rax ; je 0x8b6 ; push rbp ; mov rbp, rsp ; call rax

Unique gadgets found: 88
