Gadgets information
============================================================
0x000000000016c1bd : adc ah, bh ; call rax
0x000000000016beac : adc ah, bh ; sti ; push rax ; std ; sti ; jmp rax
0x000000000011fc1f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fc89 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d3ea6 : adc al, 0 ; add byte ptr [rax], al ; add dword ptr [rbp + 0x3b], esi ; ret
0x000000000017ee50 : adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x000000000018b7c8 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov word ptr [rcx], es ; add al, dh ; ret 0xfff6
0x000000000017ee08 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000018b7b0 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; mov word ptr [rcx], es ; add al, ch ; ret 0xfff6
0x00000000001844b0 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; sbb dword ptr [rcx], eax ; add al, ch ; ret
0x000000000018b7f8 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; mov word ptr [rcx], es ; add byte ptr [rax], al ; ret
0x000000000017eda8 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000dfbae : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x000000000017edf0 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000230ba : adc al, 0 ; jmp 0x23083
0x0000000000020835 : adc al, 0 ; ret
0x0000000000173d74 : adc al, 0x12 ; add byte ptr [rax], al ; call 0x131728d9
0x0000000000129be5 : adc al, 0x13 ; jmp rdx
0x000000000008dbf5 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000000e02aa : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000034e87 : adc al, 0x24 ; mov rsi, r13 ; mov rdi, r12 ; call r14
0x0000000000035b58 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000185474 : adc al, 0x29 ; add dword ptr [rax], eax ; js 0x1854d4 ; cmc ; jmp qword ptr [rcx]
0x0000000000185574 : adc al, 0x2a ; add dword ptr [rax], eax ; mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x00000000000ed391 : adc al, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x0000000000098423 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000740d5 : adc al, 0x30 ; ret
0x0000000000176274 : adc al, 0x37 ; add byte ptr [rax], al ; sbb byte ptr [rdx], cl ; in al, dx ; call qword ptr [rsi]
0x0000000000186674 : adc al, 0x3b ; add dword ptr [rax], eax ; js 0x18661e ; cmc ; jmp qword ptr [rcx]
0x0000000000186974 : adc al, 0x3e ; add dword ptr [rax], eax ; test al, 0xa3 ; cmc ; jmp rdx
0x0000000000074f4a : adc al, 0x41 ; pop rsp ; ret
0x0000000000187274 : adc al, 0x47 ; add dword ptr [rax], eax ; or dh, al ; cmc ; jmp qword ptr [rdx]
0x0000000000095b60 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000969b3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000008d7ab : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000020725 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000081098 : adc al, 0x76 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000079dda : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000002cd43 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000004eff4 : adc al, 0x89 ; ret 0xe283
0x000000000006a86e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000ab969 : adc al, 0x8f ; add rdx, rdi ; jmp rdx
0x00000000000550ef : adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000005c9cb : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000001210b0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000011f7de : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000129be1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000b8f6d : adc al, 0x98 ; add rax, rdx ; jmp rax
0x000000000007c8e7 : adc al, 0xa ; jmp r10
0x000000000008dd63 : adc al, 0xa ; sub eax, edx ; ret
0x00000000000ca907 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x00000000000b8bfd : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000000eac44 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000794c9 : adc al, 0xb8 ; add rax, rdx ; jmp rax
0x0000000000033b24 : adc al, 0xc7 ; xor eax, eax ; ret
0x0000000000173974 : adc al, 0xe ; add byte ptr [rax], al ; mov byte ptr [rsi], dh ; jmp 0x173982
0x00000000000a7692 : adc al, 0xe ; jne 0xa768d ; ret
0x000000000011d8f1 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000002b87 : adc al, 0xe7 ; ret
0x000000000014b8b1 : adc al, 0xea ; test rdx, rdx ; je 0x14b8c1 ; call rdx
0x0000000000179cc1 : adc al, 0xef ; call qword ptr [rax]
0x000000000010cb75 : adc al, 0xf ; test al, bh ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000096529 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000f5433 : adc al, 0xf5 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000014b308 : adc al, 1 ; add byte ptr [rax], al ; ret
0x000000000016f12d : adc al, 1 ; add byte ptr [rcx + rax - 0xe], bh ; jmp rsp
0x0000000000171a7d : adc al, 2 ; add byte ptr [rdx + rbp*4], bl ; stc ; call rsp
0x00000000001053fe : adc al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000010542a : adc al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x000000000008d1f6 : adc al, 7 ; cmp edx, esi ; je 0x8d1f7 ; ret
0x000000000008d122 : adc al, 7 ; test dl, dl ; jne 0x8d11f ; ret
0x000000000003efcf : adc al, 9 ; ret 0x9f74
0x000000000016d1fc : adc al, al ; cld ; call qword ptr [rax + 0x10fffcbf]
0x0000000000173d75 : adc al, byte ptr [rax] ; add al, ch ; push rbp ; jmp 0x173d81
0x0000000000173dc5 : adc al, byte ptr [rax] ; add byte ptr [rax + 0x7a], bl ; std ; jmp qword ptr [rdi]
0x000000000011fdc7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fe31 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000003128e : adc al, byte ptr [rax] ; add rdx, rsi ; jmp rdx
0x0000000000041035 : adc al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002cd3f : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000091054 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000265ca : adc al, byte ptr [rdi + rcx - 0x4a] ; add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000045ea3 : adc al, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000173dc4 : adc al, byte ptr fs:[rax] ; add byte ptr [rax + 0x7a], bl ; std ; jmp qword ptr [rdi]
0x0000000000040ebf : adc al, ch ; jg 0x40ed0 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000017cfd0 : adc al, ch ; out dx, eax ; call rax
0x000000000010c367 : adc al, ch ; ret
0x00000000000d3f88 : adc al, ch ; ret 0xfffe
0x00000000000759b3 : adc al, ch ; xlatb ; ret 0
0x0000000000163080 : adc al, dl ; cli ; call qword ptr [rax]
0x00000000001630a0 : adc al, dl ; cli ; push qword ptr [rax] ; iretd ; cli ; call qword ptr [rax]
0x0000000000188400 : adc bh, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000003afb : adc bh, byte ptr [rax] ; cwde ; ret
0x000000000009ae50 : adc bh, byte ptr [rbx] ; ja 0x9ae64 ; cmove rax, rcx ; ret
0x00000000000cb609 : adc bh, dh ; ret 0x30f
0x000000000004446d : adc bh, dh ; ret 0x8080
0x000000000016bf64 : adc bh, dh ; sti ; jmp rax
0x000000000016cfe8 : adc bl, al ; cld ; inc dword ptr [rax + 0xfffcc2] ; ret 0xfffc
0x00000000001880a0 : adc bl, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000032d18 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000823b5 : adc bl, ch ; call 0xffffffffc3d8ad0a
0x000000000007c5c5 : adc bl, ch ; call 0xffffffffc4004f1a
0x000000000007ddc5 : adc bl, ch ; call 0xffffffffc400671a
0x00000000001736b9 : adc bl, ch ; call rsi
0x00000000000426b2 : adc bl, ch ; jno 0x42708 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000081cd4 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000095146 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000944b6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000094527 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000094487 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000015e128 : adc bl, dh ; out dx, eax ; jmp rax
0x000000000002c05a : adc bl, dh ; ret
0x0000000000095145 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000944b5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000070ad3 : adc byte ptr [r11 + 0x21], sil ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000070ab6 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000007240e : adc byte ptr [r11 - 0x50], sil ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000014c54d : adc byte ptr [r13 + 0x5b0575c0], r8b ; ret
0x00000000000f3ea1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x000000000007c032 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000011c8a7 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000738ec : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000d0438 : adc byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000c0055 : adc byte ptr [r8 - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xcf75
0x00000000000b9ac5 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000009839c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000983be : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000983fc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009847e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000006b993 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000010b94c : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x000000000007ad1d : adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x00000000000a4769 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000e8e4f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x0000000000073dfb : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x00000000000e8e4e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x000000000011c8a8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000705b7 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e9aba : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000010ac09 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000010dbb6 : adc byte ptr [rax + 1], bh ; ret
0x00000000000995ce : adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000042d2e : adc byte ptr [rax + 1], cl ; ret
0x000000000008d7a6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000ea350 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000110d0d : adc byte ptr [rax + 1], dil ; ret
0x00000000000230b9 : adc byte ptr [rax + rax], 0xeb ; ret 0x3145
0x0000000000110251 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008ca02 : adc byte ptr [rax + rcx*4 + 0x14], al ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000985a4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000984a2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000098420 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000e08d3 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000eac41 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002c053 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000753d6 : adc byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000086f44 : adc byte ptr [rax - 0x73], cl ; jg 0x86f61 ; jne 0x86f38 ; ret
0x00000000000eae65 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000eae64 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000020728 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000efca7 : adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000008736a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000093e9c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007aec3 : adc byte ptr [rax - 0x77], cl ; enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000000a96f2 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000069d27 : adc byte ptr [rax - 0x77], cl ; jo 0x69d45 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000010835b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000069ce7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007be82 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000022ce7 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000738ed : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000cb384 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000005bb4f : adc byte ptr [rax - 0x77], cl ; ret 0x870f
0x0000000000038c94 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x00000000000774b9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000010bd33 : adc byte ptr [rax - 0x77], cl ; ret 0x94c
0x000000000012675f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000013e2e7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000000d0439 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000008fc44 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000bfff3 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x39 ; ret
0x00000000000c0056 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xcf75
0x0000000000077eb4 : adc byte ptr [rax - 0x7d], cl ; call 0xffffffffc240c7cb
0x0000000000054ea9 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000007a853 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000079ce4 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000ea00a : adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000e1407 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000015f0d4 : adc byte ptr [rax - 0xd], ah ; jmp qword ptr [rax]
0x0000000000070afa : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000d09bb : adc byte ptr [rax - 1], bh ; ret
0x000000000016c1bc : adc byte ptr [rax], 0xfc ; call rax
0x000000000016c0a4 : adc byte ptr [rax], ah ; cld ; push rax ; and esp, edi ; call rax
0x00000000000df36b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000630bc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000122041 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ffd1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000010f78 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x14
0x00000000000dd01c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003d8dd : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xb7e
0x00000000000efbd6 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000036c9c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000109b0a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001082a5 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000099303 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007e6cc : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000161a6d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000063934 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x63949 ; ret
0x00000000000f435b : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f0073 : adc byte ptr [rax], al ; je 0xf0086 ; xor eax, eax ; ret
0x000000000005c42e : adc byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000550eb : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000005c9c7 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000003fbb2 : adc byte ptr [rax], al ; ret
0x00000000000c668d : adc byte ptr [rax], bh ; ret 0x860f
0x00000000000c65b8 : adc byte ptr [rax], bh ; ret 0x870f
0x000000000016c054 : adc byte ptr [rax], ch ; cld ; call qword ptr [rax]
0x000000000009839d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000983bf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000983fd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009847f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000098581 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000074eda : adc byte ptr [rbp + 0x39], cl ; ret
0x000000000014c54e : adc byte ptr [rbp + 0x5b0575c0], al ; ret
0x0000000000081e78 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000086f48 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00000000000f3ea2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x000000000015f298 : adc byte ptr [rbp - 0xd], dh ; jmp qword ptr [rax]
0x000000000009af62 : adc byte ptr [rbp - 0xd], dh ; ret
0x000000000016c2d0 : adc byte ptr [rbp - 4], cl ; jmp rax
0x000000000016c5f8 : adc byte ptr [rbp - 4], dh ; call qword ptr [rax + 0x10fffc74]
0x0000000000070ad4 : adc byte ptr [rbx + 0x21], dh ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000775f0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000028ee8 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000178fdd : adc byte ptr [rbx + 0xa], ch ; ret
0x0000000000177554 : adc byte ptr [rbx + 0xab20202], al ; ret
0x0000000000182fc3 : adc byte ptr [rbx + 0xabd0202], al ; ret
0x0000000000070ab7 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000073432 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006d2a7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x6d2c1 ; ret
0x000000000007240f : adc byte ptr [rbx - 0x50], dh ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000098fa0 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000010203b : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000f4036 : adc byte ptr [rbx - 0x7d], bl ; loopne 0xf404f ; pop rbp ; pop r12 ; ret
0x000000000014c27c : adc byte ptr [rbx - 0xd], bl ; ret
0x000000000016c608 : adc byte ptr [rbx - 4], dh ; call qword ptr [rax + 0x10fffc72]
0x000000000006b994 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000017c3bc : adc byte ptr [rcx + 0xa], al ; ret
0x0000000000087b77 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00000000000d16c4 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000780d7 : adc byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000006c7b7 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000017dbb0 : adc byte ptr [rcx - 0x10], cl ; jmp qword ptr [rsi]
0x0000000000098502 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000984e2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000e13d2 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000e1452 : adc byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00000000000cc780 : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000a5984 : adc byte ptr [rcx - 0x7cb7e9f4], cl ; ret 0x4804
0x0000000000074e87 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000007a953 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4920
0x000000000011d973 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000121517 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000025269 : adc byte ptr [rcx - 0xa], al ; ret 0x4c01
0x000000000015f35c : adc byte ptr [rcx - 0xd], bh ; jmp qword ptr [rax]
0x000000000016f05d : adc byte ptr [rcx], al ; add ah, ch ; ret 0xfff1
0x00000000000a6804 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cc5b8 : adc byte ptr [rcx], bh ; call 0xffffffffc345db37
0x000000000016c0f8 : adc byte ptr [rcx], ch ; cld ; call qword ptr [rax]
0x00000000000a88fc : adc byte ptr [rcx], ch ; ret 0x428d
0x000000000003683e : adc byte ptr [rcx], ch ; ret 0xc269
0x0000000000073435 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000028eb9 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000102437 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00000000000dfcad : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xdfce9 ; ret
0x00000000000ef893 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00000000000b2ae6 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000016d204 : adc byte ptr [rdi - 0x416f0004], bh ; cld ; call qword ptr [rax]
0x000000000016c0f4 : adc byte ptr [rdi], ah ; cld ; call qword ptr [rax]
0x000000000002c445 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000f7dfa : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000007c033 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000001413c8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000149433 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000011eb61 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011ec51 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011ea71 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012638b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000124e8f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000012608f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012578f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000125a8f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000125187 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f4b9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000011f011 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000011e7a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000011f1f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011e981 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000011f3d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f2e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011ec23 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ed13 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011eb33 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125434 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126034 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126334 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125a34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125734 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000012512c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e891 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001227bd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001225dd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122fb5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000121ed5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000122dd5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ea43 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e863 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e953 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e773 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000339d3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x00000000000d16cd : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x0000000000038e77 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x00000000000dda1b : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8440
0x0000000000003955 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x000000000012a0d9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000005ad0d : adc byte ptr [rdx + rdx*8 - 0x76b7d48c], al ; ret
0x000000000015f148 : adc byte ptr [rdx - 0xd], ah ; jmp qword ptr [rax]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000010551f : adc byte ptr [rdx], al ; je 0x10552c ; ret
0x000000000017bfb4 : adc byte ptr [rdx], al ; pop rbp ; ret
0x000000000016c058 : adc byte ptr [rdx], ch ; cld ; call qword ptr [rax]
0x00000000001634f4 : adc byte ptr [rdx], ch ; sti ; jmp qword ptr [rax]
0x0000000000147b1b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000119b4d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x00000000001479ca : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000146fc5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007ca35 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008287b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009469b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009469a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000016c5f0 : adc byte ptr [rsi - 4], dh ; call qword ptr [rax + 0x10fffc75]
0x0000000000036aea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000016c600 : adc byte ptr [rsp + rdi*8 - 1], dh ; nop ; jae 0x16c60a ; call qword ptr [rax]
0x00000000000a7c7a : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000043a5f : adc byte ptr [rsp - 4], al ; ret
0x0000000000043aa5 : adc byte ptr [rsp - 8], al ; ret
0x0000000000125437 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e383a : adc ch, byte ptr [rdx + 0x5d5b002b] ; pop r12 ; ret
0x000000000015e0dc : adc ch, dh ; out dx, eax ; call qword ptr [rax]
0x000000000015e0e4 : adc ch, dh ; out dx, eax ; jmp rax
0x000000000016d1f4 : adc cl, al ; cld ; call qword ptr [rax + 0x10fffcc0]
0x00000000000c035a : adc cl, byte ptr [r8 - 0x7d] ; ret
0x000000000008db85 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000a866e : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000a85ef : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000098e73 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30e1bcf
0x000000000004452f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000008de9d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000004106d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33d587d
0x00000000000c035b : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000007c5b5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000044532 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x00000000000a586b : adc cl, byte ptr [rcx - 0x7cb7e9f4] ; ret 0x4804
0x0000000000081d60 : adc dh, bh ; ret
0x0000000000188b19 : adc dh, dh ; call qword ptr [rdx]
0x000000000011183a : adc dh, dh ; ret 0x7401
0x00000000000761fe : adc dh, dh ; ret 0xf0f
0x000000000016bf00 : adc dh, dh ; sti ; call rax
0x00000000000022e3 : adc dh, dl ; ret
0x000000000016d1ec : adc dl, al ; cld ; call qword ptr [rax + 0x10fffcc1]
0x000000000016bec8 : adc dl, bh ; sti ; push rax ; sti ; sti ; call rax
0x000000000017d3c0 : adc dl, dh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000006b985 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000014bdeb : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003600e : adc dword ptr [rax - 0x77], ecx ; ret
0x00000000000d421d : adc dword ptr [rax - 0x77], ecx ; ret 0x349
0x00000000000733dc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000d2c9f : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c1127 : adc dword ptr [rax - 0x7d], ecx ; ret 0x3901
0x00000000000cc009 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000008bad5 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000c3c43 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000000000c67e6 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x000000000007c037 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000001239db : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000011ff67 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121ed9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000091a2 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014bd8b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x0000000000044e54 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x000000000008993a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000036c72 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c67c8 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x000000000008e4c7 : adc dword ptr [rcx + 7], edi ; ret
0x000000000008e162 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000008e126 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000183d15 : adc dword ptr [rcx], eax ; add al, cl ; jb 0x183d15 ; jmp rcx
0x000000000011591e : adc dword ptr [rcx], eax ; ja 0x115952 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000000eca76 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000a939b : adc dword ptr [rdi + 0x2f], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008e629 : adc dword ptr [rdi - 8], edi ; ret
0x00000000000326a4 : adc dword ptr [rdi], ecx ; ret
0x000000000003266d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000032a02 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000098bfc : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000172835 : adc dword ptr [rdx], eax ; add byte ptr [rsp + rax - 5], ch ; jmp rsp
0x0000000000098d2f : adc dword ptr [rsi + 3], edx ; ret
0x0000000000098dcc : adc dword ptr [rsi + 7], edx ; ret
0x0000000000098bce : adc dword ptr [rsi - 1], edx ; ret
0x000000000011ff66 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000995ca : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000014bdab : adc eax, 0x251b18 ; je 0x14bdba ; ret
0x000000000011a097 : adc eax, 0x282374 ; add rsp, 8 ; ret
0x0000000000112739 : adc eax, 0x28d8a2 ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000109fe2 : adc eax, 0x290b99 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000111f02 : adc eax, 0x2a69 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000e996f : adc eax, 0x2b18cc ; je 0xe9980 ; pop rbp ; ret
0x00000000000e259e : adc eax, 0x2bbbad ; add rsp, 8 ; ret
0x0000000000033efd : adc eax, 0x367186 ; ret
0x000000000002c786 : adc eax, 0x36e7a5 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002b4d9 : adc eax, 0x3715bf ; ret
0x000000000001f909 : adc eax, 0x380a3a ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000f4e8c : adc eax, 0x39f8f ; cmove rax, rdx ; ret
0x000000000009a25a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000107f67 : adc eax, 0x4800297e ; add esp, 8 ; ret
0x00000000000fe12b : adc eax, 0x5b01002a ; ret
0x0000000000094e48 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000009655c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x0000000000174145 : adc eax, 0x73980000 ; jmp 0x174151
0x00000000001740ed : adc eax, 0x78800000 ; std ; call qword ptr [rcx]
0x000000000011faf1 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000ed28c : adc eax, 0x8948002b ; ret 0x8d48
0x000000000018411d : adc eax, 0xa9800001 ; hlt ; jmp qword ptr [rsi]
0x0000000000171a9d : adc eax, 0xab5c0002 ; stc ; call rsp
0x0000000000081be6 : adc eax, 0xad245 ; cmove rax, rdx ; ret
0x000000000009a55a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000c2f87 : adc eax, 0xf6000001 ; ret
0x00000000000666e1 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000012373e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121cf9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000005c80 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000030625 : adc eax, dword ptr [rax] ; mov rdi, rbx ; call 0x7c867
0x0000000000032abc : adc eax, dword ptr [rax] ; mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00000000000325de : adc eax, dword ptr [rax] ; orpd xmm0, xmm1 ; ret
0x000000000002b52d : adc eax, dword ptr [rax] ; ret
0x00000000000dea9c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000000c17ac : adc eax, dword ptr [rbx + 0x67403f8] ; ret
0x0000000000091058 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000012512f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000042069 : adc eax, eax ; ret
0x00000000000421a6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x000000000015b065 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000000f7250 : adc ebp, ebx ; ret 0x1f0f
0x0000000000040aed : adc ebp, ecx ; ret
0x000000000009e11a : adc ebp, ecx ; rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000001764e1 : adc ebp, esp ; call qword ptr [rax]
0x00000000001764f9 : adc ebp, esp ; call qword ptr [rdx]
0x00000000000eae6c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x0000000000116dde : adc ecx, dword ptr [rax + 0x39] ; ret
0x000000000002b51b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x00000000000728fa : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000000abac0 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a5551 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000009ac34 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x000000000008b81f : adc ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000009c2f9 : adc ecx, dword ptr [rcx - 0x77] ; ret 0x8b8
0x000000000010a0b0 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000374c8 : adc ecx, dword ptr [rdi] ; test dword ptr [rbx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000036ff8 : adc ecx, dword ptr [rdi] ; test dword ptr [rdx + rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000091224 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x0000000000091244 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x0000000000091264 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000910ae : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000171e29 : adc edi, edx ; call rsp
0x000000000015c57e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000016fd51 : adc esi, esi ; call rsp
0x000000000006702a : adc esi, esi ; ret 0xf20
0x000000000016c1c1 : adc esp, edi ; jmp qword ptr [rax]
0x0000000000125312 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000008e4c6 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000008e161 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000008e125 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000008e628 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000098d2e : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000098dcb : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000098bcd : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000081cd3 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000666e0 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000121e60 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000041034 : adc r8b, byte ptr [r8] ; mov rax, rbx ; pop rbx ; ret
0x00000000000421a5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001764f8 : adc rbp, rsp ; call qword ptr [rdx]
0x0000000000081d5f : adc sil, r15b ; ret
0x00000000001845b0 : add ah, 0xf4 ; call rdx
0x0000000000174143 : add ah, ah ; adc eax, 0x73980000 ; jmp 0x174153
0x0000000000172c43 : add ah, ah ; add byte ptr [rax], al ; add al, cl ; fucomi st(2) ; call qword ptr [rsi]
0x0000000000185143 : add ah, ah ; and eax, 0x4ed80001 ; cmc ; jmp qword ptr [rcx]
0x0000000000184f43 : add ah, ah ; and eax, dword ptr [rcx] ; add al, bh ; cmc ; call qword ptr [rax]
0x0000000000186843 : add ah, ah ; cmp al, 1 ; add byte ptr [rax - 0x5e], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000193643 : add ah, ah ; or al, byte ptr [rdx] ; add byte ptr [rax - 0x6f], bh ; clc ; call qword ptr [rdi]
0x0000000000181243 : add ah, ah ; out 0, al ; add byte ptr [rax + 0x26], ch ; jmp qword ptr [rdi]
0x0000000000188443 : add ah, ah ; pop rax ; add dword ptr [rax], eax ; mov bh, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000188143 : add ah, ah ; push rbp ; add dword ptr [rax], eax ; cwde ; sti ; cmc ; jmp qword ptr [rcx]
0x0000000000179cbb : add ah, ah ; sbb dword ptr [rax], eax ; add byte ptr [rax], dh ; adc al, 0xef ; call qword ptr [rax]
0x0000000000192343 : add ah, ah ; test dword ptr [rcx], 0xf8385800 ; call qword ptr [rdx]
0x0000000000175f43 : add ah, ah ; xor eax, dword ptr [rax] ; add byte ptr [rax], cl ; add ebp, esp ; jmp qword ptr [rsi]
0x0000000000186623 : add ah, al ; cmp al, byte ptr [rcx] ; add byte ptr [rax], ch ; popfq ; cmc ; jmp qword ptr [rcx]
0x0000000000176523 : add ah, al ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], cl ; in al, dx ; call qword ptr [rdx]
0x000000000017c423 : add ah, al ; cwde ; add byte ptr [rax], al ; js 0x17c3d5 ; out dx, eax ; call rsi
0x00000000001844d0 : add ah, al ; hlt ; jmp qword ptr [rcx]
0x0000000000187f23 : add ah, al ; push rbx ; add dword ptr [rax], eax ; test al, 0xf9 ; cmc ; jmp qword ptr [rcx]
0x0000000000187d23 : add ah, al ; push rcx ; add dword ptr [rax], eax ; fsub st(7) ; cmc ; jmp qword ptr [rcx]
0x000000000017ee23 : add ah, al ; ret 0
0x0000000000184423 : add ah, al ; sbb byte ptr [rcx], al ; add byte ptr [rax - 0x3d], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000185623 : add ah, al ; sub al, byte ptr [rcx] ; add byte ptr [rax], cl ; pop rax ; cmc ; jmp qword ptr [rcx]
0x0000000000185923 : add ah, al ; sub eax, 0x64e80001 ; cmc ; jmp qword ptr [rcx]
0x0000000000180323 : add ah, al ; xlatb ; add byte ptr [rax], al ; clc ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rbx]
0x000000000009925e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009927e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000018925b : add ah, bh ; add word ptr [rax], ax ; sal byte ptr [rax], 0xf6 ; call rsi
0x000000000016e737 : add ah, bh ; and al, dh ; call rsp
0x000000000018515b : add ah, bh ; and eax, 0x4ef00001 ; cmc ; jmp qword ptr [rsi]
0x000000000018245b : add ah, bh ; clc ; add byte ptr [rax], al ; mov al, 0x66 ; jmp qword ptr [rdi]
0x0000000000171fb7 : add ah, bh ; cli ; call rsp
0x0000000000099316 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009923d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000016be75 : add ah, bh ; jmp qword ptr [rax]
0x000000000016bf99 : add ah, bh ; push qword ptr [rax] ; add bh, ah ; jmp rax
0x000000000018815b : add ah, bh ; push rbp ; add dword ptr [rax], eax ; mov al, 0xfb ; cmc ; jmp qword ptr [rcx]
0x000000000016ef3f : add ah, bh ; push rcx ; int1 ; jmp rsp
0x000000000017825b : add ah, bh ; push rsi ; add byte ptr [rax], al ; loopne 0x17821f ; out dx, al ; jmp qword ptr [rcx]
0x000000000016e3df : add ah, bh ; ret
0x000000000016dfb7 : add ah, bh ; ret 0xffed
0x000000000016fa67 : add ah, bh ; ret 0xfff4
0x000000000017ec5b : add ah, bh ; rol byte ptr [rax], 0 ; push rax ; iretd ; sti ; call qword ptr [rax]
0x0000000000171e27 : add ah, bl ; adc edi, edx ; call rsp
0x0000000000192e3b : add ah, bl ; add al, byte ptr [rdx] ; add byte ptr [rax + 0x72], al ; clc ; jmp qword ptr [rcx]
0x000000000018713b : add ah, bl ; add dword ptr [r8], r8d ; jo 0x18710e ; cmc ; jmp qword ptr [rcx]
0x000000000017513b : add ah, bl ; and eax, 0xde200000 ; jmp 0x17514b
0x000000000017295f : add ah, bl ; cld ; jmp rsp
0x000000000017653b : add ah, bl ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], dl ; in al, dx ; call qword ptr [rax]
0x0000000000171d67 : add ah, bl ; int1 ; stc ; jmp rsp
0x0000000000172207 : add ah, bl ; jb 0x172209 ; jmp rsp
0x0000000000171937 : add ah, bl ; jl 0x171938 ; jmp rsp
0x000000000017e83b : add ah, bl ; mov esp, 0xdcf00000 ; cld ; call qword ptr [rax]
0x00000000001706ff : add ah, bl ; movsxd rsi, edi ; call rsp
0x000000000016fac7 : add ah, bl ; out dx, al ; hlt ; call rsp
0x0000000000187f3b : add ah, bl ; push rbx ; add dword ptr [rax], eax ; sar cl, 0xf5 ; jmp qword ptr [rcx]
0x000000000017ee3b : add ah, bl ; ret 0
0x00000000001700ef : add ah, bl ; sal dh, cl ; call rsp
0x000000000018443b : add ah, bl ; sbb byte ptr [rcx], al ; add byte ptr [rax - 0x3d], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001716ff : add ah, bl ; sbb cl, bh ; jmp rsp
0x000000000018563b : add ah, bl ; sub al, byte ptr [rcx] ; add byte ptr [rax], ah ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000018593b : add ah, bl ; sub eax, 0x65000001 ; cmc ; jmp qword ptr [rcx]
0x000000000017be3b : add ah, bl ; xchg eax, edx ; add byte ptr [rax], al ; mov al, 0x7c ; out dx, eax ; call qword ptr [rsi]
0x000000000017c7dc : add ah, byte ptr [rbx + 0xa] ; ret
0x000000000016c98c : add ah, byte ptr [rdx - 0x5e6d0004] ; cld ; jmp qword ptr [rdx]
0x0000000000098d2a : add ah, byte ptr [rdx - 0xf] ; jl 0x98d7f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000910ab : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000170e97 : add ah, ch ; add al, bh ; inc esp ; ret 1
0x000000000018674b : add ah, ch ; cmp eax, dword ptr [rcx] ; add al, dh ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000016d637 : add ah, ch ; int1 ; jmp 0x16d63f
0x000000000018824b : add ah, ch ; push rsi ; add dword ptr [rax], eax ; sar ah, 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000170c77 : add ah, ch ; ret
0x000000000016f05f : add ah, ch ; ret 0xfff1
0x000000000016f9c7 : add ah, ch ; scasd eax, dword ptr [rdi] ; hlt ; jmp rsp
0x000000000018574b : add ah, ch ; sub eax, dword ptr [rcx] ; add al, dh ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001709e7 : add ah, ch ; test al, 0xf7 ; call rsp
0x000000000017239f : add ah, ch ; test edx, edi ; jmp rsp
0x000000000016f4bf : add ah, ch ; xchg eax, ebp ; call rsp
0x000000000017c04b : add ah, ch ; xchg eax, esp ; add byte ptr [rax], al ; mov al, 3 ; std ; jmp rsp
0x0000000000186d2b : add ah, cl ; add dword ptr [r8], eax ; mov cl, 0xf5 ; jmp rdi
0x000000000018912b : add ah, cl ; add dword ptr gs:[rax], eax ; nop ; sub esi, esi ; call rdi
0x000000000018772b : add ah, cl ; add qword ptr [r8], rax ; nop ; xlatb ; cmc ; call qword ptr [rdx]
0x000000000018682b : add ah, cl ; cmp al, 1 ; add byte ptr [rax - 0x5e], al ; cmc ; jmp qword ptr [rcx]
0x000000000017274f : add ah, cl ; idiv dl ; call rsp
0x000000000016de2f : add ah, cl ; in eax, dx ; jmp rsp
0x000000000016f837 : add ah, cl ; jp 0x16f833 ; call rsp
0x000000000016fcd7 : add ah, cl ; lodsd eax, dword ptr [rsi] ; cmc ; call rsp
0x0000000000171ce7 : add ah, cl ; loope 0x171ce8 ; jmp rsp
0x000000000018e02b : add ah, cl ; mov ah, 1 ; add al, dl ; idiv al ; call qword ptr [rax]
0x000000000018812b : add ah, cl ; push rbp ; add dword ptr [rax], eax ; cmp bl, 0xf5 ; jmp qword ptr [rcx]
0x000000000018c82b : add ah, cl ; pushfq ; add dword ptr [rax], eax ; or edi, esi ; call qword ptr [rbx]
0x000000000017462b : add ah, cl ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x80], dl ; jmp 0x17463b
0x0000000000170f57 : add ah, cl ; sbb edi, eax ; jmp rsp
0x0000000000172797 : add ah, cl ; std ; cli ; call rsp
0x00000000001703df : add ah, cl ; sub bh, dh ; call rsp
0x0000000000171387 : add ah, cl ; xchg eax, esi ; clc ; jmp rsp
0x0000000000187153 : add ah, dh ; add dword ptr [r8], r8d ; mov ah, al ; cmc ; jmp qword ptr [rcx]
0x0000000000176553 : add ah, dh ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], cl ; in al, dx ; call qword ptr [rdx]
0x0000000000180753 : add ah, dh ; fild dword ptr [rax] ; add al, bh ; jg 0x180755 ; call rsi
0x000000000017ee53 : add ah, dh ; ret 0
0x000000000018ee53 : add ah, dh ; ret 1
0x0000000000185953 : add ah, dh ; sub eax, 0x65180001 ; cmc ; jmp qword ptr [rcx]
0x0000000000182353 : add ah, dh ; test dword ptr [rax], 0xf3607800 ; jmp qword ptr [rcx]
0x000000000017c153 : add ah, dh ; xchg eax, ebp ; add byte ptr [rax], al ; popfq ; cmp edx, ebp ; jmp qword ptr [rax]
0x0000000000186153 : add ah, dh ; xor eax, 0x93480001 ; cmc ; call rdx
0x0000000000176153 : add ah, dh ; xor eax, 0x9780000 ; in al, dx ; jmp qword ptr [rbx]
0x0000000000181f33 : add ah, dl ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xd], dl ; jmp qword ptr [rcx]
0x000000000018b833 : add ah, dl ; mov word ptr [rcx], es ; add byte ptr [rax], bl ; ret
0x000000000017ed33 : add ah, dl ; rol dword ptr [rax], 0 ; or byte ptr [rcx - 0xf], bl ; call rsp
0x0000000000174933 : add ah, dl ; sbb eax, 0x9c980000 ; jmp 0x174943
0x000000000017db33 : add ah, dl ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sub byte ptr [rdx], bl ; cli ; call qword ptr [rax]
0x000000000018b033 : add ah, dl ; test byte ptr [rcx], al ; add byte ptr [rax], ch ; mov dl, 0xf6 ; call qword ptr [rax]
0x000000000010f385 : add al, 0 ; add al, ch ; ret
0x0000000000039b66 : add al, 0 ; add al, ch ; ret 0xff26
0x0000000000044b2b : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001786dd : add al, 0 ; add byte ptr [rax - 0x2c], al ; out dx, al ; jmp rbx
0x00000000000413e3 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000d7c15 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011e0ad : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122bf9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e0d1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011cc6f : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000009a5e3 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000011001b : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000062e5f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c8617 : add al, 0 ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00000000000ca069 : add al, 0 ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000cf9fb : add al, 0 ; add byte ptr [rcx], bh ; ret 0xf74
0x000000000007c256 : add al, 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ef895 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x000000000008d0d4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008d044 : add al, 0 ; mov rax, rdi ; ret
0x00000000000bebe8 : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0xa73
0x00000000000bce2d : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0xb73
0x000000000003fbb1 : add al, 0x10 ; add bl, dh ; ret
0x000000000002c059 : add al, 0x10 ; ret
0x00000000000ead95 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000000eae6b : add al, 0x11 ; ret
0x00000000000992ad : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000047d79 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000008dbf1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000007dc7a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000184364 : add al, 0x18 ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000011495a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000f635d : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000000b4cbf : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000089390 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000b71e1 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d9e1d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000ea464 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000ea4c5 : add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000409aa : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000007ae2e : add al, 0x24 ; je 0x7aef8 ; call rax
0x000000000009aca3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b11b : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020a1a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e7803 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000b8145 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000002074c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002ca23 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002d4f2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000046af7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000175564 : add al, 0x2a ; add byte ptr [rax], al ; test al, 0xe4 ; jmp 0x175572
0x0000000000185764 : add al, 0x2c ; add dword ptr [rax], eax ; or byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000098259 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009826b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008015e : add al, 0x31 ; ret
0x00000000001007d4 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000016f62c : add al, 0x37 ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff3
0x000000000008005a : add al, 0x37 ; ret
0x0000000000176364 : add al, 0x38 ; add byte ptr [rax], al ; or rbp, rsp ; call qword ptr [rax]
0x00000000000d91cd : add al, 0x39 ; ret
0x00000000000c5207 : add al, 0x39 ; ret 0xec7f
0x000000000006a73f : add al, 0x3a ; ret
0x0000000000089974 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00000000000207f2 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000d9203 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d0e5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000008d0f5 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000967fb : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000008d095 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000010248e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x0000000000143b39 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000143b4b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000006a3d3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000068688 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000133f9a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000006917c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000069322 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000006a024 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000008d055 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008cfe5 : add al, 0x48 ; mov eax, edi ; ret
0x000000000007e434 : add al, 0x48 ; xor eax, eax ; ret
0x000000000009b740 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000f01e9 : add al, 0x4e ; lea esp, dword ptr [rbx + rcx] ; jmp 0xf0202
0x00000000000f3734 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000188264 : add al, 0x57 ; add dword ptr [rax], eax ; call 0x22187870
0x000000000001fbe5 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000c186b : add al, 0x5b ; ret
0x0000000000189c77 : add al, 0x5c ; ret
0x0000000000106030 : add al, 0x5f ; call 0x822e4
0x00000000001754cf : add al, 0x60 ; ret
0x000000000017542f : add al, 0x63 ; ret
0x0000000000143b47 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009113c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000032f0d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x000000000019222f : add al, 0x66 ; ret
0x000000000017e307 : add al, 0x71 ; ret
0x00000000000289a2 : add al, 0x72 ; jns 0x29d4bbad ; ret
0x000000000002c06d : add al, 0x72 ; or bl, dh ; ret
0x000000000017fedf : add al, 0x72 ; ret
0x00000000000c1cd5 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xc1ce9 ; xor eax, eax ; ret
0x000000000009a692 : add al, 0x75 ; ret
0x00000000000cbf69 : add al, 0x75 ; ret 0x8b48
0x0000000000079fb4 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000de5e2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002c420 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002c440 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002c380 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002c400 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002c320 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002c3c0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002c360 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002c3a0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002c4c0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002c340 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002c3e0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002c300 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000017b3ef : add al, 0x79 ; ret
0x000000000017e22f : add al, 0x7b ; ret
0x00000000000c1cbf : add al, 0x7c ; out dx, al ; ret
0x000000000005c432 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x0000000000099403 : add al, 0x81 ; je 0x993e5 ; ret
0x000000000011f7db : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000993ff : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x993e9 ; ret
0x00000000001210b3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000008cf09 : add al, 0x82 ; add r10, rax ; jmp r10
0x0000000000064714 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000020dd5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000993b8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x993a8 ; ret
0x00000000000846c7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000006d182 : add al, 0x83 ; loop 0x6d18d ; mov eax, edx ; ret
0x000000000006f6e4 : add al, 0x83 ; loopne 0x6f6ed ; ret
0x000000000009ca9b : add al, 0x83 ; ret 0x4101
0x00000000000c15ba : add al, 0x83 ; ret 0x4801
0x00000000000befda : add al, 0x83 ; ret 0x8d01
0x00000000000f7249 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf721e
0x0000000000099452 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0x99450 ; ret
0x000000000009af5e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x000000000009c0e9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000009ac4e : add al, 0x87 ; test r8d, r8d ; jne 0x9ac28 ; ret
0x0000000000143b36 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000009111b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000008cf87 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00000000000c7bb6 : add al, 0x89 ; ret 0x142b
0x000000000004e907 : add al, 0x89 ; ret 0xea29
0x000000000008cfd2 : add al, 0x8a ; add r10, rax ; jmp r10
0x00000000000993bb : add al, 0x8a ; je 0x993a5 ; ret
0x0000000000091104 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000d9fc7 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x000000000009ac38 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000004e040 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000192b4b : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x0000000000044e58 : add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000017bd64 : add al, 0x92 ; add byte ptr [rax], al ; or byte ptr [rdx - 0x11], bh ; jmp qword ptr [rax]
0x000000000016cc54 : add al, 0x97 ; cld ; push qword ptr [rsi + rdx*4 - 4] ; jmp rsp
0x00000000000eac47 : add al, 0xa ; ret
0x00000000001054bc : add al, 0xa6 ; sub dword ptr [rax], eax ; test eax, eax ; je 0x1054d0 ; ret
0x000000000017d264 : add al, 0xa7 ; add byte ptr [rax], al ; pop rax ; out dx, eax ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000002315 : add al, 0xaa ; ret
0x000000000018d964 : add al, 0xae ; add dword ptr [rax], eax ; sub byte ptr [rdx - 9], dh ; call qword ptr [rcx]
0x000000000017db64 : add al, 0xb0 ; add byte ptr [rax], al ; or byte ptr [rcx - 6], bl ; call qword ptr [rax]
0x000000000002c056 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000001158d3 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002c6a8 : add al, 0xb8 ; ret
0x000000000016d15c : add al, 0xbc ; cld ; call qword ptr [rbx + rdi*4 - 0x3cc50004]
0x0000000000099209 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x0000000000109fe9 : add al, 0xc2 ; jmp rax
0x000000000009ae6b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000033b04 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00000000000b2be3 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000033b47 : add al, 0xd7 ; xor eax, eax ; ret
0x0000000000180664 : add al, 0xdb ; add byte ptr [rax], al ; pop rdx ; jge 0x180664 ; jmp qword ptr [rax]
0x00000000000420fd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x42159
0x000000000004383d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x43899
0x0000000000029b66 : add al, 0xe8 ; test rax, rax ; je 0x29b76 ; call rax
0x00000000000c06d2 : add al, 0xeb ; ret 0xffb8
0x000000000002c325 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000011d8ed : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000012315b : add al, 0xf ; sub rax, r8 ; ret
0x0000000000078571 : add al, 0xf ; test byte ptr [rax - 0x18000000], bl ; ret
0x00000000000d58aa : add al, 0xf ; test byte ptr [rdi - 0x76000003], bl ; ret 0xdb31
0x000000000009a165 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000094c1b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e0999 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000cc99b : add al, 0xf ; xchg eax, esp ; ret 0x9848
0x000000000010f38a : add al, 0xf1 ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134303 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006393b : add al, 0xf3 ; ret
0x0000000000188721 : add al, 0xf6 ; jmp qword ptr [rbx]
0x0000000000081e39 : add al, 0xf6 ; ret 0x7408
0x0000000000182264 : add al, 0xf7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0xd], bl ; jmp qword ptr [rcx]
0x0000000000172839 : add al, 0xfb ; jmp rsp
0x000000000009a198 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000638f9 : add al, 1 ; ret
0x000000000006395a : add al, 1 ; xor eax, eax ; ret
0x000000000017b29f : add al, 2 ; hlt ; ret
0x00000000001840e7 : add al, 2 ; jle 0x1840f9 ; ret
0x000000000018d197 : add al, 2 ; pop rdi ; ret
0x000000000018ddc7 : add al, 2 ; push rbx ; ret
0x000000000008dadc : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xe6e8
0x0000000000148227 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018c9b7 : add al, 3 ; pop rcx ; add dword ptr [rdx], ecx ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x0000000000094d68 : add al, 7 ; add byte ptr [rax], al ; ret
0x000000000007c64d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000bf0ce : add al, 7 ; mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xbf0ff
0x0000000000088e58 : add al, 7 ; ret
0x000000000008d1bf : add al, 7 ; test r8b, r8b ; jne 0x8d1a8 ; ret
0x000000000006ebe3 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000008dd5f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000018806f : add al, ah ; cli ; cmc ; jmp qword ptr [rcx]
0x00000000001928ff : add al, ah ; cwde ; sti ; jmp qword ptr [rdx]
0x000000000017825f : add al, ah ; mov ch, 0xee ; jmp qword ptr [rcx]
0x000000000018afaf : add al, ah ; mov cl, 0xf6 ; call qword ptr [rbx]
0x000000000018b2af : add al, ah ; mov dh, 0xf6 ; jmp rbx
0x0000000000025ae7 : add al, ah ; push qword ptr [rax + rdi*2 - 0x77] ; ret 0xe281
0x0000000000174cdf : add al, ah ; ret 0xffeb
0x0000000000004a5f : add al, ah ; ret 2
0x0000000000009eef : add al, ah ; ret 4
0x00000000001837ef : add al, ah ; sbb al, 0xf4 ; jmp qword ptr [rdi]
0x0000000000187f6f : add al, ah ; stc ; cmc ; call qword ptr [rax]
0x000000000018818f : add al, ah ; sti ; cmc ; jmp qword ptr [rcx]
0x00000000001917cf : add al, ah ; sub bh, al ; call qword ptr [rdx]
0x000000000018628f : add al, ah ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x00000000001738ef : add al, ah ; xor ebx, ebp ; jmp qword ptr [rdi]
0x000000000018871f : add al, al ; add al, 0xf6 ; jmp qword ptr [rbx]
0x0000000000172c8f : add al, al ; fucomi st(2) ; call qword ptr [rax]
0x000000000017f15f : add al, al ; mov ah, 0xf1 ; call rdx
0x0000000000186c9f : add al, al ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018f23f : add al, al ; mov bl, 0xf7 ; jmp rsi
0x00000000001855df : add al, al ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000000056bf : add al, al ; ret
0x0000000000154727 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000187f3f : add al, al ; stc ; cmc ; jmp qword ptr [rcx]
0x000000000017c19f : add al, al ; xchg edi, ebp ; call rax
0x000000000018925f : add al, al ; xor dh, dh ; call rsi
0x0000000000188087 : add al, bh ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000184f47 : add al, bh ; cmc ; call qword ptr [rax]
0x0000000000170e99 : add al, bh ; inc esp ; ret 1
0x0000000000180757 : add al, bh ; jg 0x180751 ; call rsi
0x000000000015d397 : add al, bh ; loope 0x15d39e ; jmp qword ptr [rdi]
0x000000000015d417 : add al, bh ; loope 0x15d41e ; jmp qword ptr [rdi]
0x000000000015d497 : add al, bh ; loope 0x15d49e ; jmp qword ptr [rdi]
0x000000000017f0c7 : add al, bh ; mov cl, 0xf1 ; jmp qword ptr [rbx]
0x000000000001eadf : add al, bh ; ret
0x000000000018b7e7 : add al, bh ; ret 0xfff6
0x000000000016bee4 : add al, bh ; sti ; jmp rax
0x0000000000180327 : add al, bh ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rbx]
0x00000000001862a7 : add al, bh ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x0000000000187807 : add al, bh ; xlatb ; cmc ; call qword ptr [rax]
0x000000000018cd57 : add al, bl ; and bh, dh ; call rsi
0x0000000000185147 : add al, bl ; cmc ; jmp qword ptr [rcx]
0x000000000017d8c7 : add al, bl ; cmp eax, esi ; call qword ptr [rax]
0x0000000000177da7 : add al, bl ; leave ; in eax, dx ; jmp qword ptr [rax]
0x0000000000186cb7 : add al, bl ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x000000000009506b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000e9d73 : add al, bl ; nop dword ptr [rax] ; ret
0x00000000001756c7 : add al, bl ; out 0xeb, al ; jmp qword ptr [rsi]
0x0000000000187d27 : add al, bl ; out 0xf5, eax ; jmp qword ptr [rcx]
0x0000000000178890 : add al, bl ; out dx, al ; call qword ptr [rax]
0x00000000001855f7 : add al, bl ; push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000000724f : add al, bl ; ret
0x000000000017f517 : add al, bl ; ret 0xfff1
0x000000000017d697 : add al, bl ; sub al, dh ; jmp rdx
0x0000000000126212 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017216d : add al, byte ptr [r8] ; fsub qword ptr [rdx - 6] ; call rsp
0x000000000007c5b1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000000dc735 : add al, byte ptr [rax] ; add al, ch ; ret
0x00000000000ce666 : add al, byte ptr [rax] ; add al, ch ; ret 0xf5db
0x000000000002c477 : add al, byte ptr [rax] ; add bl, dh ; ret
0x00000000000a4732 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e7806 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x0000000000081343 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000006ba65 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000787d1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ea0ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000008807f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000ee52b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc3482d3f
0x00000000000229ad : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000036ffc : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000100c88 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000011e24d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120e71 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e271 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000079c3a : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000010e68f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000110b9f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001102ff : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000060046 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5c2b1
0x00000000000e46c2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000108c84 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000b7cf2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000112789 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011495c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000e99f5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000009a5c3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b3382 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c7b8d : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x6b], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000005c755 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x76b742b6], cl ; ret
0x00000000000699c0 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000034439 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014aa34 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000c581e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x000000000002662c : add al, byte ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000000400ae : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000eceb3 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000c3472 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000011b5a1 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; dec dword ptr [rcx - 0x77] ; in al, 0xe8 ; ret 0xf9bb
0x0000000000023c8b : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret
0x0000000000171fb6 : add al, byte ptr [rax] ; cld ; cli ; call rsp
0x00000000001719ae : add al, byte ptr [rax] ; cmp al, 0x92 ; stc ; jmp rsp
0x0000000000171b66 : add al, byte ptr [rax] ; cmp al, 0xbd ; stc ; jmp rsp
0x0000000000172af6 : add al, byte ptr [rax] ; cmp al, 0xee ; std ; jmp rsp
0x0000000000171e26 : add al, byte ptr [rax] ; fcom qword ptr [rbx] ; cli ; call rsp
0x0000000000172206 : add al, byte ptr [rax] ; fdiv qword ptr [rdx - 6] ; jmp rsp
0x0000000000171d66 : add al, byte ptr [rax] ; fdivr st(1), st(0) ; stc ; jmp rsp
0x000000000017216e : add al, byte ptr [rax] ; fsub qword ptr [rdx - 6] ; call rsp
0x000000000017239e : add al, byte ptr [rax] ; in al, dx ; test edx, edi ; jmp rsp
0x0000000000172836 : add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; add al, 0xfb ; jmp rsp
0x0000000000172246 : add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ja 0x17224a ; call rsp
0x00000000001724be : add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; mov bl, 0xfa ; jmp rsp
0x000000000017250e : add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x0000000000192e3e : add al, byte ptr [rax] ; jb 0x192e40 ; jmp qword ptr [rcx]
0x0000000000171c06 : add al, byte ptr [rax] ; jl 0x171bdf ; stc ; jmp rsp
0x0000000000171ee6 : add al, byte ptr [rax] ; jl 0x171f14 ; cli ; jmp rsp
0x00000000001724fe : add al, byte ptr [rax] ; jl 0x1724c6 ; cli ; call rsp
0x0000000000102112 : add al, byte ptr [rax] ; jne 0x102166 ; mov eax, r8d ; ret
0x0000000000193646 : add al, byte ptr [rax] ; js 0x1935e0 ; clc ; call qword ptr [rdi]
0x000000000008d0b5 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000017272e : add al, byte ptr [rax] ; lodsb al, byte ptr [rsi] ; cmc ; cli ; call rsp
0x000000000008d025 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000017185e : add al, byte ptr [rax] ; mov word ptr [rax - 7], ss ; call rsp
0x0000000000146f3b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000171f36 : add al, byte ptr [rax] ; or al, 0x30 ; cli ; call rsp
0x0000000000171fde : add al, byte ptr [rax] ; or al, 0x49 ; cli ; call rsp
0x00000000001725e6 : add al, byte ptr [rax] ; or al, 0xd1 ; cli ; jmp rsp
0x00000000001726ae : add al, byte ptr [rax] ; or al, 0xef ; cli ; call rsp
0x0000000000192e06 : add al, byte ptr [rax] ; or byte ptr [rdx - 8], dh ; call qword ptr [rax]
0x00000000000fbaa9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e6202 : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001720d6 : add al, byte ptr [rax] ; pop rsp ; pop rdx ; cli ; jmp rsp
0x0000000000171a9e : add al, byte ptr [rax] ; pop rsp ; stosd dword ptr [rdi], eax ; stc ; call rsp
0x0000000000193967 : add al, byte ptr [rax] ; ret
0x0000000000193987 : add al, byte ptr [rax] ; ret 0x503
0x0000000000171a7e : add al, byte ptr [rax] ; sbb al, 0xaa ; stc ; call rsp
0x0000000000171cc6 : add al, byte ptr [rax] ; sbb al, 0xdf ; stc ; jmp rsp
0x00000000001718ae : add al, byte ptr [rax] ; sub al, 0x61 ; stc ; call rsp
0x00000000001724de : add al, byte ptr [rax] ; sub al, 0xba ; cli ; jmp rsp
0x00000000001068dc : add al, byte ptr [rbx + 0x5d4101e8] ; pop r14 ; ret
0x0000000000186051 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000000a8858 : add al, byte ptr [rcx + 0x29] ; ret
0x00000000000f3dee : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000174238 : add al, byte ptr [rcx + 0xa] ; ret
0x00000000000d273d : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8944
0x0000000000102294 : add al, byte ptr [rcx - 0x77] ; add byte ptr [rcx + 0x11894dd0], cl ; ret
0x0000000000053869 : add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00000000000c5444 : add al, byte ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000179240 : add al, byte ptr [rdi + 0xa] ; ret
0x0000000000192e3d : add al, byte ptr [rdx] ; add byte ptr [rax + 0x72], al ; clc ; jmp qword ptr [rcx]
0x0000000000192e05 : add al, byte ptr [rdx] ; add byte ptr [rax], cl ; jb 0x192e09 ; call qword ptr [rax]
0x0000000000177556 : add al, byte ptr [rdx] ; mov dl, 0xa ; ret
0x000000000017996d : add al, byte ptr [rdx] ; pop rbp ; ret
0x0000000000183217 : add al, byte ptr [rdx] ; push rdi ; ret
0x000000000017e7bd : add al, byte ptr [rdx] ; ret
0x000000000018d4c5 : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x0000000000066745 : add al, byte ptr [rip + 0x5b000000] ; ret
0x000000000019371d : add al, byte ptr [rsi + rcx + 0x10] ; ret
0x0000000000094e6a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000001720d5 : add al, byte ptr ds:[rax] ; pop rsp ; pop rdx ; cli ; jmp rsp
0x00000000001736b7 : add al, ch ; adc bl, ch ; call rsi
0x00000000001733b7 : add al, ch ; add ebx, ebp ; jmp rbx
0x0000000000188267 : add al, ch ; cld ; cmc ; jmp qword ptr [rcx]
0x0000000000185927 : add al, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000067a13 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000bab06 : add al, ch ; hlt ; sbb bh, ah ; dec dword ptr [rax - 0x77] ; ret 0x1deb
0x000000000011643e : add al, ch ; in al, dx ; xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bb3bd : add al, ch ; int 0xda
0x00000000000416bb : add al, ch ; jmp qword ptr [rsi]
0x000000000017bbd7 : add al, ch ; js 0x17bbce ; jmp qword ptr [rdx]
0x0000000000185ed7 : add al, ch ; mov ch, dh ; jmp rcx
0x000000000018af97 : add al, ch ; mov cl, 0xf6 ; call qword ptr [rax]
0x000000000017d4b7 : add al, ch ; or eax, esi ; call qword ptr [rdx]
0x00000000001852d7 : add al, ch ; push rax ; cmc ; jmp qword ptr [rcx]
0x0000000000173d77 : add al, ch ; push rbp ; jmp 0x173d7f
0x000000000005cdb7 : add al, ch ; ret
0x0000000000024a68 : add al, ch ; ret 0x77
0x00000000000732f8 : add al, ch ; ret 0x80a
0x00000000000576d8 : add al, ch ; ret 0x936
0x00000000000e5db8 : add al, ch ; ret 0xd9
0x0000000000105fb8 : add al, ch ; ret 0xf198
0x00000000000c4188 : add al, ch ; ret 0xf5b6
0x00000000000ce668 : add al, ch ; ret 0xf5db
0x0000000000039c68 : add al, ch ; ret 0xff25
0x0000000000039b68 : add al, ch ; ret 0xff26
0x00000000000f95f8 : add al, ch ; ret 0xffa7
0x00000000001773f7 : add al, ch ; ret 0xffec
0x000000000018b7b7 : add al, ch ; ret 0xfff6
0x0000000000067b64 : add al, ch ; ret 8
0x000000000007881c : add al, ch ; sahf ; ret 0xffff
0x000000000011adbc : add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000000000bff7f : add al, ch ; stosd dword ptr [rdi], eax ; ret 0xfff6
0x0000000000188537 : add al, cl ; add dh, dh ; jmp qword ptr [rcx]
0x0000000000187e37 : add al, cl ; clc ; cmc ; jmp qword ptr [rcx]
0x0000000000186b27 : add al, cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rsi]
0x0000000000174fb7 : add al, cl ; fldpi ; call qword ptr [rdx]
0x0000000000172c47 : add al, cl ; fucomi st(2) ; call qword ptr [rsi]
0x0000000000183d17 : add al, cl ; jb 0x183d13 ; jmp rcx
0x000000000017aaa7 : add al, cl ; out dx, eax ; call rbx
0x00000000001865c7 : add al, cl ; pushfq ; cmc ; jmp qword ptr [rbx]
0x000000000001ea97 : add al, cl ; ret
0x0000000000188177 : add al, cl ; sti ; cmc ; jmp qword ptr [rcx]
0x000000000018515f : add al, dh ; cmc ; jmp qword ptr [rsi]
0x000000000017e83f : add al, dh ; fdiv st(4), st(0) ; call qword ptr [rax]
0x0000000000182a6f : add al, dh ; fpatan ; call qword ptr [rsi]
0x000000000019006f : add al, dh ; in eax, 0xf7 ; call qword ptr [rdx]
0x0000000000177c6f : add al, dh ; jo 0x177c64 ; call rdx
0x000000000018af7f : add al, dh ; mov cl, 0xf6 ; call qword ptr [rax]
0x0000000000187d3f : add al, dh ; out 0xf5, eax ; jmp qword ptr [rcx]
0x000000000018574f : add al, dh ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x000000000018560f : add al, dh ; push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000017ed1f : add al, dh ; push rdx ; int1 ; jmp qword ptr [rbx]
0x0000000000007897 : add al, dh ; ret
0x0000000000006d27 : add al, dh ; ret 0x10
0x000000000018b7cf : add al, dh ; ret 0xfff6
0x0000000000008d7f : add al, dh ; ret 2
0x0000000000008167 : add al, dh ; ret 4
0x000000000018674f : add al, dh ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000018833f : add al, dh ; std ; cmc ; jmp qword ptr [rcx]
0x000000000018824f : add al, dl ; cld ; cmc ; jmp qword ptr [rcx]
0x0000000000174fcf : add al, dl ; fldpi ; call qword ptr [rdx]
0x000000000018e02f : add al, dl ; idiv al ; call qword ptr [rax]
0x00000000001803cf : add al, dl ; jbe 0x1803c9 ; jmp rcx
0x000000000018848f : add al, dl ; push rbp ; call qword ptr [rsi]
0x0000000000005737 : add al, dl ; ret
0x000000000017f4ff : add al, dl ; ret 0xfff1
0x000000000019257f : add al, dl ; wait ; sti ; jmp qword ptr [rdx]
0x000000000016cfd0 : add bh, 0xfc ; call qword ptr [rax]
0x000000000016bd18 : add bh, 0xfd ; jmp qword ptr [rax]
0x000000000016bf7d : add bh, ah ; call qword ptr [rax]
0x000000000016be79 : add bh, ah ; jmp qword ptr [rax]
0x000000000016bf9d : add bh, ah ; jmp rax
0x00000000000215bf : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016cdd8 : add bh, al ; cld ; call qword ptr [rax + 0x26fffcc6]
0x000000000014c50f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011a1e9 : add bh, bh ; and eax, 0x27f750 ; ret
0x00000000001939ab : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x000000000010dafc : add bh, bh ; loope 0x10da95 ; ret
0x00000000000a762a : add bh, bh ; ret
0x00000000001727d9 : add bh, bl ; jmp rsp
0x00000000000d9db2 : add bh, byte ptr [rax + 0x16] ; jbe 0xd9dc9 ; ret
0x00000000000d3e5c : add bh, byte ptr [rax + 0xf] ; je 0xd3eb9 ; ret
0x0000000000043950 : add bh, byte ptr [rax + 1] ; ret
0x0000000000070232 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000003322b : add bh, byte ptr [rax - 1] ; ret
0x0000000000179d04 : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000014ae02 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000018a7dc : add bh, byte ptr [rdx + 0x41200e0a] ; ret
0x00000000001840e8 : add bh, byte ptr [rsi + 0xa] ; ret
0x00000000000c4b3d : add bh, dh ; ret
0x0000000000025686 : add bh, dh ; ret 0
0x000000000002567a : add bh, dh ; ret 0xf800
0x000000000009a2d9 : add bl, al ; lea rax, qword ptr [rip + 0xac5be] ; ret
0x000000000009aead : add bl, al ; lea rax, qword ptr [rip + 0xaff6a] ; ret
0x000000000008162d : add bl, al ; lea rax, qword ptr [rip + 0xc807a] ; ret
0x00000000000b99ec : add bl, al ; mov eax, 0xffffffff ; ret
0x000000000009c0c1 : add bl, al ; mov eax, 2 ; ret
0x000000000006d08c : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000b892c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000df36d : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000c1b21 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000033dfb : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007c13c : add bl, al ; ret
0x000000000011047e : add bl, al ; xor eax, eax ; ret
0x0000000000161457 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000105010 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000174cc5 : add bl, byte ptr [rax + 0xa] ; ret
0x000000000018a1d5 : add bl, byte ptr [rbp + 0xa] ; ret
0x000000000006aeca : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105011 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000160360 : add bl, byte ptr [rbx] ; cmc ; push rbx ; sbb dh, ch ; jmp qword ptr [rax]
0x0000000000179977 : add bl, byte ptr [rcx + 0xa] ; ret
0x0000000000183402 : add bl, byte ptr [rdx + 0x44380e0a] ; ret
0x000000000017b1dd : add bl, byte ptr [rdx + 0xa] ; ret
0x00000000000265c8 : add bl, ch ; adc al, byte ptr [rdi + rcx - 0x4a] ; add dword ptr [rcx - 0x7d], ecx ; ret
0x00000000001941e7 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00000000000cbfbc : add bl, ch ; mov cs, word ptr [rax + 0x63] ; ret 0x8b48
0x000000000007b344 : add bl, ch ; ret
0x00000000000c28f1 : add bl, ch ; ret 0x1f0f
0x00000000000230bb : add bl, ch ; ret 0x3145
0x000000000016cfb0 : add bl, cl ; cld ; call qword ptr [rax + 0x20fffcca]
0x000000000009541f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009542f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000032abd : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000002a6e7 : add bl, dh ; ret
0x0000000000030fae : add bl, sil ; ret
0x00000000000e44e5 : add byte ptr [r13 + 0x395274c0], r8b ; ret
0x000000000014babc : add byte ptr [r13 + rax - 0x18], r14b ; ret
0x00000000000b8a97 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010159c : add byte ptr [r8 + 1], r9b ; ret
0x000000000004b60f : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23dfe21
0x00000000000b567c : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000238c5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x000000000006d3b0 : add byte ptr [r8], r8b ; mov edx, eax ; jmp 0x6d353
0x00000000001778e5 : add byte ptr [r8], r8b ; or byte ptr [rdx - 0x13], cl ; call qword ptr [rcx]
0x00000000000e4530 : add byte ptr [r9], r15b ; ret
0x00000000001764f7 : add byte ptr [rax + 0x13], cl ; in al, dx ; call qword ptr [rdx]
0x00000000001764df : add byte ptr [rax + 0x13], dl ; in al, dx ; call qword ptr [rax]
0x000000000007ac17 : add byte ptr [rax + 0x16], bh ; ret
0x000000000003298b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x0000000000179e87 : add byte ptr [rax + 0x21], cl ; out dx, eax ; call rdx
0x0000000000181277 : add byte ptr [rax + 0x26], ch ; call qword ptr [rbx]
0x0000000000181247 : add byte ptr [rax + 0x26], ch ; jmp qword ptr [rdi]
0x000000000018128f : add byte ptr [rax + 0x26], dh ; call qword ptr [rbx]
0x000000000014b56f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00000000000307d7 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000cbd42 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000ac455 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002831f : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000000c86c7 : add byte ptr [rax + 0x29], cl ; ret 0x44c7
0x000000000004c181 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000005e337 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000275a7 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000181537 : add byte ptr [rax + 0x2c], cl ; jmp rcx
0x0000000000191d17 : add byte ptr [rax + 0x32], bh ; clc ; call qword ptr [rcx]
0x0000000000192347 : add byte ptr [rax + 0x38], bl ; clc ; call qword ptr [rdx]
0x000000000002653f : add byte ptr [rax + 0x39], cl ; ret
0x0000000000074f82 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000002a74e : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000a9644 : add byte ptr [rax + 0x39], cl ; ret 0x940f
0x00000000000f3ff1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000000f40b0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000010759f : add byte ptr [rax + 0x39], cl ; ret 0xf375
0x000000000016b315 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000006d756 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000001850f7 : add byte ptr [rax + 0x4e], ch ; cmc ; call qword ptr [rcx]
0x00000000001850df : add byte ptr [rax + 0x4e], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000181e37 : add byte ptr [rax + 0x50], ch ; jmp qword ptr [rcx]
0x0000000000185337 : add byte ptr [rax + 0x51], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000185477 : add byte ptr [rax + 0x53], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018201f : add byte ptr [rax + 0x56], dh ; jmp qword ptr [rcx]
0x0000000000068735 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x000000000001f90d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000662a7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000017b317 : add byte ptr [rax + 0x5d], cl ; out dx, eax ; call rcx
0x00000000000e7808 : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000001822df : add byte ptr [rax + 0x60], ah ; jmp qword ptr [rcx]
0x00000000001822f7 : add byte ptr [rax + 0x60], bh ; jmp qword ptr [rcx]
0x000000000002cd40 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000550ec : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000005c9c8 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000b8f6a : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000000794c6 : add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000005c42f : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x0000000000064d5b : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000064163 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000044e55 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x0000000000099206 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x0000000000064ea0 : add byte ptr [rax + 0x63], cl ; or al, 0x8e ; add rsi, rcx ; jmp rsi
0x0000000000044b2d : add byte ptr [rax + 0x63], cl ; ret
0x000000000006424a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000f2465 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000004e11a : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000000c1aef : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000004cc47 : add byte ptr [rax + 0x63], cl ; ret 0x8d49
0x000000000006a70f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000044e9f : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000176bef : add byte ptr [rax + 0x64], dh ; cli ; jmp qword ptr [rcx]
0x000000000018599f : add byte ptr [rax + 0x65], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001859b7 : add byte ptr [rax + 0x65], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000185987 : add byte ptr [rax + 0x65], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000b815f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000000b817f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000017b57f : add byte ptr [rax + 0x68], dl ; out dx, eax ; call qword ptr [rdx]
0x00000000000b816f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000b818f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000000b814f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000000b814e : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00000000000b839f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x0000000000192e3f : add byte ptr [rax + 0x72], al ; clc ; jmp qword ptr [rcx]
0x000000000007c5af : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000693d3 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000685b3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x000000000009596f : add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000173dc7 : add byte ptr [rax + 0x7a], bl ; std ; jmp qword ptr [rdi]
0x000000000017428f : add byte ptr [rax + 0x7d], dh ; jmp 0x174297
0x00000000001931cf : add byte ptr [rax + 0x7e], ah ; clc ; call rbx
0x00000000000b8927 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000b887a : add byte ptr [rax + 0x7f], bh ; ret
0x0000000000065a6a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000006d87a : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x000000000006d351 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000001762bf : add byte ptr [rax + 0xa], al ; in al, dx ; call qword ptr [rsi]
0x000000000017637f : add byte ptr [rax + 0xb], al ; in al, dx ; call qword ptr [rdx]
0x0000000000176367 : add byte ptr [rax + 0xb], cl ; in al, dx ; call qword ptr [rax]
0x00000000000a83ef : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x00000000000a83ee : add byte ptr [rax + 0xc9], dil ; syscall ; ret
0x00000000000e7bdf : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x000000000006923c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000006d9bc : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000179a7f : add byte ptr [rax + 0xe], ah ; out dx, eax ; jmp qword ptr [rdx]
0x000000000002c3c4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000007ffc5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000e0b18 : add byte ptr [rax + 0xf], cl ; ret
0x000000000008109b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000119b84 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000ef9bb : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x000000000004ad8b : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000dcb8e : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000a9846 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000081bea : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000dcb0c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000024ba7 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000027124 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000025ecb : add byte ptr [rax + 0xf], cl ; ret 0xf685
0x00000000000b6eed : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000103e0c : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x0000000000034873 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000000b893f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000dd0dc : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000043985 : add byte ptr [rax + 1], bh ; ret
0x0000000000081345 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000086e23 : add byte ptr [rax + 1], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000002362c : add byte ptr [rax + 1], cl ; ret
0x0000000000037e9f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000a7a3c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000107af : add byte ptr [rax + 1], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006ebce : add byte ptr [rax + 1], dil ; ret
0x000000000010a1ff : add byte ptr [rax + 2], bh ; ret
0x00000000000b8b16 : add byte ptr [rax + 7], bh ; ret
0x0000000000176157 : add byte ptr [rax + 9], bh ; in al, dx ; jmp qword ptr [rbx]
0x00000000001536cb : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x0000000000176beb : add byte ptr [rax + rax*2 + 0x64700000], cl ; cli ; jmp qword ptr [rcx]
0x000000000016e1cf : add byte ptr [rax + rax*4 - 0x11], bl ; call rsp
0x000000000016e3a7 : add byte ptr [rax + rax*8], bh ; out dx, eax ; call rsp
0x0000000000094fec : add byte ptr [rax + rax], 0 ; ret
0x0000000000194dfb : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; ret 7
0x0000000000062e5e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000018ee9f : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; ret
0x000000000018ee4f : add byte ptr [rax + rax], cl ; add ah, dh ; ret 1
0x0000000000076f57 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000077439 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017ee4f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret 0
0x000000000017ee07 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000017eda7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x000000000017edef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000009ab95 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001710df : add byte ptr [rax + rbp*2 - 8], bl ; call rsp
0x000000000017d3bb : add byte ptr [rax + rbp*4], bl ; add byte ptr [rax], dl ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000171607 : add byte ptr [rax + rbp*8], bh ; clc ; jmp rsp
0x000000000019138b : add byte ptr [rax + rbp*8], ch ; add dword ptr [rax], eax ; loopne 0x1913b9 ; clc ; call qword ptr [rdx]
0x0000000000175393 : add byte ptr [rax + rbp], dh ; add byte ptr [rax], al ; cwde ; loope 0x17538e ; jmp qword ptr [rcx]
0x00000000001843a3 : add byte ptr [rax + rbx + 1], al ; add byte ptr [rax - 0x3d], bl ; hlt ; call qword ptr [rbx]
0x00000000001843e3 : add byte ptr [rax + rbx - 0x3ca7ffff], al ; hlt ; call qword ptr [rsi]
0x00000000001883e3 : add byte ptr [rax + rbx*2 - 0x107ffff], al ; cmc ; jmp qword ptr [rcx]
0x00000000001883fb : add byte ptr [rax + rbx*2 - 0xefffff], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001803cb : add byte ptr [rax + rbx*8], ch ; add al, dl ; jbe 0x1803cd ; jmp rcx
0x0000000000184383 : add byte ptr [rax + rbx], ah ; add dword ptr [rax], eax ; pop rax ; ret
0x0000000000184363 : add byte ptr [rax + rbx], al ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000001733eb : add byte ptr [rax + rcx + 0x2a00000], cl ; jmp 0x1733fb
0x0000000000068b35 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000e295d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x000000000003fd36 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000016fba7 : add byte ptr [rax + rcx*2], bl ; cmc ; call rsp
0x000000000017b40b : add byte ptr [rax + rcx*4 + 0x61b00000], ch ; out dx, eax ; jmp qword ptr [rsi]
0x000000000017f413 : add byte ptr [rax + rcx*8 - 0x40580000], dh ; int1 ; call qword ptr [rdx]
0x000000000017f3e3 : add byte ptr [rax + rcx*8 - 0x40680000], al ; int1 ; call qword ptr [rsi]
0x000000000016fa97 : add byte ptr [rax + rcx*8], bh ; hlt ; call rsp
0x00000000001733b3 : add byte ptr [rax + rcx], dl ; add al, ch ; add ebx, ebp ; jmp rbx
0x00000000001863b3 : add byte ptr [rax + rdi + 1], dl ; add byte ptr [rax], ch ; cwde ; cmc ; jmp qword ptr [rcx]
0x000000000016d38f : add byte ptr [rax + rdi - 0x15], cl ; call rsp
0x000000000018a3f3 : add byte ptr [rax + rdi*2 + 0x31a80001], dl ; stc ; jmp qword ptr [rsi]
0x0000000000182383 : add byte ptr [rax + rdi*8], ah ; add byte ptr [rax], al ; test al, 0x60 ; jmp qword ptr [rcx]
0x000000000019238b : add byte ptr [rax + rdi*8], ch ; add dword ptr [rax], eax ; mov al, 0x38 ; clc ; jmp qword ptr [rcx]
0x0000000000176363 : add byte ptr [rax + rdi], al ; add byte ptr [rax], al ; or rbp, rsp ; call qword ptr [rax]
0x000000000017637b : add byte ptr [rax + rdi], bl ; add byte ptr [rax], al ; or ebp, esp ; call qword ptr [rdx]
0x00000000001763ab : add byte ptr [rax + rdi], cl ; add byte ptr [rax + 0xb], al ; in al, dx ; call qword ptr [rdx]
0x0000000000176393 : add byte ptr [rax + rdi], dh ; add byte ptr [rax], al ; or rbp, rsp ; call qword ptr [rax]
0x0000000000154877 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000016e8ff : add byte ptr [rax + rdx*2 - 0x10], bl ; call rsp
0x000000000017bbeb : add byte ptr [rax + rdx*4 + 0x79000000], cl ; out dx, eax ; jmp qword ptr [rbx]
0x000000000017bbd3 : add byte ptr [rax + rdx*4], dh ; add al, ch ; js 0x17bbd2 ; jmp qword ptr [rdx]
0x0000000000171c07 : add byte ptr [rax + rdx*8 - 7], bh ; jmp rsp
0x000000000017077f : add byte ptr [rax + rsi*2 - 9], cl ; jmp rsp
0x000000000017dbf3 : add byte ptr [rax + rsi*4 + 0x35180000], dl ; cli ; call qword ptr [rax]
0x000000000017db63 : add byte ptr [rax + rsi*4], al ; add byte ptr [rax], al ; or byte ptr [rcx - 6], bl ; call qword ptr [rax]
0x000000000017db93 : add byte ptr [rax + rsi*4], dh ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x10], cl ; call qword ptr [rax]
0x0000000000181c1b : add byte ptr [rax + rsi*8 + 0x47200000], bh ; call rsi
0x0000000000171f37 : add byte ptr [rax + rsi], cl ; cli ; call rsp
0x000000000017d267 : add byte ptr [rax - 0x11], bl ; out dx, eax ; jmp qword ptr [rcx]
0x000000000010f5b6 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894d
0x00000000000f1372 : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0xeac1
0x000000000002e349 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b4c
0x0000000000187caf : add byte ptr [rax - 0x19], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187c97 : add byte ptr [rax - 0x19], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018dddf : add byte ptr [rax - 0x1e], dh ; sti ; jmp qword ptr [rdx]
0x0000000000175187 : add byte ptr [rax - 0x22], ch ; jmp 0x17518f
0x00000000001750e7 : add byte ptr [rax - 0x23], cl ; jmp 0x1750ef
0x00000000001788d7 : add byte ptr [rax - 0x28], cl ; out dx, al ; call rdi
0x00000000001786df : add byte ptr [rax - 0x2c], al ; out dx, al ; jmp rbx
0x0000000000033c61 : add byte ptr [rax - 0x2d], cl ; loopne 0x33cb7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000017865f : add byte ptr [rax - 0x2f], ah ; out dx, al ; jmp qword ptr [rax]
0x000000000017ec5f : add byte ptr [rax - 0x31], dl ; sti ; call qword ptr [rax]
0x000000000017f697 : add byte ptr [rax - 0x36], bl ; int1 ; call qword ptr [rax]
0x000000000017f6af : add byte ptr [rax - 0x36], dl ; int1 ; call qword ptr [rdx]
0x000000000017f67f : add byte ptr [rax - 0x36], dl ; int1 ; jmp qword ptr [rax]
0x0000000000177587 : add byte ptr [rax - 0x37], ch ; in al, dx ; jmp qword ptr [rdx]
0x0000000000031ba7 : add byte ptr [rax - 0x39], cl ; ret
0x000000000005564f : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000006ba87 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000009a5cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000009a5af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000009a60f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000009a5bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000009a5ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001871ff : add byte ptr [rax - 0x3b], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187217 : add byte ptr [rax - 0x3b], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001871e7 : add byte ptr [rax - 0x3b], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000184597 : add byte ptr [rax - 0x3c], bh ; hlt ; call qword ptr [rdx]
0x000000000018713f : add byte ptr [rax - 0x3c], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001843a7 : add byte ptr [rax - 0x3d], bl ; hlt ; call qword ptr [rbx]
0x00000000001843e7 : add byte ptr [rax - 0x3d], bl ; hlt ; call qword ptr [rsi]
0x0000000000184427 : add byte ptr [rax - 0x3d], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018443f : add byte ptr [rax - 0x3d], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000a7f15 : add byte ptr [rax - 0x3db2f0b8], al ; pop rbx ; ret
0x0000000000032cf5 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000329ea : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000017f497 : add byte ptr [rax - 0x3f], cl ; int1 ; jmp rdx
0x00000000000b68c9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000017f2c7 : add byte ptr [rax - 0x44], bh ; int1 ; jmp qword ptr [rdi]
0x00000000000383f8 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000017f18f : add byte ptr [rax - 0x4a], al ; int1 ; jmp rsi
0x0000000000186d2f : add byte ptr [rax - 0x4f], al ; cmc ; jmp rdi
0x000000000017c427 : add byte ptr [rax - 0x5d], bh ; out dx, eax ; call rsi
0x000000000018682f : add byte ptr [rax - 0x5e], al ; cmc ; jmp qword ptr [rcx]
0x0000000000186847 : add byte ptr [rax - 0x5e], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001867e7 : add byte ptr [rax - 0x5f], cl ; cmc ; jmp rdx
0x000000000018677f : add byte ptr [rax - 0x61], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000186707 : add byte ptr [rax - 0x62], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000186677 : add byte ptr [rax - 0x63], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000186157 : add byte ptr [rax - 0x6d], cl ; cmc ; call rdx
0x0000000000193647 : add byte ptr [rax - 0x6f], bh ; clc ; call qword ptr [rdi]
0x00000000000eff8a : add byte ptr [rax - 0x71f0ffc8], al ; ret
0x000000000002b527 : add byte ptr [rax - 0x73], cl ; add eax, 0x1384f0 ; ret
0x000000000002082f : add byte ptr [rax - 0x73], cl ; add eax, 0x142d34 ; ret
0x000000000002083f : add byte ptr [rax - 0x73], cl ; add eax, 0x144c00 ; ret
0x000000000010774f : add byte ptr [rax - 0x73], cl ; add eax, 0x5c2c8 ; ret
0x000000000009abdf : add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009abef : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000fec2f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a0b25 ; call rax
0x000000000009abcf : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000010c362 : add byte ptr [rax - 0x73], cl ; jl 0x10c392 ; adc al, ch ; ret
0x00000000000aa362 : add byte ptr [rax - 0x73], cl ; or al, 0x28 ; mov rdx, rax ; jmp 0xaa377
0x00000000000761fa : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000056bf6 : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003f29d : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x00000000000673e8 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x0000000000073348 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe720 ; call rax
0x0000000000072ef8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffeb70 ; call rax
0x0000000000071fe8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x0000000000071da0 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcc8 ; call rax
0x00000000000676e1 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x0000000000109fe6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000001015b2 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 + 1], r9b ; ret
0x00000000000b6a42 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000036211 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000011a242 : add byte ptr [rax - 0x75], cl ; add eax, 0x2821c6 ; call qword ptr [rax]
0x0000000000119c3f : add byte ptr [rax - 0x75], cl ; add eax, 0x2827c9 ; call qword ptr [rax]
0x000000000007367f : add byte ptr [rax - 0x75], cl ; add eax, 0x328e99 ; ret
0x0000000000028c3f : add byte ptr [rax - 0x75], cl ; add eax, 0x373ca9 ; ret
0x000000000002170f : add byte ptr [rax - 0x75], cl ; add eax, 0x37ec39 ; ret
0x00000000000216ff : add byte ptr [rax - 0x75], cl ; add eax, 0x37ec59 ; ret
0x00000000000e0cee : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000006b628 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000c3ce7 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000cd5eb : add byte ptr [rax - 0x75], cl ; jl 0xcd61b ; jo 0xcd5fa ; ret 0xc083
0x0000000000072726 : add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000000ba1b0 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffbd8 ; call r15
0x000000000006c73f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000c4aef : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x0000000000115347 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000e664f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000e6647 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000076aef : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000012b50f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000b4b3f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000e9d38 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000078ccf : add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; jmp rax
0x0000000000054991 : add byte ptr [rax - 0x75], cl ; xor eax, 0x3465d7 ; call rax
0x00000000000497a9 : add byte ptr [rax - 0x75], cl ; xor eax, 0x3517bf ; call rax
0x0000000000046b2d : add byte ptr [rax - 0x75], cl ; xor eax, 0x35443b ; call rax
0x0000000000101f5f : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000e20e0 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000e2672 : add byte ptr [rax - 0x76b80000], al ; ret
0x00000000000f635f : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x000000000011c8a4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000ea007 : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000011ca5f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000007bece : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000f500f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003618f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00000000000736af : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071591 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000630be : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007b589 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; nop ; xor eax, eax ; ret
0x00000000000789d1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007b81a : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x000000000006a493 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006a394 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000031ab7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x000000000011c389 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000008dade : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xe6e8
0x00000000000c18ab : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000002ae34 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000000f5995 : add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf2af
0x000000000006825f : add byte ptr [rax - 0x77], cl ; jmp 0x48f50bb8
0x0000000000065ef5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000006fc93 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000007badb : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000010a4bc : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000108d33 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000108b74 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000f33a1 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r14 ; call rax
0x00000000000765cf : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000078ae0 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000022e06 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000cd8f2 : add byte ptr [rax - 0x77], cl ; ret 0x11e9
0x00000000001053b1 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000074004 : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000413e5 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000666e3 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000031f2a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x0000000000040ec4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000010542c : add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x00000000000f6362 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00000000000aaacf : add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x00000000000c502d : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000002dacf : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000ed393 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000004b8e1 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000000305cc : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000b8f13 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002af0f : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000067298 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4796 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000004bf4e : add byte ptr [rax - 0x77], cl ; ret 0x8ee9
0x00000000000e109a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000b3eee : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x000000000005bb20 : add byte ptr [rax - 0x77], cl ; ret 0xb7e8
0x00000000000e62a5 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000003efaa : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000003fd3a : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000009e0f3 : add byte ptr [rax - 0x77], cl ; ret 0xe929
0x0000000000058abd : add byte ptr [rax - 0x77], cl ; ret 0xeeb
0x0000000000087c43 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007be12 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000f9664 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000011c85c : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000010dbcc : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x10dbe4 ; ret
0x00000000001103cc : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1103e4 ; ret
0x00000000001103e4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1103fc ; ret
0x0000000000110c1c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x110c34 ; ret
0x0000000000110c34 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x110c4c ; ret
0x0000000000110c64 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x110c7c ; ret
0x00000000000f7d4f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000b4cc1 : add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000173217 : add byte ptr [rax - 0x7b], bh ; std ; jmp qword ptr [rdx]
0x00000000001590df : add byte ptr [rax - 0x7b], bl ; in eax, dx ; lcall ptr [rax - 0x7b] ; in eax, dx ; jmp rbx
0x000000000007e42f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000e0d5d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x73], 0x15 ; ret
0x0000000000118755 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000091913 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000715bf : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x0000000000113353 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000ac51a : add byte ptr [rax - 0x7bf0ffc2], al ; ret 0xfff3
0x00000000000378f6 : add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; ret 0x8348
0x00000000001456f7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000004b610 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23dfe20
0x00000000000ee52d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc3482d3d
0x00000000000789f6 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000005bb4b : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x870f
0x000000000007ac4d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002c184 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007642d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000046e31 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000484ed : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000da6cf : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x000000000014c006 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x14c017 ; ret
0x0000000000078b22 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000229af : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000076cd7 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000d34f3 : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000074a8c : add byte ptr [rax - 0x7d], cl ; ret 0x3110
0x000000000009878f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e1607 : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000011454a : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000100b02 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000077459 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000aa627 : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000117bdf : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000000215c5 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7f1f : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000079c3e : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000e933a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000004fc37 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000000ef0b1 : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000008d66f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00000000000238c6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000027f26 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000011d96f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101bff : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000008153f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000000814cf : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000321a9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000009e11f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c6527 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000c93bf : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000024487 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000059847 : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000599cf : add byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x00000000000fdda4 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000011f953 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c5017 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x000000000011d993 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000032007 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000008dc9f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000007e56f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000286bc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000029917 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000067024 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000004009f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000009e3df : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000184f67 : add byte ptr [rax - 0x7f], ch ; stc ; call qword ptr [rax]
0x00000000000a8609 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00000000000416b4 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; jmp qword ptr [rsi]
0x00000000000757f0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000732f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x80a
0x00000000000f95f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xffa7
0x000000000006991c : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000131b2b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006738f : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000001746bf : add byte ptr [rax - 0x80], ah ; jmp 0x1746c7
0x00000000001745ff : add byte ptr [rax - 0x80], al ; jmp 0x174607
0x00000000001746a7 : add byte ptr [rax - 0x80], bl ; jmp 0x1746af
0x0000000000174617 : add byte ptr [rax - 0x80], cl ; jmp 0x17461f
0x0000000000174677 : add byte ptr [rax - 0x80], cl ; jmp 0x17467f
0x000000000017462f : add byte ptr [rax - 0x80], dl ; jmp 0x174637
0x000000000017468f : add byte ptr [rax - 0x80], dl ; jmp 0x174697
0x000000000015f0d0 : add byte ptr [rax - 0xd], ah ; call qword ptr [rax]
0x000000000016f3ef : add byte ptr [rax - 0xd], ch ; call rsp
0x000000000011bb7a : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000031ced : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003325d : add byte ptr [rax - 1], bh ; ret
0x0000000000033f16 : add byte ptr [rax - 1], dil ; ret
0x0000000000188387 : add byte ptr [rax - 2], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018836f : add byte ptr [rax - 2], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001882c7 : add byte ptr [rax - 3], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001881d7 : add byte ptr [rax - 4], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000188117 : add byte ptr [rax - 5], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001880ff : add byte ptr [rax - 5], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000187ef7 : add byte ptr [rax - 7], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000187ec7 : add byte ptr [rax - 7], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018708b : add byte ptr [rax*2 - 0x3d7fffff], ch ; cmc ; call qword ptr [rdx]
0x000000000017b09b : add byte ptr [rax*4 + 0x55900000], bh ; out dx, eax ; call qword ptr [rax]
0x0000000000067a10 : add byte ptr [rax], 0 ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000416b8 : add byte ptr [rax], 0 ; add al, ch ; jmp qword ptr [rsi]
0x00000000000757f4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000732f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x80a
0x00000000000f95f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xffa7
0x0000000000067b61 : add byte ptr [rax], 0 ; add al, ch ; ret 8
0x000000000006399b : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000006b7e9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000f5992 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf2af
0x000000000014c50b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000011589b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000013430b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000e6643 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000009ae5b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002a6e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000007846b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000088dfb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000067ecb : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000075e2b : add byte ptr [rax], 0 ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000690e3 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000078461 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000147241 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000065a6b : add byte ptr [rax], 0 ; je 0x65a80 ; mov eax, edx ; pop rbx ; ret
0x0000000000067e80 : add byte ptr [rax], 0 ; je 0x67e99 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000685b4 : add byte ptr [rax], 0 ; je 0x685c8 ; mov eax, esi ; pop rbx ; ret
0x0000000000068736 : add byte ptr [rax], 0 ; je 0x68748 ; mov eax, esi ; pop rbx ; ret
0x000000000006909a : add byte ptr [rax], 0 ; je 0x690b1 ; mov eax, r8d ; pop rbx ; ret
0x000000000006923d : add byte ptr [rax], 0 ; je 0x69258 ; mov eax, edx ; pop rbx ; ret
0x00000000000693d4 : add byte ptr [rax], 0 ; je 0x693e8 ; mov eax, edx ; pop rbx ; ret
0x000000000006d352 : add byte ptr [rax], 0 ; je 0x6d368 ; mov eax, edx ; pop rbx ; ret
0x000000000006d757 : add byte ptr [rax], 0 ; je 0x6d768 ; mov eax, edx ; pop rbx ; ret
0x000000000006d87b : add byte ptr [rax], 0 ; je 0x6d890 ; mov eax, esi ; pop rbx ; ret
0x000000000006d9bd : add byte ptr [rax], 0 ; je 0x6d9d8 ; mov eax, esi ; pop rbx ; ret
0x000000000006dca2 : add byte ptr [rax], 0 ; je 0x6dcb8 ; mov eax, edx ; pop rbx ; ret
0x000000000006e657 : add byte ptr [rax], 0 ; je 0x6e668 ; mov eax, edx ; pop rbx ; ret
0x000000000006f863 : add byte ptr [rax], 0 ; je 0x6f878 ; mov eax, edx ; pop rbx ; ret
0x00000000001884f0 : add byte ptr [rax], 0xf6 ; jmp qword ptr [rcx]
0x00000000000056bd : add byte ptr [rax], ah ; add al, al ; ret
0x000000000000724d : add byte ptr [rax], ah ; add al, bl ; ret
0x0000000000005735 : add byte ptr [rax], ah ; add al, dl ; ret
0x00000000001884bf : add byte ptr [rax], ah ; add dh, dh ; jmp qword ptr [rcx]
0x000000000018866f : add byte ptr [rax], ah ; add esi, esi ; jmp qword ptr [rcx]
0x00000000000efcff : add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000181c1f : add byte ptr [rax], ah ; call rsi
0x000000000017513f : add byte ptr [rax], ah ; fsubp st(3) ; call qword ptr [rax]
0x000000000018afff : add byte ptr [rax], ah ; mov dl, 0xf6 ; call qword ptr [rax]
0x000000000002c404 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000018563f : add byte ptr [rax], ah ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000000a63f : add byte ptr [rax], ah ; ret
0x000000000000ea37 : add byte ptr [rax], ah ; ret 0x11
0x000000000017ee4e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x000000000017ee06 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000017eda6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000017edee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000173d72 : add byte ptr [rax], al ; adc al, 0x12 ; add byte ptr [rax], al ; call 0x131728db
0x0000000000185472 : add byte ptr [rax], al ; adc al, 0x29 ; add dword ptr [rax], eax ; js 0x1854d6 ; cmc ; jmp qword ptr [rcx]
0x0000000000185572 : add byte ptr [rax], al ; adc al, 0x2a ; add dword ptr [rax], eax ; mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x0000000000176272 : add byte ptr [rax], al ; adc al, 0x37 ; add byte ptr [rax], al ; sbb byte ptr [rdx], cl ; in al, dx ; call qword ptr [rsi]
0x0000000000186672 : add byte ptr [rax], al ; adc al, 0x3b ; add dword ptr [rax], eax ; js 0x186620 ; cmc ; jmp qword ptr [rcx]
0x0000000000186972 : add byte ptr [rax], al ; adc al, 0x3e ; add dword ptr [rax], eax ; test al, 0xa3 ; cmc ; jmp rdx
0x0000000000187272 : add byte ptr [rax], al ; adc al, 0x47 ; add dword ptr [rax], eax ; or dh, al ; cmc ; jmp qword ptr [rdx]
0x0000000000173972 : add byte ptr [rax], al ; adc al, 0xe ; add byte ptr [rax], al ; mov byte ptr [rsi], dh ; jmp 0x173984
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000173dc2 : add byte ptr [rax], al ; adc al, byte ptr fs:[rax] ; add byte ptr [rax + 0x7a], bl ; std ; jmp qword ptr [rdi]
0x000000000017cfce : add byte ptr [rax], al ; adc al, ch ; out dx, eax ; call rax
0x000000000017dbae : add byte ptr [rax], al ; adc byte ptr [rcx - 0x10], cl ; jmp qword ptr [rsi]
0x000000000017d3be : add byte ptr [rax], al ; adc dl, dh ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001764f6 : add byte ptr [rax], al ; adc rbp, rsp ; call qword ptr [rdx]
0x000000000017ee21 : add byte ptr [rax], al ; add ah, al ; ret 0
0x000000000017ee39 : add byte ptr [rax], al ; add ah, bl ; ret 0
0x000000000017ee51 : add byte ptr [rax], al ; add ah, dh ; ret 0
0x000000000018ee51 : add byte ptr [rax], al ; add ah, dh ; ret 1
0x000000000018b831 : add byte ptr [rax], al ; add ah, dl ; mov word ptr [rcx], es ; add byte ptr [rax], bl ; ret
0x0000000000184362 : add byte ptr [rax], al ; add al, 0x18 ; add dword ptr [rax], eax ; pop rax ; ret
0x0000000000175562 : add byte ptr [rax], al ; add al, 0x2a ; add byte ptr [rax], al ; test al, 0xe4 ; jmp 0x175574
0x0000000000185762 : add byte ptr [rax], al ; add al, 0x2c ; add dword ptr [rax], eax ; or byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000176362 : add byte ptr [rax], al ; add al, 0x38 ; add byte ptr [rax], al ; or rbp, rsp ; call qword ptr [rax]
0x0000000000188262 : add byte ptr [rax], al ; add al, 0x57 ; add dword ptr [rax], eax ; call 0x22187872
0x000000000017bd62 : add byte ptr [rax], al ; add al, 0x92 ; add byte ptr [rax], al ; or byte ptr [rdx - 0x11], bh ; jmp qword ptr [rax]
0x000000000017d262 : add byte ptr [rax], al ; add al, 0xa7 ; add byte ptr [rax], al ; pop rax ; out dx, eax ; out dx, eax ; jmp qword ptr [rcx]
0x000000000018d962 : add byte ptr [rax], al ; add al, 0xae ; add dword ptr [rax], eax ; sub byte ptr [rdx - 9], dh ; call qword ptr [rcx]
0x000000000017db62 : add byte ptr [rax], al ; add al, 0xb0 ; add byte ptr [rax], al ; or byte ptr [rcx - 6], bl ; call qword ptr [rax]
0x0000000000180662 : add byte ptr [rax], al ; add al, 0xdb ; add byte ptr [rax], al ; pop rdx ; jge 0x180666 ; jmp qword ptr [rax]
0x0000000000182262 : add byte ptr [rax], al ; add al, 0xf7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0xd], bl ; jmp qword ptr [rcx]
0x000000000001ea7d : add byte ptr [rax], al ; add al, al ; ret
0x000000000015d395 : add byte ptr [rax], al ; add al, bh ; loope 0x15d3a0 ; jmp qword ptr [rdi]
0x000000000015d415 : add byte ptr [rax], al ; add al, bh ; loope 0x15d420 ; jmp qword ptr [rdi]
0x000000000015d495 : add byte ptr [rax], al ; add al, bh ; loope 0x15d4a0 ; jmp qword ptr [rdi]
0x000000000001eadd : add byte ptr [rax], al ; add al, bh ; ret
0x000000000017888e : add byte ptr [rax], al ; add al, bl ; out dx, al ; call qword ptr [rax]
0x000000000001eac5 : add byte ptr [rax], al ; add al, bl ; ret
0x000000000018604f : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x0000000000067a11 : add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000416b9 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rsi]
0x000000000005cdb5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000732f6 : add byte ptr [rax], al ; add al, ch ; ret 0x80a
0x00000000000e5db6 : add byte ptr [rax], al ; add al, ch ; ret 0xd9
0x0000000000105fb6 : add byte ptr [rax], al ; add al, ch ; ret 0xf198
0x00000000000c4186 : add byte ptr [rax], al ; add al, ch ; ret 0xf5b6
0x00000000000f95f6 : add byte ptr [rax], al ; add al, ch ; ret 0xffa7
0x0000000000067b62 : add byte ptr [rax], al ; add al, ch ; ret 8
0x000000000011adba : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000172c45 : add byte ptr [rax], al ; add al, cl ; fucomi st(2) ; call qword ptr [rsi]
0x000000000001ea95 : add byte ptr [rax], al ; add al, cl ; ret
0x000000000001eaad : add byte ptr [rax], al ; add al, dl ; ret
0x000000000014c50d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000010dafa : add byte ptr [rax], al ; add bh, bh ; loope 0x10da97 ; ret
0x00000000000c4b3b : add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000025678 : add byte ptr [rax], al ; add bh, dh ; ret 0xf800
0x00000000000b99ea : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x000000000009c0bf : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000110d2b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000033df9 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007c13a : add byte ptr [rax], al ; add bl, al ; ret
0x000000000011047c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000cbfba : add byte ptr [rax], al ; add bl, ch ; mov cs, word ptr [rax + 0x63] ; ret 0x8b48
0x0000000000104c64 : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000c28ef : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000009541d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009542d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002a6e5 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000011bf5b : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000004edfb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000cbd40 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000ac453 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000004c17f : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000002a74c : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000a9642 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x940f
0x000000000016b313 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000004cc45 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d49
0x000000000006a70d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000044e9d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000009596d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000b8878 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000e0b16 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000119b82 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000ef9b9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000e21ff : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000dcb8c : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000899f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000dcb0a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000024ba5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000027122 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000025ec9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf685
0x00000000000b6eeb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000034871 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000000b893d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000dd0da : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000043983 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000099500 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000002362a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000037e9d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000010a1fd : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000b8b14 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x000000000018ee9d : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; ret
0x000000000018ee4d : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dh ; ret 1
0x000000000017ee4d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret 0
0x000000000017ee05 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000017eda5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x000000000017eded : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000009ab93 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000184381 : add byte ptr [rax], al ; add byte ptr [rax + rbx], ah ; add dword ptr [rax], eax ; pop rax ; ret
0x0000000000184361 : add byte ptr [rax], al ; add byte ptr [rax + rbx], al ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000000df944 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000006b7ea : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000a7f13 : add byte ptr [rax], al ; add byte ptr [rax - 0x3db2f0b8], al ; pop rbx ; ret
0x00000000000329e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f8f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000eff88 : add byte ptr [rax], al ; add byte ptr [rax - 0x71f0ffc8], al ; ret
0x000000000009abdd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009abed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009abcd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000056bf4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e0cec : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000c435d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000cd5e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jl 0xcd61d ; jo 0xcd5fc ; ret 0xc083
0x0000000000072724 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000000e6645 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000076aed : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x00000000000b4b3d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000078ccd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; jmp rax
0x00000000000736ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007b818 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x000000000002ae32 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000000f5993 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf2af
0x000000000007bad9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000010a4ba : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000004107d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cd8f0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x11e9
0x00000000001053af : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000074002 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000aaacd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x00000000000d3ecd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000b8f11 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000067296 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000005bb1e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb7e8
0x00000000000e62a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x0000000000050fcd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000009e0f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe929
0x0000000000087c41 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000113351 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000378f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; ret 0x8348
0x00000000000da6cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x000000000003005d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010419d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000009878d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e166d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000117bdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000000215c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000079c3c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000e9338 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000004fc35 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000000ef0af : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000027f24 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000011f493 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101bfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000008153d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000000814cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000321a7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000009e11d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000024485 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000005fe0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000060f3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x0000000000121011 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f4bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000440a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000008dc9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000002897e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000029915 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000ee625 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000133324 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000031ceb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003325b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000017ee4c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x000000000017ee04 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000017eda4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000017edec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000001ea7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000015d393 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x15d3a2 ; jmp qword ptr [rdi]
0x000000000015d413 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x15d422 ; jmp qword ptr [rdi]
0x000000000015d493 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x15d4a2 ; jmp qword ptr [rdi]
0x000000000001eadb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x000000000001eac3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x000000000001ea93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000001eaab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000009542b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000006d09b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000006a70b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000a7f11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x3db2f0b8], al ; pop rbx ; ret
0x000000000009abdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009abeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009abcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000078ccb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; jmp rax
0x00000000000736ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000074000 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000d3ecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000005bb1c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb7e8
0x0000000000050fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000003005b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009878b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e166b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000117bdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000000fba7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000101bfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000008153b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00000000000814cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000a2b1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000005fe0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000060f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x00000000000d099d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000196330 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000196814 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000015d392 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x15d3a3 ; jmp qword ptr [rdi]
0x000000000015d412 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x15d423 ; jmp qword ptr [rdi]
0x000000000015d492 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x15d4a3 ; jmp qword ptr [rdi]
0x000000000001821a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x14
0x000000000016b18a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000004c4a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019402a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000048a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x12
0x0000000000010f7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x14
0x000000000001c042 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1636
0x0000000000019f42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x163e
0x000000000001aa9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1646
0x00000000000091aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18
0x00000000000077b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x0000000000155552 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000000041b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x27
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000155a42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000006d1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3d
0x0000000000010302 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xc
0x0000000000196816 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000196492 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000194c06 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000981eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000018ee4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; ret 1
0x0000000000036389 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000e38ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000cf47b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000989cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000a89fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000bf8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000011d94b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000007c9eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016b18b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000007176b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000000f5fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000009a58c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000052e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004726e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00000000000e0fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000006f6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000014c50c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000011cc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000015757c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015672c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000015d394 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x15d3a1 ; jmp qword ptr [rdi]
0x000000000015d414 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x15d421 ; jmp qword ptr [rdi]
0x000000000015d494 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x15d4a1 ; jmp qword ptr [rdi]
0x000000000001eadc : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x00000000000de8c7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000e8e67 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000c1b6d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000e0b15 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000899f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000104c63 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x104c31
0x0000000000051fa9 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000009a862 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x9a85f ; ret
0x000000000014965c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000014966c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000014967c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000014968c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014969c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001495dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001495ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001495fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000014960c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000014961c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000014962c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000014963c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000014964c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009abcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009abec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x000000000009abdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x00000000001495cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000014177c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009596c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009436c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009533c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000009503c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000001417bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000001417dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001417ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000d951c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009535c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009537c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009536c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000b893c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007260c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000043982 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000010a1fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000011589c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000c4adc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f724b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf721c
0x000000000013430c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001417ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000115c58 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009539c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000953ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000109bea : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e6644 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000b389c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007369c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000736ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000b73fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call 0x736a9
0x0000000000078ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp] ; jmp rax
0x000000000014178c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009534c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009541c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009542c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007176c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000013445c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000001821c : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x14
0x000000000010ef38 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000115a59 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a7f12 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x0000000000089392 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000e99e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003638a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000072860 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000293d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000016b18c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000016b312 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000004c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019402c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000048a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x12
0x0000000000010f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x14
0x000000000001c044 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1636
0x0000000000019f44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x163e
0x000000000001aa9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1646
0x00000000000091ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18
0x000000000015654c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000156ce4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000000077b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x0000000000155554 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000000041b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x27
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000155a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000006d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3d
0x0000000000010304 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xc
0x0000000000196818 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000196494 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000194c08 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000981ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000036292 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000006fa7c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000088dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000086e82 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x86e93 ; ret
0x00000000000981ed : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000018ee4e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; ret 1
0x000000000002892f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000ae3d3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000087991 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000004e09c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000068c2f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000002bc6e : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x139b
0x0000000000108c85 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x00000000001091c7 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000380a9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x50], cl ; dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x000000000009a863 : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x00000000001779fe : add byte ptr [rax], al ; add byte ptr [rbp - 0x13], ah ; call rdi
0x0000000000098f21 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x00000000000267d2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x1deb
0x000000000008a39d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x8945
0x0000000000079b77 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x88 ; ret
0x000000000005508d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000000c2f91 : add byte ptr [rax], al ; add byte ptr [rbp - 0x9d78b37], al ; ret
0x0000000000063935 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x0000000000099279 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000a8161 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3934245c], cl ; ret
0x00000000000b8336 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000104012 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x4589
0x0000000000103ff2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x4589
0x0000000000133bed : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000028d59 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000020884 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000022976 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000364ed : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x0000000000149378 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000005350c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x0000000000050424 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4b743], al ; call qword ptr [rax]
0x000000000003638b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000004de97 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000cfa2d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00000000000cb23b : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cefdba4], cl ; ret
0x00000000000e38ad : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000075e2c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000002ac9d : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000001417dd : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000001013f8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x6348
0x000000000003891e : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xb7e
0x00000000000679a7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000702e4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000f55ae : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00000000001417bd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009537d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000006cce0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000cf47d : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000afc28 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x000000000004f9f8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000004f9c5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000098f40 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004737e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000002ee77 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret 0x8949
0x00000000000989cd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001844b1 : add byte ptr [rax], al ; add byte ptr [rcx + rbx + 1], dl ; add al, ch ; ret
0x00000000000eee6d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000005ebaf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000c7395 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x3c], cl ; ret 0x448b
0x000000000002d4f5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000000b73fd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x736a8
0x00000000000ca5c8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xca5df
0x00000000000690e4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000078462 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000017bbee : add byte ptr [rax], al ; add byte ptr [rcx - 0x11], bh ; jmp qword ptr [rbx]
0x00000000000d951d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000bad8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret 0x4808
0x000000000003ffd1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000041c5c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000c3427 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000009e788 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000054084 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000bf8ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000879ff : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000008a7d5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x000000000011d94d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000005ec61 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x8304
0x000000000003850e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000007c9ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000a8bed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; rol byte ptr [rcx], 0x4c ; mov edx, eax ; jmp 0xa8c0d
0x0000000000105d61 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x000000000016b18d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000081660 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000081686 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000d3ea7 : add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xd3eef ; ret
0x00000000000c0885 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xc0816
0x0000000000174cd9 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; add al, ah ; ret 0xffeb
0x00000000000a62d5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000cfe4d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000080564 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000adba0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000b1318 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000af0c5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x000000000012331b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x00000000000af02e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b1231 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000af214 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000b1288 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000dfbaf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000035dfa : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009cb35 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000009a2a2 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x000000000014b422 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000105d96 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x00000000000f45b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000000991d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000001343ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000013445d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000025926 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000bc13d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006512d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000007176d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000008157d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000b246f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000b074e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x00000000000a8725 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002954e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000c832a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x813b
0x000000000003f87c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x000000000011be0c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x0000000000040533 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000de8c8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000d1a10 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xabe9
0x00000000000a3c8c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000ae6d7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000c5132 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xe883
0x00000000000d3925 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000123265 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x000000000005a8dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000c6684 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x0000000000063259 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000001941b1 : add byte ptr [rax], al ; add byte ptr [rdx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000147242 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000081492 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000d9db5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001921fe : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x0000000000183999 : add byte ptr [rax], al ; add byte ptr [rsi + rcx], bh ; add dword ptr [rax], eax ; ret 0xffe9
0x00000000000d94f7 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000000d3e5f : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 - 0xd], dh ; ret
0x000000000018b7c9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*4 + 1], ch ; add al, dh ; ret 0xfff6
0x000000000018b7b1 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*4 + 1], dl ; add al, ch ; ret 0xfff6
0x0000000000181ec2 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; test al, 0x51 ; call qword ptr [rdx]
0x0000000000060047 : add byte ptr [rax], al ; add cl, ch ; pop rsp ; ret 0xffff
0x00000000000246d2 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000005aff6 : add byte ptr [rax], al ; add cl, ch ; ret 0xff9d
0x00000000000d77ae : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000006005f : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x000000000005fea8 : add byte ptr [rax], al ; add cl, ch ; sti ; ret
0x0000000000074984 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000023aa4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000f5fad : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000014a891 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000c3c95 : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x000000000010a0a1 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000000000008f8f0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x000000000008f8f9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000f1238 : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000d3ea8 : add byte ptr [rax], al ; add dword ptr [rbp + 0x3b], esi ; ret
0x00000000000c0886 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000a8bee : add byte ptr [rax], al ; add r8, 1 ; mov rdx, r8 ; jmp 0xa8c0c
0x000000000009a58e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000086e22 : add byte ptr [rax], al ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000529b0 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x0000000000081344 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000000471ae : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000010e691 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000110ba1 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000110301 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000010daf4 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000010acd5 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010ac16 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000033749 : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000033178 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00000000000ef276 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d9539 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000209bb : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x0000000000071cdc : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000032900 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000010b63d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000033467 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000003fd41 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000000803ca : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021767 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000032f58 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000194dfa : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; ret 7
0x0000000000184382 : add byte ptr [rax], al ; and al, 0x18 ; add dword ptr [rax], eax ; pop rax ; ret
0x0000000000174f82 : add byte ptr [rax], al ; and al, 0x24 ; add byte ptr [rax], al ; test al, 0xd9 ; jmp 0x174f94
0x0000000000185682 : add byte ptr [rax], al ; and al, 0x2b ; add dword ptr [rax], eax ; cwde ; pop rax ; cmc ; jmp qword ptr [rcx]
0x0000000000185982 : add byte ptr [rax], al ; and al, 0x2e ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x0000000000176182 : add byte ptr [rax], al ; and al, 0x36 ; add byte ptr [rax], al ; cwde ; or esp, ebp ; jmp qword ptr [rdx]
0x0000000000176982 : add byte ptr [rax], al ; and al, 0x3e ; add byte ptr [rax], al ; sbb byte ptr [rbx - 0x14], ah ; jmp rax
0x0000000000187182 : add byte ptr [rax], al ; and al, 0x46 ; add dword ptr [rax], eax ; call 0x2218675a
0x0000000000188082 : add byte ptr [rax], al ; and al, 0x55 ; add dword ptr [rax], eax ; clc ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000179e82 : add byte ptr [rax], al ; and al, 0x73 ; add byte ptr [rax], al ; and rdi, rbp ; call rdx
0x000000000018a482 : add byte ptr [rax], al ; and al, 0x79 ; add dword ptr [rax], eax ; test al, 0x31 ; stc ; jmp qword ptr [rsi]
0x0000000000182382 : add byte ptr [rax], al ; and al, 0xf8 ; add byte ptr [rax], al ; test al, 0x60 ; jmp qword ptr [rcx]
0x0000000000181c1e : add byte ptr [rax], al ; and byte ptr [rdi - 0xd], al ; call rsi
0x000000000017513e : add byte ptr [rax], al ; and dh, bl ; jmp 0x175148
0x000000000006f6ce : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000002c6db : add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000179e86 : add byte ptr [rax], al ; and rdi, rbp ; call rdx
0x000000000008157e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000007e310 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000007ffc4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000010945c : add byte ptr [rax], al ; call 0x115724
0x0000000000173d76 : add byte ptr [rax], al ; call 0x131728d7
0x000000000017d4b6 : add byte ptr [rax], al ; call 0x1317c4cb
0x00000000000735eb : add byte ptr [rax], al ; call 0x1f884
0x000000000017bbd6 : add byte ptr [rax], al ; call 0x2317ab5a
0x00000000000bff5f : add byte ptr [rax], al ; call 0x2c234
0x00000000000d7d1b : add byte ptr [rax], al ; call 0x43fb4
0x000000000007a6a6 : add byte ptr [rax], al ; call 0x668b4
0x00000000000b73ec : add byte ptr [rax], al ; call 0x73684
0x00000000000b7505 : add byte ptr [rax], al ; call 0x73724
0x00000000000781b5 : add byte ptr [rax], al ; call 0x743c4
0x0000000000078576 : add byte ptr [rax], al ; call 0x74844
0x0000000000067b63 : add byte ptr [rax], al ; call 0xf3d94
0x00000000001736b6 : add byte ptr [rax], al ; call 0xffffffffd71721d2
0x00000000001733b6 : add byte ptr [rax], al ; call 0xffffffffe4171ec3
0x000000000014c50e : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000020750 : add byte ptr [rax], al ; call rax
0x000000000011cc2e : add byte ptr [rax], al ; call rcx
0x000000000015757e : add byte ptr [rax], al ; call rdi
0x0000000000035b5c : add byte ptr [rax], al ; call rdx
0x000000000015672e : add byte ptr [rax], al ; call rsp
0x0000000000180756 : add byte ptr [rax], al ; clc ; jg 0x180752 ; call rsi
0x000000000015d396 : add byte ptr [rax], al ; clc ; loope 0x15d39f ; jmp qword ptr [rdi]
0x000000000015d416 : add byte ptr [rax], al ; clc ; loope 0x15d41f ; jmp qword ptr [rdi]
0x000000000015d496 : add byte ptr [rax], al ; clc ; loope 0x15d49f ; jmp qword ptr [rdi]
0x000000000017f0c6 : add byte ptr [rax], al ; clc ; mov cl, 0xf1 ; jmp qword ptr [rbx]
0x000000000001eade : add byte ptr [rax], al ; clc ; ret
0x0000000000180326 : add byte ptr [rax], al ; clc ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rbx]
0x000000000018925a : add byte ptr [rax], al ; cld ; add word ptr [rax], ax ; sal byte ptr [rax], 0xf6 ; call rsi
0x000000000016e736 : add byte ptr [rax], al ; cld ; and al, dh ; call rsp
0x000000000018515a : add byte ptr [rax], al ; cld ; and eax, 0x4ef00001 ; cmc ; jmp qword ptr [rsi]
0x000000000018245a : add byte ptr [rax], al ; cld ; clc ; add byte ptr [rax], al ; mov al, 0x66 ; jmp qword ptr [rdi]
0x000000000018815a : add byte ptr [rax], al ; cld ; push rbp ; add dword ptr [rax], eax ; mov al, 0xfb ; cmc ; jmp qword ptr [rcx]
0x000000000017825a : add byte ptr [rax], al ; cld ; push rsi ; add byte ptr [rax], al ; loopne 0x178220 ; out dx, al ; jmp qword ptr [rcx]
0x000000000016e3de : add byte ptr [rax], al ; cld ; ret
0x000000000016dfb6 : add byte ptr [rax], al ; cld ; ret 0xffed
0x000000000017ec5a : add byte ptr [rax], al ; cld ; rol byte ptr [rax], 0 ; push rax ; iretd ; sti ; call qword ptr [rax]
0x000000000018593f : add byte ptr [rax], al ; cmc ; jmp qword ptr [rcx]
0x00000000000de8c9 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000e8e69 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000a3c8d : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000c1b6f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000e0b17 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000899f9 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000f4409 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000b88cd : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000eecdf : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000018ee9e : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x000000000018449a : add byte ptr [rax], al ; cmp al, 0x19 ; add dword ptr [rax], eax ; rol bl, 1 ; hlt ; jmp qword ptr [rcx]
0x000000000018719a : add byte ptr [rax], al ; cmp al, 0x46 ; add dword ptr [rax], eax ; add ch, al ; cmc ; jmp qword ptr [rcx]
0x000000000018809a : add byte ptr [rax], al ; cmp al, 0x55 ; add dword ptr [rax], eax ; adc bl, bh ; cmc ; jmp qword ptr [rcx]
0x000000000016e166 : add byte ptr [rax], al ; cmp al, 0x66 ; out dx, eax ; jmp rsp
0x000000000017b09a : add byte ptr [rax], al ; cmp al, 0x85 ; add byte ptr [rax], al ; nop ; push rbp ; out dx, eax ; call qword ptr [rax]
0x000000000016e3a6 : add byte ptr [rax], al ; cmp al, 0xc0 ; out dx, eax ; call rsp
0x000000000018399a : add byte ptr [rax], al ; cmp al, 0xe ; add dword ptr [rax], eax ; ret 0xffe9
0x00000000001865c2 : add byte ptr [rax], al ; cmp al, byte ptr fs:[rcx] ; add al, cl ; pushfq ; cmc ; jmp qword ptr [rbx]
0x000000000016d38e : add byte ptr [rax], al ; cmp bl, r13b ; call rsp
0x00000000001456f6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001763aa : add byte ptr [rax], al ; cmp byte ptr [rax], r8b ; add byte ptr [rax + 0xb], al ; in al, dx ; call qword ptr [rdx]
0x0000000000182266 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0xd], bl ; jmp qword ptr [rcx]
0x0000000000181f36 : add byte ptr [rax], al ; cmp byte ptr [rdx - 0xd], dl ; jmp qword ptr [rcx]
0x000000000006bfa7 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x6bfb8 ; pop rbx ; ret
0x00000000000b7610 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xb7623 ; ret
0x000000000009b237 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0x9b251 ; mov eax, edi ; ret
0x000000000007257e : add byte ptr [rax], al ; cmp qword ptr [rdi + 0x38], 0 ; je 0x72599 ; ret
0x000000000006a185 : add byte ptr [rax], al ; cmp qword ptr [rsi + 0x30], 0 ; je 0x6a199 ; ret
0x00000000000b89b4 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xb89e7 ; ret
0x0000000000010aef : add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000175ed6 : add byte ptr [rax], al ; cwde ; add ch, ah ; call qword ptr [rdx]
0x00000000001817c6 : add byte ptr [rax], al ; cwde ; call rsi
0x0000000000174146 : add byte ptr [rax], al ; cwde ; jae 0x17413b ; call qword ptr [rax]
0x00000000001806f6 : add byte ptr [rax], al ; cwde ; jle 0x1806f2 ; jmp qword ptr [rcx]
0x000000000017c996 : add byte ptr [rax], al ; cwde ; leave ; out dx, eax ; call qword ptr [rdi]
0x0000000000175396 : add byte ptr [rax], al ; cwde ; loope 0x17538b ; jmp qword ptr [rcx]
0x0000000000176186 : add byte ptr [rax], al ; cwde ; or esp, ebp ; jmp qword ptr [rdx]
0x0000000000174936 : add byte ptr [rax], al ; cwde ; pushfq ; jmp 0x174940
0x000000000017daa6 : add byte ptr [rax], al ; fadd dword ptr [rdi - 0x10] ; call qword ptr [rcx]
0x000000000018713a : add byte ptr [rax], al ; fadd qword ptr [rbp + 1] ; add byte ptr [rax - 0x3c], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000192e3a : add byte ptr [rax], al ; fadd qword ptr [rdx] ; add al, byte ptr [rax] ; jb 0x192e44 ; jmp qword ptr [rcx]
0x0000000000187f3a : add byte ptr [rax], al ; fcom qword ptr [rbx + 1] ; add al, al ; stc ; cmc ; jmp qword ptr [rcx]
0x0000000000187d3a : add byte ptr [rax], al ; fcom qword ptr [rcx + 1] ; add al, dh ; out 0xf5, eax ; jmp qword ptr [rcx]
0x000000000018833a : add byte ptr [rax], al ; fcom qword ptr [rdi + 1] ; add al, dh ; std ; cmc ; jmp qword ptr [rcx]
0x000000000017be3a : add byte ptr [rax], al ; fcom qword ptr [rdx + 0x7cb00000] ; out dx, eax ; call qword ptr [rsi]
0x000000000018443a : add byte ptr [rax], al ; fcomp qword ptr [rax] ; add dword ptr [rax], eax ; jo 0x18440e ; hlt ; jmp qword ptr [rcx]
0x000000000016d546 : add byte ptr [rax], al ; fcomp st(0), st(2) ; jmp 0x16d550
0x000000000017e83a : add byte ptr [rax], al ; fdivr qword ptr [rax + rax - 0x3231000] ; call qword ptr [rax]
0x000000000017653a : add byte ptr [rax], al ; fdivr qword ptr [rcx] ; add byte ptr [rax], al ; push rax ; adc ebp, esp ; call qword ptr [rax]
0x0000000000177da6 : add byte ptr [rax], al ; fmul st(1) ; in eax, dx ; jmp qword ptr [rax]
0x0000000000032eb6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x000000000017513a : add byte ptr [rax], al ; fsub qword ptr [rip - 0x21e00000] ; jmp 0x17514c
0x000000000019163a : add byte ptr [rax], al ; fsub st(2), st(0) ; add dword ptr [rax], eax ; and byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x00000000001756c6 : add byte ptr [rax], al ; fsub st(6) ; jmp 0x1756d0
0x000000000018563a : add byte ptr [rax], al ; fsubr qword ptr [rdx] ; add dword ptr [rax], eax ; and byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x000000000018593a : add byte ptr [rax], al ; fsubr qword ptr [rip + 0x65000001] ; cmc ; jmp qword ptr [rcx]
0x0000000000180d3a : add byte ptr [rax], al ; fsubr st(1), st(0) ; add byte ptr [rax], al ; rcl ch, 0xf2 ; call qword ptr [rax]
0x000000000017888f : add byte ptr [rax], al ; fsubr st(6) ; call qword ptr [rax]
0x00000000001788d6 : add byte ptr [rax], al ; fsubr st(6) ; call rdi
0x00000000001750e6 : add byte ptr [rax], al ; fucomp st(3) ; call qword ptr [rcx]
0x0000000000187152 : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; mov ah, al ; cmc ; jmp qword ptr [rcx]
0x0000000000176552 : add byte ptr [rax], al ; hlt ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], cl ; in al, dx ; call qword ptr [rdx]
0x0000000000180752 : add byte ptr [rax], al ; hlt ; fild dword ptr [rax] ; add al, bh ; jg 0x180756 ; call rsi
0x000000000017ee52 : add byte ptr [rax], al ; hlt ; ret 0
0x000000000018ee52 : add byte ptr [rax], al ; hlt ; ret 1
0x0000000000185952 : add byte ptr [rax], al ; hlt ; sub eax, 0x65180001 ; cmc ; jmp qword ptr [rcx]
0x0000000000182352 : add byte ptr [rax], al ; hlt ; test dword ptr [rax], 0xf3607800 ; jmp qword ptr [rcx]
0x000000000017c152 : add byte ptr [rax], al ; hlt ; xchg eax, ebp ; add byte ptr [rax], al ; popfq ; cmp edx, ebp ; jmp qword ptr [rax]
0x0000000000186152 : add byte ptr [rax], al ; hlt ; xor eax, 0x93480001 ; cmc ; call rdx
0x0000000000176152 : add byte ptr [rax], al ; hlt ; xor eax, 0x9780000 ; in al, dx ; jmp qword ptr [rbx]
0x0000000000174142 : add byte ptr [rax], al ; in al, 0x15 ; add byte ptr [rax], al ; cwde ; jae 0x17413f ; call qword ptr [rax]
0x0000000000179cba : add byte ptr [rax], al ; in al, 0x19 ; add byte ptr [rax], al ; xor byte ptr [rdi + rbp*8], dl ; call qword ptr [rax]
0x0000000000184542 : add byte ptr [rax], al ; in al, 0x19 ; add dword ptr [rax], eax ; mov ah, al ; hlt ; call qword ptr [rdi]
0x0000000000184f42 : add byte ptr [rax], al ; in al, 0x23 ; add dword ptr [rax], eax ; clc ; cmc ; call qword ptr [rax]
0x0000000000185142 : add byte ptr [rax], al ; in al, 0x25 ; add dword ptr [rax], eax ; fmul dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x0000000000175f42 : add byte ptr [rax], al ; in al, 0x33 ; add byte ptr [rax], al ; or byte ptr [rbx], al ; in al, dx ; jmp qword ptr [rsi]
0x0000000000188142 : add byte ptr [rax], al ; in al, 0x55 ; add dword ptr [rax], eax ; cwde ; sti ; cmc ; jmp qword ptr [rcx]
0x0000000000188442 : add byte ptr [rax], al ; in al, 0x58 ; add dword ptr [rax], eax ; mov bh, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000193642 : add byte ptr [rax], al ; in al, 0xa ; add al, byte ptr [rax] ; js 0x1935e4 ; clc ; call qword ptr [rdi]
0x0000000000181342 : add byte ptr [rax], al ; in al, 0xe7 ; add byte ptr [rax], al ; sbb byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x0000000000192342 : add byte ptr [rax], al ; in al, 0xf7 ; add dword ptr [rax], eax ; pop rax ; cmp al, bh ; call qword ptr [rdx]
0x00000000001817c2 : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; cwde ; call rsi
0x000000000018674a : add byte ptr [rax], al ; in al, dx ; cmp eax, dword ptr [rcx] ; add al, dh ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000016d636 : add byte ptr [rax], al ; in al, dx ; int1 ; jmp 0x16d640
0x000000000018824a : add byte ptr [rax], al ; in al, dx ; push rsi ; add dword ptr [rax], eax ; sar ah, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000018574a : add byte ptr [rax], al ; in al, dx ; sub eax, dword ptr [rcx] ; add al, dh ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x000000000017c04a : add byte ptr [rax], al ; in al, dx ; xchg eax, esp ; add byte ptr [rax], al ; mov al, 3 ; std ; jmp rsp
0x00000000001779ff : add byte ptr [rax], al ; in eax, dx ; call rdi
0x000000000016e0ae : add byte ptr [rax], al ; in eax, dx ; out dx, al ; call rsp
0x00000000001871ca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rax], r8d ; xor ch, al ; cmc ; jmp qword ptr [rcx]
0x0000000000174fca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and al, 0 ; add al, dl ; fldpi ; call qword ptr [rdx]
0x000000000016e57e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmc ; out dx, eax ; jmp rsp
0x00000000001803ca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fadd dword ptr [rax] ; add al, dl ; jbe 0x1803ce ; jmp rcx
0x00000000001917ca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; in al, dx ; add dword ptr [rax], eax ; loopne 0x191805 ; clc ; call qword ptr [rdx]
0x000000000018b7ca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov word ptr [rcx], es ; add al, dh ; ret 0xfff6
0x000000000017cfca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; adc al, ch ; out dx, eax ; call rax
0x00000000001785ca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rdx ; add byte ptr [rax], al ; mov al, 0xce ; out dx, al ; jmp rax
0x000000000016ec4e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sal eax, 1 ; call rsp
0x000000000018d6ca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; rcr byte ptr [rbp - 9], 1 ; jmp qword ptr [rcx]
0x000000000016e82e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor esi, eax ; call rsp
0x00000000000d9db6 : add byte ptr [rax], al ; jbe 0xd9dc5 ; ret
0x0000000000175ed2 : add byte ptr [rax], al ; je 0x175f12 ; add byte ptr [rax], al ; cwde ; add ch, ah ; call qword ptr [rdx]
0x00000000001788d2 : add byte ptr [rax], al ; je 0x17893c ; add byte ptr [rax], al ; fsubr st(6) ; call rdi
0x000000000017bbd2 : add byte ptr [rax], al ; je 0x17bb6f ; add byte ptr [rax], al ; call 0x2317ab5e
0x00000000001852d2 : add byte ptr [rax], al ; je 0x185306 ; add dword ptr [rax], eax ; call 0x22184836
0x0000000000185ed2 : add byte ptr [rax], al ; je 0x185f12 ; add dword ptr [rax], eax ; call 0xffffffffe218546e
0x00000000001881d2 : add byte ptr [rax], al ; je 0x188235 ; add dword ptr [rax], eax ; pop rax ; cld ; cmc ; jmp qword ptr [rcx]
0x00000000001896d2 : add byte ptr [rax], al ; je 0x18974a ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], al ; call rsi
0x0000000000189bd2 : add byte ptr [rax], al ; je 0x189c4f ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], dl ; jmp qword ptr [rcx]
0x0000000000065a6c : add byte ptr [rax], al ; je 0x65a7f ; mov eax, edx ; pop rbx ; ret
0x0000000000067e81 : add byte ptr [rax], al ; je 0x67e98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000685b5 : add byte ptr [rax], al ; je 0x685c7 ; mov eax, esi ; pop rbx ; ret
0x0000000000068737 : add byte ptr [rax], al ; je 0x68747 ; mov eax, esi ; pop rbx ; ret
0x000000000006909b : add byte ptr [rax], al ; je 0x690b0 ; mov eax, r8d ; pop rbx ; ret
0x000000000006923e : add byte ptr [rax], al ; je 0x69257 ; mov eax, edx ; pop rbx ; ret
0x00000000000693d5 : add byte ptr [rax], al ; je 0x693e7 ; mov eax, edx ; pop rbx ; ret
0x000000000006d353 : add byte ptr [rax], al ; je 0x6d367 ; mov eax, edx ; pop rbx ; ret
0x000000000006d758 : add byte ptr [rax], al ; je 0x6d767 ; mov eax, edx ; pop rbx ; ret
0x000000000006d87c : add byte ptr [rax], al ; je 0x6d88f ; mov eax, esi ; pop rbx ; ret
0x000000000006d9be : add byte ptr [rax], al ; je 0x6d9d7 ; mov eax, esi ; pop rbx ; ret
0x000000000006dca3 : add byte ptr [rax], al ; je 0x6dcb7 ; mov eax, edx ; pop rbx ; ret
0x000000000006e658 : add byte ptr [rax], al ; je 0x6e667 ; mov eax, edx ; pop rbx ; ret
0x000000000006f864 : add byte ptr [rax], al ; je 0x6f877 ; mov eax, edx ; pop rbx ; ret
0x0000000000074260 : add byte ptr [rax], al ; je 0x74276 ; xor eax, eax ; ret
0x000000000007abc7 : add byte ptr [rax], al ; je 0x7abd4 ; ret
0x000000000007bbd6 : add byte ptr [rax], al ; je 0x7bbe4 ; ret
0x0000000000086e86 : add byte ptr [rax], al ; je 0x86e8f ; ret
0x000000000009ab94 : add byte ptr [rax], al ; je 0x9ac08 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b89db : add byte ptr [rax], al ; je 0xb8a2e ; mov eax, 0x20 ; ret
0x00000000000cea46 : add byte ptr [rax], al ; je 0xcea86 ; xor eax, eax ; ret
0x00000000000d3e60 : add byte ptr [rax], al ; je 0xd3eb5 ; ret
0x00000000000d94f8 : add byte ptr [rax], al ; je 0xd9505 ; ret
0x000000000014b423 : add byte ptr [rax], al ; jg 0x14b436 ; neg eax ; ret
0x000000000017aaa2 : add byte ptr [rax], al ; jg 0x17aab0 ; add al, cl ; out dx, eax ; call rbx
0x000000000009a2a3 : add byte ptr [rax], al ; jg 0x9a2af ; neg eax ; ret
0x0000000000149379 : add byte ptr [rax], al ; jl 0x149386 ; neg eax ; ret
0x000000000016d7f6 : add byte ptr [rax], al ; jl 0x16d851 ; in al, dx ; call rsp
0x000000000016dd26 : add byte ptr [rax], al ; jl 0x16dcd5 ; in al, dx ; call rsp
0x0000000000174cda : add byte ptr [rax], al ; jl 0x174d06 ; add byte ptr [rax], al ; loopne 0x174cab ; jmp 0x174cea
0x00000000001764da : add byte ptr [rax], al ; jl 0x176520 ; add byte ptr [rax], al ; push rax ; adc ebp, esp ; call qword ptr [rax]
0x00000000001850da : add byte ptr [rax], al ; jl 0x18510c ; add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000018ddda : add byte ptr [rax], al ; jl 0x18dd99 ; add dword ptr [rax], eax ; jo 0x18ddcd ; sti ; jmp qword ptr [rdx]
0x0000000000104c65 : add byte ptr [rax], al ; jmp 0x104c2f
0x000000000001f879 : add byte ptr [rax], al ; jmp 0x1f7a9
0x0000000000060048 : add byte ptr [rax], al ; jmp 0x5c2af
0x000000000007b343 : add byte ptr [rax], al ; jmp 0x7b30d
0x00000000000c28f0 : add byte ptr [rax], al ; jmp 0xc28b9
0x00000000000ec9dc : add byte ptr [rax], al ; jmp 0xec6da
0x000000000002ca27 : add byte ptr [rax], al ; jmp rax
0x000000000010dafb : add byte ptr [rax], al ; jmp rcx
0x00000000000378df : add byte ptr [rax], al ; jne 0x37928 ; add rsp, 8 ; ret
0x000000000003a07f : add byte ptr [rax], al ; jne 0x3a0c8 ; add rsp, 8 ; ret
0x000000000003c84f : add byte ptr [rax], al ; jne 0x3c898 ; add rsp, 8 ; ret
0x000000000009a864 : add byte ptr [rax], al ; jne 0x9a85d ; ret
0x000000000009ccbf : add byte ptr [rax], al ; jne 0x9cd08 ; add rsp, 8 ; ret
0x000000000009f2cf : add byte ptr [rax], al ; jne 0x9f318 ; add rsp, 8 ; ret
0x00000000000a16cf : add byte ptr [rax], al ; jne 0xa1718 ; add rsp, 8 ; ret
0x00000000000b88af : add byte ptr [rax], al ; jne 0xb8880 ; ret
0x00000000000b8abe : add byte ptr [rax], al ; jne 0xb8aa1 ; xor eax, eax ; ret
0x000000000017bbef : add byte ptr [rax], al ; jns 0x17bbe6 ; jmp qword ptr [rbx]
0x000000000017428e : add byte ptr [rax], al ; jo 0x174314 ; jmp 0x174298
0x0000000000176bee : add byte ptr [rax], al ; jo 0x176c5b ; cli ; jmp qword ptr [rcx]
0x0000000000176bed : add byte ptr [rax], al ; jo 0x176c5c ; cli ; jmp qword ptr [rcx]
0x000000000018128e : add byte ptr [rax], al ; jo 0x1812bd ; call qword ptr [rbx]
0x000000000018201e : add byte ptr [rax], al ; jo 0x18207d ; jmp qword ptr [rcx]
0x0000000000173216 : add byte ptr [rax], al ; js 0x1731a4 ; std ; jmp qword ptr [rdx]
0x0000000000176156 : add byte ptr [rax], al ; js 0x176168 ; in al, dx ; jmp qword ptr [rbx]
0x000000000017c426 : add byte ptr [rax], al ; js 0x17c3d2 ; out dx, eax ; call rsi
0x000000000017f2c6 : add byte ptr [rax], al ; js 0x17f28b ; int1 ; jmp qword ptr [rdi]
0x00000000001822f6 : add byte ptr [rax], al ; js 0x18235f ; jmp qword ptr [rcx]
0x0000000000182356 : add byte ptr [rax], al ; js 0x1823bf ; jmp qword ptr [rcx]
0x00000000000b8b15 : add byte ptr [rax], al ; js 0xb8b25 ; ret
0x0000000000108df1 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000108c86 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000001091c8 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000014965e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000014966e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000014967e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000014968e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014969e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001495bd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001495de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001495ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001495fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000014960e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000014961e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000014962e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000014956a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014963e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000014964e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009aa6b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009abce : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009abee : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x000000000009abde : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x00000000001495ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002082e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x142d34] ; ret
0x000000000002083e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x144c00] ; ret
0x000000000010774e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x5c2c8] ; ret
0x0000000000029a3c : add byte ptr [rax], al ; lea rbp, qword ptr [r13 + 0x10] ; call rax
0x00000000000fec2e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a0b25] ; call rax
0x000000000003f29c : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000673e7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x0000000000072ef7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1490] ; call rax
0x0000000000073347 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x18e0] ; call rax
0x00000000000676e0 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x0000000000071d9f : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x338] ; call rax
0x0000000000071fe7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000017650a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], dl ; in al, dx ; call qword ptr [rax]
0x000000000016de4e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; in eax, dx ; call rsp
0x000000000017880a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rsp ; add byte ptr [rax], al ; mov al, 0xd7 ; out dx, al ; jmp qword ptr [rax]
0x0000000000187f0a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rbx ; add dword ptr [rax], eax ; nop ; stc ; cmc ; jmp qword ptr [rcx]
0x000000000017ee0a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000016e4de : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; salc ; out dx, eax ; jmp rsp
0x000000000018560a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub al, byte ptr [rcx] ; add al, dh ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001738ee : add byte ptr [rax], al ; loopne 0x173928 ; jmp 0x1738f8
0x0000000000174cde : add byte ptr [rax], al ; loopne 0x174ca7 ; jmp 0x174ce6
0x000000000017606e : add byte ptr [rax], al ; loopne 0x17607c ; in al, dx ; jmp rsp
0x000000000017825e : add byte ptr [rax], al ; loopne 0x17821c ; out dx, al ; jmp qword ptr [rcx]
0x0000000000180efe : add byte ptr [rax], al ; loopne 0x180f24 ; jmp rsp
0x0000000000187212 : add byte ptr [rax], al ; mov ah, 0x46 ; add dword ptr [rax], eax ; js 0x1871e8 ; cmc ; jmp qword ptr [rcx]
0x0000000000188b12 : add byte ptr [rax], al ; mov ah, 0x5f ; add dword ptr [rax], eax ; cwde ; adc dh, dh ; call qword ptr [rdx]
0x000000000017b312 : add byte ptr [rax], al ; mov ah, 0x87 ; add byte ptr [rax], al ; pop rbp ; out dx, eax ; call rcx
0x000000000018b812 : add byte ptr [rax], al ; mov ah, 0x8c ; add dword ptr [rax], eax ; clc ; ret 0xfff6
0x000000000017f412 : add byte ptr [rax], al ; mov ah, 0xc8 ; add byte ptr [rax], al ; test al, 0xbf ; int1 ; call qword ptr [rdx]
0x0000000000191d12 : add byte ptr [rax], al ; mov ah, 0xf1 ; add dword ptr [rax], eax ; js 0x191d55 ; clc ; call qword ptr [rcx]
0x0000000000192812 : add byte ptr [rax], al ; mov ah, 0xfc ; add dword ptr [rax], eax ; cwde ; cdq ; sti ; jmp qword ptr [rdx]
0x0000000000173212 : add byte ptr [rax], al ; mov ah, 6 ; add byte ptr [rax], al ; js 0x1731a8 ; std ; jmp qword ptr [rdx]
0x000000000018146e : add byte ptr [rax], al ; mov al, 0x28 ; call rdi
0x000000000017b40e : add byte ptr [rax], al ; mov al, 0x61 ; out dx, eax ; jmp qword ptr [rsi]
0x000000000018245e : add byte ptr [rax], al ; mov al, 0x66 ; jmp qword ptr [rdi]
0x000000000017be3e : add byte ptr [rax], al ; mov al, 0x7c ; out dx, eax ; call qword ptr [rsi]
0x000000000017ed7e : add byte ptr [rax], al ; mov al, 0x80 ; int1 ; jmp rbx
0x0000000000174d7e : add byte ptr [rax], al ; mov al, 0xcb ; jmp 0x174d88
0x00000000001785ce : add byte ptr [rax], al ; mov al, 0xce ; out dx, al ; jmp rax
0x000000000017880e : add byte ptr [rax], al ; mov al, 0xd7 ; out dx, al ; jmp qword ptr [rax]
0x0000000000175e0e : add byte ptr [rax], al ; mov al, 1 ; in al, dx ; call qword ptr [rcx]
0x000000000017c04e : add byte ptr [rax], al ; mov al, 3 ; std ; jmp rsp
0x0000000000143ade : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000013f7ae : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000017aa56 : add byte ptr [rax], al ; mov byte ptr [rbp - 0x11], al ; jmp qword ptr [rax]
0x000000000014177e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000c00ce : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000008cffe : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009596e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009436e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009533e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000175ea6 : add byte ptr [rax], al ; mov byte ptr [rdx], al ; in al, dx ; call qword ptr [rcx]
0x0000000000173976 : add byte ptr [rax], al ; mov byte ptr [rsi], dh ; jmp 0x173980
0x000000000009503e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000001417be : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000001417de : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001417ce : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00000000001417ae : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000d951e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009535e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000008d02e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009537e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009538e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009536e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000004e9d5 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000109bae : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x0000000000109b9e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x0000000000109bce : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000109bbe : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000d9cd4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000017f2c2 : add byte ptr [rax], al ; mov dword ptr fs:[rax], 0xf1bc7800 ; jmp qword ptr [rdi]
0x00000000000b4d80 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000009437e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007ac16 : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000b815e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000b817e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000b816e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000b818e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000b839e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000b8879 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000e7bde : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000b893e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000011bb79 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000031cec : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003325c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000dd0db : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000043984 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000010a1fe : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000e639a : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000000ef016 : add byte ptr [rax], al ; mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x0000000000146ece : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000733fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000109afc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000011589e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000c4ade : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000d950e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000006ec0e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000006ebde : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000006a94e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000033ece : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x3671b2] ; ret
0x00000000000702e5 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dfb4a : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000679a8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ad50 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000020f4c : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000041931 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x000000000004e157 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000002156b : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000f55af : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5788 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000063b11 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000690e5 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000943ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000f724d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf721a
0x0000000000133bee : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009439e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000681c3 : add byte ptr [rax], al ; mov edx, eax ; je 0x681d9 ; mov eax, edx ; pop rbx ; ret
0x00000000000692a5 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6923d
0x0000000000069436 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x693d4
0x000000000006d3b1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d352
0x000000000006dd01 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6dca2
0x000000000006cce1 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000007a6a1 : add byte ptr [rax], al ; mov esi, 1 ; call 0x668b9
0x000000000018931a : add byte ptr [rax], al ; mov esp, 0x10000167 ; xor esi, esi ; call rdx
0x0000000000181c1a : add byte ptr [rax], al ; mov esp, 0x200000f0 ; call rsi
0x000000000018201a : add byte ptr [rax], al ; mov esp, 0x700000f4 ; push rsi ; jmp qword ptr [rcx]
0x000000000017a91a : add byte ptr [rax], al ; mov esp, 0x9000007d ; out dx, eax ; jmp qword ptr [rdi]
0x000000000018671a : add byte ptr [rax], al ; mov esp, 0x9000013b ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000018521a : add byte ptr [rax], al ; mov esp, 0xa0000126 ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000018821a : add byte ptr [rax], al ; mov esp, 0xa0000156 ; cld ; cmc ; jmp qword ptr [rcx]
0x0000000000187e1a : add byte ptr [rax], al ; mov esp, 0xb0000152 ; clc ; cmc ; jmp qword ptr [rcx]
0x000000000018871a : add byte ptr [rax], al ; mov esp, 0xc000015b ; add al, 0xf6 ; jmp qword ptr [rbx]
0x000000000017ed1a : add byte ptr [rax], al ; mov esp, 0xf00000c1 ; push rdx ; int1 ; jmp qword ptr [rbx]
0x000000000010191e : add byte ptr [rax], al ; mov qword ptr [r11], rcx ; add rsp, 0x10 ; ret
0x0000000000046dab : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000000f33a0 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x000000000011c8a3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011c85b : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011ca5e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001417fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000014181e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000014182e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000014183e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014184e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014185e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014186e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000014180e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001417ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000010b1bb : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000008772e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000115c5a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009539e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000953be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000953de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000953ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000953fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009540e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000953ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000953ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000043970 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000006daac : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000010dbcb : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000109b3c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000036d93 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000d943c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000109b0c : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000741f1 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r10 ; ret
0x00000000000f7d4e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000074948 : add byte ptr [rax], al ; mov qword ptr fs:[r9], rdx ; mov rax, rdx ; ret
0x00000000000360e6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000011278b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000267d3 : add byte ptr [rax], al ; mov r10d, r8d ; jmp 0x267fb
0x00000000000de92f : add byte ptr [rax], al ; mov r15d, edi ; call 0xdab97
0x00000000000331b4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000009a5ae : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000009a5be : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000009a5ce : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000009a5de : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000009a5ee : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000009a5fe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000009a60e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000011ca1e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000072379 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000006bfc0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000f36e6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000072725 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000e6646 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000036210 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000b389e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000006c73e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007369e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000011a241 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2821c6] ; call qword ptr [rax]
0x0000000000119c3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2827c9] ; call qword ptr [rax]
0x000000000007367e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x328e99] ; ret
0x0000000000028c3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x373ca9] ; ret
0x000000000002170e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x37ec39] ; ret
0x00000000000216fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x37ec59] ; ret
0x00000000000e0ced : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000078463 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x0000000000065e45 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4a46 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000630bd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003659c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000031c84 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000736ae : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000011a3ba : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000078adf : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000066709 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000067d5c : add byte ptr [rax], al ; mov rax, rsi ; pop rbx ; ret
0x0000000000031fce : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 8] ; call 0x7e299
0x00000000000b73fe : add byte ptr [rax], al ; mov rdi, r12 ; call 0x736a7
0x000000000002d4f6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000010a4bb : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000111f05 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000064f0e : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000000648cb : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000011495e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000943de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000007b261 : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, r8 ; call rax
0x00000000000ca5c9 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xca5de
0x0000000000058abc : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x58ad5
0x0000000000054990 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3465d7] ; call rax
0x00000000000497a8 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3517bf] ; call rax
0x0000000000046b2c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35443b] ; call rax
0x0000000000078cce : add byte ptr [rax], al ; mov rsi, qword ptr [rsp] ; jmp rax
0x000000000007bada : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000007b819 : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r13 ; call rax
0x000000000017f18e : add byte ptr [rax], al ; mov sil, 0xf1 ; jmp rsi
0x000000000017bbea : add byte ptr [rax], al ; mov word ptr [rax + 0x79000000], ss ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000176bea : add byte ptr [rax], al ; mov word ptr [rax], es ; add byte ptr [rax + 0x64], dh ; cli ; jmp qword ptr [rcx]
0x000000000017beea : add byte ptr [rax], al ; mov word ptr [rbx + 0x7d300000], ss ; out dx, eax ; call qword ptr [rdx]
0x000000000017ceea : add byte ptr [rax], al ; mov word ptr [rbx - 0x11700000], fs ; cld ; call qword ptr [rdx]
0x00000000001837ea : add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; add al, ah ; sbb al, 0xf4 ; jmp qword ptr [rdi]
0x000000000014179e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014178e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000016ddee : add byte ptr [rax], al ; mov word ptr [rcx], gs ; in eax, dx ; call rsp
0x000000000009534e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000001852ea : add byte ptr [rax], al ; mov word ptr [rdi], fs ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dl ; jmp qword ptr [rcx]
0x000000000008d09e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008d00e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000001738ea : add byte ptr [rax], al ; mov word ptr [rip + 0x31e00000], cs ; jmp 0x1738fc
0x00000000001740ea : add byte ptr [rax], al ; mov word ptr [rip + 0x78800000], ss ; std ; call qword ptr [rcx]
0x0000000000036ddd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000036e24 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000032c3e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000009541e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009542e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000192e02 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rdx] ; add byte ptr [rax], cl ; jb 0x192e0c ; call qword ptr [rax]
0x0000000000187802 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; clc ; xlatb ; cmc ; call qword ptr [rax]
0x0000000000184f02 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], ch ; cmc ; call qword ptr [rax]
0x0000000000186702 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax - 0x62], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000188502 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; add dword ptr [rax], eax ; cwde ; add dh, dh ; jmp qword ptr [rcx]
0x0000000000188202 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; mov ah, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000064d5a : add byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000041b7e : add byte ptr [rax], al ; movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0x00000000000d3efe : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000007176e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000133d7e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000013445e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000001343ee : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000175ebe : add byte ptr [rax], al ; nop ; add ch, ah ; call qword ptr [rcx]
0x0000000000175f8e : add byte ptr [rax], al ; nop ; add ebp, esp ; jmp qword ptr [rsi]
0x00000000001139ad : add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x00000000000f7d8d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000017355e : add byte ptr [rax], al ; nop ; or ebx, ebp ; jmp qword ptr [rsi]
0x000000000017616e : add byte ptr [rax], al ; nop ; or esp, ebp ; jmp qword ptr [rax]
0x000000000017ceee : add byte ptr [rax], al ; nop ; out dx, al ; cld ; call qword ptr [rdx]
0x000000000017a91e : add byte ptr [rax], al ; nop ; out dx, eax ; jmp qword ptr [rdi]
0x000000000017b09e : add byte ptr [rax], al ; nop ; push rbp ; out dx, eax ; call qword ptr [rax]
0x000000000014bd8d : add byte ptr [rax], al ; nop ; ret
0x000000000001821e : add byte ptr [rax], al ; nop ; ret 0x14
0x0000000000115539 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000010ef3a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000115a5b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000017606a : add byte ptr [rax], al ; or al, 0x35 ; add byte ptr [rax], al ; loopne 0x176080 ; in al, dx ; jmp rsp
0x000000000017616a : add byte ptr [rax], al ; or al, 0x36 ; add byte ptr [rax], al ; nop ; or esp, ebp ; jmp qword ptr [rax]
0x0000000000187a6a : add byte ptr [rax], al ; or al, 0x4f ; add dword ptr [rax], eax ; nop ; loopne 0x187a71 ; call qword ptr [rdx]
0x0000000000187d6a : add byte ptr [rax], al ; or al, 0x52 ; add dword ptr [rax], eax ; and al, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000187f6a : add byte ptr [rax], al ; or al, 0x54 ; add dword ptr [rax], eax ; loopne 0x187f74 ; cmc ; call qword ptr [rax]
0x000000000018806a : add byte ptr [rax], al ; or al, 0x55 ; add dword ptr [rax], eax ; loopne 0x188075 ; cmc ; jmp qword ptr [rcx]
0x000000000016e2c6 : add byte ptr [rax], al ; or al, 0xa5 ; out dx, eax ; call rsp
0x000000000016e40e : add byte ptr [rax], al ; or al, 0xc7 ; out dx, eax ; call rsp
0x000000000018146a : add byte ptr [rax], al ; or al, 0xe9 ; add byte ptr [rax], al ; mov al, 0x28 ; call rdi
0x00000000001937c2 : add byte ptr [rax], al ; or al, 2 ; add byte ptr [rax], bh ; xchg eax, edx ; clc ; jmp qword ptr [rsi]
0x00000000001762be : add byte ptr [rax], al ; or bpl, spl ; call qword ptr [rsi]
0x00000000000a7f14 : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x0000000000175f46 : add byte ptr [rax], al ; or byte ptr [rbx], al ; in al, dx ; jmp qword ptr [rsi]
0x000000000017ed36 : add byte ptr [rax], al ; or byte ptr [rcx - 0xf], bl ; call rsp
0x000000000017db66 : add byte ptr [rax], al ; or byte ptr [rcx - 6], bl ; call qword ptr [rax]
0x000000000017bd66 : add byte ptr [rax], al ; or byte ptr [rdx - 0x11], bh ; jmp qword ptr [rax]
0x00000000001778e6 : add byte ptr [rax], al ; or byte ptr [rdx - 0x13], cl ; call qword ptr [rcx]
0x00000000000e7944 : add byte ptr [rax], al ; or eax, edi ; ret
0x000000000017637e : add byte ptr [rax], al ; or ebp, esp ; call qword ptr [rdx]
0x0000000000176366 : add byte ptr [rax], al ; or rbp, rsp ; call qword ptr [rax]
0x0000000000194686 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x0000000000179aaa : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; ror byte ptr [rsi], 0xef ; call rsi
0x0000000000032c4e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000173dc6 : add byte ptr [rax], al ; pop rax ; jp 0x173dcd ; jmp qword ptr [rdi]
0x000000000017d266 : add byte ptr [rax], al ; pop rax ; out dx, eax ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000e7807 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001590de : add byte ptr [rax], al ; pop rax ; test ebp, ebp ; lcall ptr [rax - 0x7b] ; in eax, dx ; jmp rbx
0x000000000017b316 : add byte ptr [rax], al ; pop rbp ; out dx, eax ; call rcx
0x000000000004dfcd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004e09d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000068c30 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000e99ea : add byte ptr [rax], al ; pop rbp ; ret
0x000000000009927a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003638c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000004de98 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f5935 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000004c27c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000016e0de : add byte ptr [rax], al ; pop rbx ; out dx, eax ; call rsp
0x00000000000b8337 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000028d5a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001faee : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000022977 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000293d6 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000016b18e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000180666 : add byte ptr [rax], al ; pop rdx ; jge 0x180662 ; jmp qword ptr [rax]
0x0000000000184eba : add byte ptr [rax], al ; pop rsp ; and eax, dword ptr [rcx] ; add byte ptr [rax], dh ; cmc ; call qword ptr [rsi]
0x000000000016df76 : add byte ptr [rax], al ; pop rsp ; insb byte ptr [rdi], dx ; in eax, dx ; call rsp
0x000000000016d506 : add byte ptr [rax], al ; pop rsp ; ret
0x00000000001746ba : add byte ptr [rax], al ; pop rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x80], ah ; jmp 0x1746cc
0x000000000017d3ba : add byte ptr [rax], al ; pop rsp ; test al, 0 ; add byte ptr [rax], dl ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017c156 : add byte ptr [rax], al ; popfq ; cmp edx, ebp ; jmp qword ptr [rax]
0x00000000001764de : add byte ptr [rax], al ; push rax ; adc ebp, esp ; call qword ptr [rax]
0x000000000017ec5e : add byte ptr [rax], al ; push rax ; iretd ; sti ; call qword ptr [rax]
0x000000000017d47e : add byte ptr [rax], al ; push rax ; or eax, esi ; jmp qword ptr [rdx]
0x000000000016b314 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000000f45ce : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000187eaa : add byte ptr [rax], al ; push rbx ; add dword ptr [rax], eax ; stc ; cmc ; call qword ptr [rcx]
0x00000000001852ef : add byte ptr [rax], al ; push rcx ; cmc ; jmp qword ptr [rcx]
0x00000000001882c2 : add byte ptr [rax], al ; push rdi ; add dword ptr [rax], eax ; std ; cmc ; jmp qword ptr [rcx]
0x00000000001882aa : add byte ptr [rax], al ; push rdi ; add dword ptr [rax], eax ; xor ch, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000177da2 : add byte ptr [rax], al ; push rdx ; add byte ptr [rax], al ; fmul st(1) ; in eax, dx ; jmp qword ptr [rax]
0x00000000001859b2 : add byte ptr [rax], al ; push rsp ; add dword ptr cs:[rax], eax ; js 0x185a28 ; cmc ; jmp qword ptr [rcx]
0x0000000000174fb2 : add byte ptr [rax], al ; push rsp ; and al, 0 ; add al, cl ; fldpi ; call qword ptr [rdx]
0x00000000001863b2 : add byte ptr [rax], al ; push rsp ; cmp byte ptr [rcx], al ; add byte ptr [rax], ch ; cwde ; cmc ; jmp qword ptr [rcx]
0x000000000018a6b2 : add byte ptr [rax], al ; push rsp ; jnp 0x18a6c1 ; add byte ptr [rax], ch ; sbb ah, bh ; jmp qword ptr [rsi]
0x000000000018b7b2 : add byte ptr [rax], al ; push rsp ; mov word ptr [rcx], es ; add al, ch ; ret 0xfff6
0x00000000001733b2 : add byte ptr [rax], al ; push rsp ; or byte ptr [rax], al ; add al, ch ; add ebx, ebp ; jmp rbx
0x00000000001736b2 : add byte ptr [rax], al ; push rsp ; or eax, dword ptr [rax] ; add al, ch ; adc bl, ch ; call rsi
0x00000000001844b2 : add byte ptr [rax], al ; push rsp ; sbb dword ptr [rcx], eax ; add al, ch ; ret
0x000000000017beb2 : add byte ptr [rax], al ; push rsp ; xchg eax, ebx ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x11], bh ; call qword ptr [rdx]
0x00000000001779fa : add byte ptr [rax], al ; pushfq ; add byte ptr [rax], r8b ; add byte ptr [rbp - 0x13], ah ; call rdi
0x000000000016d3a6 : add byte ptr [rax], al ; pushfq ; cmp al, 0xeb ; call rsp
0x000000000016eb26 : add byte ptr [rax], al ; pushfq ; jbe 0x16eb20 ; call rsp
0x000000000016eb46 : add byte ptr [rax], al ; pushfq ; jl 0x16eb40 ; jmp rsp
0x000000000018b7fa : add byte ptr [rax], al ; pushfq ; mov word ptr [rcx], es ; add byte ptr [rax], al ; ret
0x000000000016ea2e : add byte ptr [rax], al ; pushfq ; movsxd rsi, eax ; call rsp
0x00000000001883fa : add byte ptr [rax], al ; pushfq ; pop rax ; add dword ptr [rax], eax ; adc bh, bh ; cmc ; jmp qword ptr [rcx]
0x00000000001880fa : add byte ptr [rax], al ; pushfq ; push rbp ; add dword ptr [rax], eax ; push rax ; sti ; cmc ; jmp qword ptr [rcx]
0x000000000016d846 : add byte ptr [rax], al ; pushfq ; push rsi ; in al, dx ; call rsp
0x000000000016e3c6 : add byte ptr [rax], al ; pushfq ; ret 0xffef
0x00000000001745fa : add byte ptr [rax], al ; pushfq ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x80], al ; jmp 0x17460c
0x00000000001928fa : add byte ptr [rax], al ; pushfq ; std ; add dword ptr [rax], eax ; loopne 0x1928a3 ; sti ; jmp qword ptr [rdx]
0x000000000018affa : add byte ptr [rax], al ; pushfq ; test byte ptr [rcx], al ; add byte ptr [rax], ah ; mov dl, 0xf6 ; call qword ptr [rax]
0x0000000000180d3e : add byte ptr [rax], al ; rcl ch, 0xf2 ; call qword ptr [rax]
0x0000000000172c8e : add byte ptr [rax], al ; rcr bl, 0xea ; call qword ptr [rax]
0x0000000000174fce : add byte ptr [rax], al ; rcr cl, 1 ; jmp 0x174fd8
0x0000000000000977 : add byte ptr [rax], al ; ret
0x000000000014d906 : add byte ptr [rax], al ; ret 0
0x000000000015487e : add byte ptr [rax], al ; ret 0x10
0x000000000000de07 : add byte ptr [rax], al ; ret 0x11
0x00000000000048a6 : add byte ptr [rax], al ; ret 0x12
0x0000000000010f7e : add byte ptr [rax], al ; ret 0x14
0x000000000001c046 : add byte ptr [rax], al ; ret 0x1636
0x0000000000019f46 : add byte ptr [rax], al ; ret 0x163e
0x000000000001aa9e : add byte ptr [rax], al ; ret 0x1646
0x00000000000091ae : add byte ptr [rax], al ; ret 0x18
0x000000000015654e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000156ce6 : add byte ptr [rax], al ; ret 0x1d5
0x00000000000077b6 : add byte ptr [rax], al ; ret 0x23
0x0000000000155556 : add byte ptr [rax], al ; ret 0x24
0x00000000000041b6 : add byte ptr [rax], al ; ret 0x27
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000155a46 : add byte ptr [rax], al ; ret 0x33
0x0000000000006d1e : add byte ptr [rax], al ; ret 0x3d
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000015407e : add byte ptr [rax], al ; ret 0xa
0x0000000000010306 : add byte ptr [rax], al ; ret 0xc
0x000000000015447e : add byte ptr [rax], al ; ret 0xd
0x000000000001f6a2 : add byte ptr [rax], al ; ret 1
0x0000000000157b22 : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x0000000000157f22 : add byte ptr [rax], al ; ret 4
0x000000000000156e : add byte ptr [rax], al ; ret 5
0x0000000000153c26 : add byte ptr [rax], al ; ret 6
0x0000000000158522 : add byte ptr [rax], al ; ret 7
0x0000000000001a8a : add byte ptr [rax], al ; ret 8
0x0000000000158922 : add byte ptr [rax], al ; ret 9
0x000000000000138e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x0000000000157f1e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000154326 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x0000000000179aae : add byte ptr [rax], al ; ror byte ptr [rsi], 0xef ; call rsi
0x00000000001803ce : add byte ptr [rax], al ; sal byte ptr [rsi - 0xe], 1 ; jmp rcx
0x0000000000174d7a : add byte ptr [rax], al ; sbb al, 0x22 ; add byte ptr [rax], al ; mov al, 0xcb ; jmp 0x174d8c
0x000000000018577a : add byte ptr [rax], al ; sbb al, 0x2c ; add dword ptr [rax], eax ; and byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x000000000017637a : add byte ptr [rax], al ; sbb al, 0x38 ; add byte ptr [rax], al ; or ebp, esp ; call qword ptr [rdx]
0x000000000018677a : add byte ptr [rax], al ; sbb al, 0x3c ; add dword ptr [rax], eax ; push rax ; lahf ; cmc ; jmp qword ptr [rcx]
0x000000000016e1ee : add byte ptr [rax], al ; sbb al, 0x87 ; out dx, eax ; call rsp
0x000000000016dbf6 : add byte ptr [rax], al ; sbb al, 0x95 ; in al, dx ; call rsp
0x000000000017d47a : add byte ptr [rax], al ; sbb al, 0xa9 ; add byte ptr [rax], al ; push rax ; or eax, esi ; jmp qword ptr [rdx]
0x000000000017ed7a : add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; mov al, 0x80 ; int1 ; jmp rbx
0x000000000016d73e : add byte ptr [rax], al ; sbb al, 0xfc ; jmp 0x16d748
0x000000000017b896 : add byte ptr [rax], al ; sbb byte ptr [rax - 0x11], dh ; call qword ptr [rcx]
0x0000000000176986 : add byte ptr [rax], al ; sbb byte ptr [rbx - 0x14], ah ; jmp rax
0x000000000017db96 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x10], cl ; call qword ptr [rax]
0x00000000001843a2 : add byte ptr [rax], al ; sbb byte ptr [rcx], r8b ; add byte ptr [rax - 0x3d], bl ; hlt ; call qword ptr [rbx]
0x0000000000181346 : add byte ptr [rax], al ; sbb byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x0000000000176276 : add byte ptr [rax], al ; sbb byte ptr [rdx], cl ; in al, dx ; call qword ptr [rsi]
0x00000000001746a2 : add byte ptr [rax], al ; sbb r8d, dword ptr [rax] ; add byte ptr [rax - 0x80], bl ; jmp 0x1746b4
0x000000000017daa2 : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; fadd dword ptr [rdi - 0x10] ; call qword ptr [rcx]
0x00000000000d3eee : add byte ptr [rax], al ; setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000d93a6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000016d716 : add byte ptr [rax], al ; stc ; jmp 0x16d720
0x000000000017428a : add byte ptr [rax], al ; sub al, 0x17 ; add byte ptr [rax], al ; jo 0x174318 ; jmp 0x17429c
0x000000000018588a : add byte ptr [rax], al ; sub al, 0x2d ; add dword ptr [rax], eax ; xor byte ptr [rdx - 0xb], ah ; call rax
0x0000000000175f8a : add byte ptr [rax], al ; sub al, 0x34 ; add byte ptr [rax], al ; nop ; add ebp, esp ; jmp qword ptr [rsi]
0x000000000018628a : add byte ptr [rax], al ; sub al, 0x37 ; add dword ptr [rax], eax ; loopne 0x186230 ; cmc ; jmp qword ptr [rcx]
0x000000000018708a : add byte ptr [rax], al ; sub al, 0x45 ; add dword ptr [rax], eax ; add dl, 0xf5 ; call qword ptr [rdx]
0x000000000018818a : add byte ptr [rax], al ; sub al, 0x56 ; add dword ptr [rax], eax ; loopne 0x188196 ; cmc ; jmp qword ptr [rcx]
0x000000000018848a : add byte ptr [rax], al ; sub al, 0x59 ; add dword ptr [rax], eax ; sar bh, 1 ; cmc ; call qword ptr [rsi]
0x000000000016d896 : add byte ptr [rax], al ; sub al, 0x5a ; in al, dx ; call rsp
0x000000000017888a : add byte ptr [rax], al ; sub al, 0x5d ; add byte ptr [rax], al ; add al, bl ; out dx, al ; call qword ptr [rax]
0x000000000016dcc6 : add byte ptr [rax], al ; sub al, 0x9c ; in al, dx ; jmp rsp
0x000000000017f18a : add byte ptr [rax], al ; sub al, 0xc6 ; add byte ptr [rax], al ; mov sil, 0xf1 ; jmp rsi
0x000000000018128a : add byte ptr [rax], al ; sub al, 0xe7 ; add byte ptr [rax], al ; jo 0x1812c1 ; call qword ptr [rbx]
0x000000000019138a : add byte ptr [rax], al ; sub al, 0xe8 ; add dword ptr [rax], eax ; loopne 0x1913ba ; clc ; call qword ptr [rdx]
0x0000000000181536 : add byte ptr [rax], al ; sub al, 0xf3 ; jmp rcx
0x000000000019238a : add byte ptr [rax], al ; sub al, 0xf8 ; add dword ptr [rax], eax ; mov al, 0x38 ; clc ; jmp qword ptr [rcx]
0x0000000000172c8a : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; rcr bl, 0xea ; call qword ptr [rax]
0x000000000017beb6 : add byte ptr [rax], al ; sub byte ptr [rbp - 0x11], bh ; call qword ptr [rdx]
0x000000000017ee26 : add byte ptr [rax], al ; sub byte ptr [rbp - 6], al ; call qword ptr [rdi]
0x0000000000176636 : add byte ptr [rax], al ; sub byte ptr [rdi], dl ; in al, dx ; call rax
0x000000000017db36 : add byte ptr [rax], al ; sub byte ptr [rdx], bl ; cli ; call qword ptr [rax]
0x000000000017b7ce : add byte ptr [rax], al ; sub byte ptr [rsi - 0x11], 0xff ; ret
0x00000000001756c2 : add byte ptr [rax], al ; sub eax, dword ptr fs:[rax] ; add al, bl ; out 0xeb, al ; jmp qword ptr [rsi]
0x0000000000147c8c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000dfbb0 : add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000000ab72a : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000032cdd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000072c16 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000007de91 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000e09a5 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00000000000d9deb : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000000f3dd5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000a83f3 : add byte ptr [rax], al ; syscall ; ret
0x0000000000181ec6 : add byte ptr [rax], al ; test al, 0x51 ; call qword ptr [rdx]
0x0000000000182386 : add byte ptr [rax], al ; test al, 0x60 ; jmp qword ptr [rcx]
0x00000000001783d6 : add byte ptr [rax], al ; test al, 0xba ; out dx, al ; jmp qword ptr [rcx]
0x000000000017f416 : add byte ptr [rax], al ; test al, 0xbf ; int1 ; call qword ptr [rdx]
0x0000000000174cb6 : add byte ptr [rax], al ; test al, 0xc2 ; jmp 0x174cbe
0x0000000000174f86 : add byte ptr [rax], al ; test al, 0xd9 ; jmp 0x174f90
0x0000000000175566 : add byte ptr [rax], al ; test al, 0xe4 ; jmp 0x175570
0x0000000000175df6 : add byte ptr [rax], al ; test al, 1 ; in al, dx ; call qword ptr [rdx]
0x00000000001843e2 : add byte ptr [rax], al ; test byte ptr [rax], bl ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000001880e2 : add byte ptr [rax], al ; test byte ptr [rbp + 1], dl ; add byte ptr [rax], bh ; sti ; cmc ; jmp qword ptr [rcx]
0x00000000001778e2 : add byte ptr [rax], al ; test byte ptr [rbp], cl ; add byte ptr [rax], cl ; in eax, dx ; call qword ptr [rcx]
0x0000000000072b04 : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x72b18 ; pop rbx ; ret
0x00000000001867e2 : add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x5f], cl ; cmc ; jmp rdx
0x000000000018afaa : add byte ptr [rax], al ; test byte ptr [rcx], r8b ; add al, ah ; mov cl, 0xf6 ; call qword ptr [rbx]
0x00000000001750e2 : add byte ptr [rax], al ; test byte ptr [rip - 0x22b80000], ah ; jmp 0x1750f4
0x00000000001871e2 : add byte ptr [rax], al ; test byte ptr [rsi + 1], al ; add byte ptr [rax - 0x3b], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000109a5f : add byte ptr [rax], al ; test eax, eax ; je 0x109a78 ; xor eax, eax ; ret
0x0000000000063936 : add byte ptr [rax], al ; test ecx, ecx ; je 0x63947 ; ret
0x00000000000f446d : add byte ptr [rax], al ; test rax, rax ; je 0xf44a7 ; call rax
0x0000000000113352 : add byte ptr [rax], al ; test rax, rax ; jne 0x113348 ; pop rbx ; ret
0x00000000000715be : add byte ptr [rax], al ; test rdx, rdx ; jne 0x715d9 ; xor eax, eax ; ret
0x00000000001870f2 : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [r8], r8d ; clc ; ret
0x00000000001850f2 : add byte ptr [rax], al ; xchg eax, esp ; and eax, 0x4e680001 ; cmc ; call qword ptr [rcx]
0x00000000001764f2 : add byte ptr [rax], al ; xchg eax, esp ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], cl ; in al, dx ; call qword ptr [rdx]
0x000000000017f2f2 : add byte ptr [rax], al ; xchg eax, esp ; mov dword ptr [rax], 0xf1bd9800 ; call qword ptr [rsi]
0x0000000000187ef2 : add byte ptr [rax], al ; xchg eax, esp ; push rbx ; add dword ptr [rax], eax ; js 0x187efc ; cmc ; jmp qword ptr [rcx]
0x0000000000187cf2 : add byte ptr [rax], al ; xchg eax, esp ; push rcx ; add dword ptr [rax], eax ; test al, 0xe7 ; cmc ; jmp qword ptr [rcx]
0x000000000017edf2 : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000018edf2 : add byte ptr [rax], al ; xchg eax, esp ; ret 1
0x00000000001855f2 : add byte ptr [rax], al ; xchg eax, esp ; sub al, byte ptr [rcx] ; add al, bl ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001858f2 : add byte ptr [rax], al ; xchg eax, esp ; sub eax, 0x64b80001 ; cmc ; jmp qword ptr [rcx]
0x00000000001822f2 : add byte ptr [rax], al ; xchg eax, esp ; test dword ptr [rax], 0xf3607800 ; jmp qword ptr [rcx]
0x0000000000184592 : add byte ptr [rax], al ; xor al, 0x1a ; add dword ptr [rax], eax ; js 0x184567 ; hlt ; call qword ptr [rdx]
0x0000000000175392 : add byte ptr [rax], al ; xor al, 0x28 ; add byte ptr [rax], al ; cwde ; loope 0x17538f ; jmp qword ptr [rcx]
0x0000000000176392 : add byte ptr [rax], al ; xor al, 0x38 ; add byte ptr [rax], al ; or rbp, rsp ; call qword ptr [rax]
0x0000000000187892 : add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; sub cl, bl ; cmc ; jmp rax
0x0000000000187c92 : add byte ptr [rax], al ; xor al, 0x51 ; add dword ptr [rax], eax ; out 0xf5, eax ; jmp qword ptr [rcx]
0x000000000018af92 : add byte ptr [rax], al ; xor al, 0x84 ; add dword ptr [rax], eax ; call 0x1118a657
0x000000000017b892 : add byte ptr [rax], al ; xor al, 0x8d ; add byte ptr [rax], al ; sbb byte ptr [rax - 0x11], dh ; call qword ptr [rcx]
0x000000000017c992 : add byte ptr [rax], al ; xor al, 0x9e ; add byte ptr [rax], al ; cwde ; leave ; out dx, eax ; call qword ptr [rdi]
0x000000000017db92 : add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x10], cl ; call qword ptr [rax]
0x000000000017beee : add byte ptr [rax], al ; xor byte ptr [rbp - 0x11], bh ; call qword ptr [rdx]
0x00000000000df40a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x0000000000179cbe : add byte ptr [rax], al ; xor byte ptr [rdi + rbp*8], dl ; call qword ptr [rax]
0x00000000000981ee : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000007a13c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000fd2e6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000000000011d046 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000ce0ae : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000010a2ae : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000010a266 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000035dfb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b333d : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000035a73 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000035a96 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000036abc : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000011af1e : add byte ptr [rax], al ; xor edi, edi ; call 0xb7176
0x0000000000080321 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000046afb : add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000028930 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000008152d : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000186487 : add byte ptr [rax], bh ; cdq ; cmc ; jmp qword ptr [rcx]
0x0000000000182267 : add byte ptr [rax], bh ; pop rdi ; jmp qword ptr [rcx]
0x0000000000181f37 : add byte ptr [rax], bh ; push rdx ; jmp qword ptr [rcx]
0x00000000001880e7 : add byte ptr [rax], bh ; sti ; cmc ; jmp qword ptr [rcx]
0x0000000000193867 : add byte ptr [rax], bh ; xchg eax, edi ; clc ; call qword ptr [rcx]
0x00000000001937c7 : add byte ptr [rax], bh ; xchg eax, edx ; clc ; jmp qword ptr [rsi]
0x0000000000185957 : add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x000000000017b897 : add byte ptr [rax], bl ; jo 0x17b88e ; call qword ptr [rcx]
0x0000000000174ac7 : add byte ptr [rax], bl ; mov ah, 0xeb ; call qword ptr [rdx]
0x0000000000176987 : add byte ptr [rax], bl ; movsxd rbp, esp ; jmp rax
0x0000000000176277 : add byte ptr [rax], bl ; or ch, ah ; call qword ptr [rsi]
0x000000000018b837 : add byte ptr [rax], bl ; ret
0x0000000000187067 : add byte ptr [rax], bl ; ret 0xfff5
0x000000000018ac67 : add byte ptr [rax], bl ; test al, 0xf6 ; jmp rbx
0x000000000017ee27 : add byte ptr [rax], ch ; cli ; call qword ptr [rdi]
0x0000000000184f07 : add byte ptr [rax], ch ; cmc ; call qword ptr [rax]
0x00000000001863b7 : add byte ptr [rax], ch ; cwde ; cmc ; jmp qword ptr [rcx]
0x0000000000187897 : add byte ptr [rax], ch ; fprem1 ; jmp rax
0x000000000018d967 : add byte ptr [rax], ch ; jb 0x18d966 ; call qword ptr [rcx]
0x000000000017beb7 : add byte ptr [rax], ch ; jge 0x17beae ; call qword ptr [rdx]
0x000000000017c607 : add byte ptr [rax], ch ; mov dh, 0xef ; jmp rsp
0x000000000018b037 : add byte ptr [rax], ch ; mov dl, 0xf6 ; call qword ptr [rax]
0x0000000000186a97 : add byte ptr [rax], ch ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rsi]
0x0000000000184867 : add byte ptr [rax], ch ; or al, 0xf5 ; call rdi
0x0000000000186627 : add byte ptr [rax], ch ; popfq ; cmc ; jmp qword ptr [rcx]
0x000000000018a6b7 : add byte ptr [rax], ch ; sbb ah, bh ; jmp qword ptr [rsi]
0x000000000017db37 : add byte ptr [rax], ch ; sbb bh, dl ; call qword ptr [rax]
0x0000000000192657 : add byte ptr [rax], ch ; wait ; sti ; jmp qword ptr [rdx]
0x0000000000086e84 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x86e91 ; ret
0x0000000000175f47 : add byte ptr [rax], cl ; add ebp, esp ; jmp qword ptr [rsi]
0x0000000000188657 : add byte ptr [rax], cl ; add esi, esi ; jmp qword ptr [rcx]
0x00000000001778e7 : add byte ptr [rax], cl ; in eax, dx ; call qword ptr [rcx]
0x0000000000192e07 : add byte ptr [rax], cl ; jb 0x192e07 ; call qword ptr [rax]
0x000000000017bd67 : add byte ptr [rax], cl ; jp 0x17bd5e ; jmp qword ptr [rax]
0x000000000002c364 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x0000000000185627 : add byte ptr [rax], cl ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000017db67 : add byte ptr [rax], cl ; pop rcx ; cli ; call qword ptr [rax]
0x000000000017ed37 : add byte ptr [rax], cl ; pop rcx ; int1 ; call rsp
0x0000000000179cbf : add byte ptr [rax], dh ; adc al, 0xef ; call qword ptr [rax]
0x000000000018646f : add byte ptr [rax], dh ; cdq ; cmc ; call qword ptr [rsi]
0x0000000000184ebf : add byte ptr [rax], dh ; cmc ; call qword ptr [rsi]
0x00000000000981ef : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000017beef : add byte ptr [rax], dh ; jge 0x17bee6 ; call qword ptr [rdx]
0x000000000000f817 : add byte ptr [rax], dh ; ret
0x000000000000c0df : add byte ptr [rax], dh ; ret 0x11
0x0000000000007597 : add byte ptr [rax], dh ; ret 2
0x000000000017ec2f : add byte ptr [rax], dh ; scasb al, byte ptr [rdi] ; sti ; call qword ptr [rax]
0x00000000001882af : add byte ptr [rax], dh ; std ; cmc ; jmp qword ptr [rcx]
0x000000000018425f : add byte ptr [rax], dh ; stosb byte ptr [rdi], al ; hlt ; jmp qword ptr [rdi]
0x000000000007425e : add byte ptr [rax], dl ; add byte ptr [rax], al ; je 0x74278 ; xor eax, eax ; ret
0x00000000000f435a : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063215 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000063223 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000017ee0f : add byte ptr [rax], dl ; cli ; jmp qword ptr [rdi]
0x000000000017d86f : add byte ptr [rax], dl ; cmp al, dh ; jmp qword ptr [rcx]
0x000000000002c444 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000017d3bf : add byte ptr [rax], dl ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001883ff : add byte ptr [rax], dl ; push rbp ; jmp qword ptr [rcx]
0x00000000000053d7 : add byte ptr [rax], dl ; ret
0x0000000000005887 : add byte ptr [rax], dl ; ret 0x11
0x000000000018809f : add byte ptr [rax], dl ; sti ; cmc ; jmp qword ptr [rcx]
0x00000000001862bf : add byte ptr [rax], dl ; xchg eax, esi ; cmc ; jmp qword ptr [rcx]
0x000000000018931f : add byte ptr [rax], dl ; xor esi, esi ; call rdx
0x000000000018ee50 : add byte ptr [rax], r8b ; add ah, dh ; ret 1
0x00000000001779fd : add byte ptr [rax], r8b ; add byte ptr [rbp - 0x13], ah ; call rdi
0x0000000000174cd8 : add byte ptr [rax], r8b ; add byte ptr [rcx], bh ; add al, ah ; ret 0xffeb
0x00000000000ef275 : add byte ptr [rax], r8b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014b785 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000006bfa6 : add byte ptr [rax], r8b ; cmp eax, -1 ; jne 0x6bfb9 ; pop rbx ; ret
0x0000000000032eb5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000000c00cd : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000008cffd : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000008d02d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000007ac15 : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000004193d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000b99e5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000011335d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000006a94d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x0000000000068215 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x000000000009439d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000006dd00 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x6dca3
0x000000000008772d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000000f7d4d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000011ca1d : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000f36e5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000031c8d : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x000000000009560d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000943dd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000001088bd : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000646a5 : add byte ptr [rax], r8b ; ret
0x000000000011d045 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000362ed : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000035a95 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000011af1d : add byte ptr [rax], r8b ; xor edi, edi ; call 0xb7177
0x000000000009a2ad : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x0000000000043e9f : add byte ptr [rbp + 0x29], cl ; ret
0x00000000000a62f7 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000000f206d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000028931 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000ae3d5 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000087993 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000f45cf : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000a634b : add byte ptr [rbp + 0x390a74db], al ; ret
0x00000000000a8947 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x00000000000e44e6 : add byte ptr [rbp + 0x395274c0], al ; ret
0x0000000000074140 : add byte ptr [rbp + 0x39], cl ; ret 0x820f
0x00000000000378e0 : add byte ptr [rbp + 0x3d], dh ; add rsp, 8 ; ret
0x000000000002030f : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000004e09e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000068c31 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008039e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x00000000000631ae : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000102113 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x00000000001850f3 : add byte ptr [rbp + 0x4e680001], dl ; cmc ; call qword ptr [rcx]
0x000000000018588b : add byte ptr [rbp + 0x62300001], ch ; cmc ; call rax
0x00000000000fea16 : add byte ptr [rbp + 0x79c389c0], al ; mov ah, 0xe9 ; ret 0xfffd
0x0000000000074872 : add byte ptr [rbp + 0xb], dh ; jmp 0x748a2
0x000000000004281f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000004270f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001850db : add byte ptr [rbp + 1], bh ; add byte ptr [rax + 0x4e], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000361ba : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00000000000c1869 : add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x000000000011c8f8 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000004c47 : add byte ptr [rbp + 7], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e0e35 : add byte ptr [rbp + 8], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014babd : add byte ptr [rbp + rax - 0x18], dh ; ret
0x000000000016e3f7 : add byte ptr [rbp + rax*8 - 0x11], bl ; call qword ptr [rbx + rax*8]
0x000000000016fa6f : add byte ptr [rbp + rax*8 - 0xc], bl ; jmp rsp
0x000000000017f0c3 : add byte ptr [rbp + rax*8], ah ; add al, bh ; mov cl, 0xf1 ; jmp qword ptr [rbx]
0x00000000001858f3 : add byte ptr [rbp + rbp + 0x64b80001], dl ; cmc ; jmp qword ptr [rcx]
0x000000000017d8c3 : add byte ptr [rbp + rbp*4], ah ; add al, bl ; cmp eax, esi ; call qword ptr [rax]
0x000000000016e0af : add byte ptr [rbp + rbp*8 - 0x12], cl ; call rsp
0x00000000001788d3 : add byte ptr [rbp + rbx*2], dh ; add byte ptr [rax - 0x28], cl ; out dx, al ; call rdi
0x00000000001738eb : add byte ptr [rbp + rcx + 0x31e00000], cl ; jmp 0x1738fb
0x0000000000154477 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000001778e3 : add byte ptr [rbp + rcx*2 + 0x4a080000], al ; in eax, dx ; call qword ptr [rcx]
0x000000000012ff0f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; leave ; ret 3
0x000000000012d356 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x3ec
0x000000000002bc70 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x139b
0x000000000006c971 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000108df2 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000006c88e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000108c87 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x00000000001091c9 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000380ab : add byte ptr [rbp + rcx*4 + 0x50], cl ; dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x00000000000c7b8f : add byte ptr [rbp + rcx*4 + 0x6b], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c2197 : add byte ptr [rbp + rcx*4 + 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000017a91b : add byte ptr [rbp + rdi*2 + 0x42900000], bh ; out dx, eax ; jmp qword ptr [rdi]
0x00000000001928fb : add byte ptr [rbp + rdi*8 - 0x671fffff], bl ; sti ; jmp qword ptr [rdx]
0x00000000001740eb : add byte ptr [rbp + rdx + 0x78800000], cl ; std ; call qword ptr [rcx]
0x000000000018411b : add byte ptr [rbp + rdx - 0x567fffff], bh ; hlt ; jmp qword ptr [rsi]
0x0000000000188113 : add byte ptr [rbp + rdx*2 - 0x497ffff], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001880fb : add byte ptr [rbp + rdx*2 - 0x4afffff], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001880e3 : add byte ptr [rbp + rdx*2 - 0x4c7ffff], al ; cmc ; jmp qword ptr [rcx]
0x000000000016e57f : add byte ptr [rbp + rsi*8 - 0x11], ch ; jmp rsp
0x000000000009a865 : add byte ptr [rbp - 0x10], dh ; ret
0x0000000000177a00 : add byte ptr [rbp - 0x13], ah ; call rdi
0x0000000000079a73 : add byte ptr [rbp - 0x16f78740], al ; ret
0x000000000014bd74 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000001750e3 : add byte ptr [rbp - 0x22b80000], al ; jmp 0x1750f3
0x00000000000b8abf : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000b88b0 : add byte ptr [rbp - 0x38], dh ; ret
0x0000000000154723 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000016d214 : add byte ptr [rbp - 0x438f0004], bh ; cld ; jmp rax
0x00000000000b8a22 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x0000000000098f23 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000005c757 : add byte ptr [rbp - 0x76b742b6], cl ; ret
0x00000000000267d4 : add byte ptr [rbp - 0x77], al ; ret 0x1deb
0x000000000008a39f : add byte ptr [rbp - 0x77], al ; ret 0x8945
0x000000000009d20d : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r9, r15 ; setne dl ; jmp 0x9d230
0x000000000009f7dd : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r9, r15 ; setne dl ; jmp 0x9f800
0x00000000000a1c0d : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r9, r15 ; setne dl ; jmp 0xa1c30
0x0000000000079b79 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x88 ; ret
0x000000000005d6b9 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret 0x19
0x000000000008d44b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x000000000005c557 : add byte ptr [rbp - 0x7cb76dec], cl ; ret
0x000000000005508f : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000000c487f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000c2f93 : add byte ptr [rbp - 0x9d78b37], al ; ret
0x0000000000041027 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x0000000000185940 : add byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000079a45 : add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000330d5 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000063937 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000015f060 : add byte ptr [rbp - 0xd], bl ; jmp qword ptr [rax]
0x000000000015f294 : add byte ptr [rbp - 0xd], dh ; call qword ptr [rax]
0x0000000000171ee7 : add byte ptr [rbp - 6], bh ; jmp rsp
0x0000000000187eaf : add byte ptr [rbp - 7], ah ; cmc ; call qword ptr [rcx]
0x000000000018d3c0 : add byte ptr [rbp - 9], cl ; call rcx
0x000000000011f7d9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000180efb : add byte ptr [rbx + 0x1de00000], bl ; jmp rsp
0x000000000006ec0f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000009927b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000006bfa8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000c54c7 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000073717 : add byte ptr [rbx + 0x32a04505], al ; add byte ptr [rcx], al ; ret
0x00000000000a8163 : add byte ptr [rbx + 0x3934245c], cl ; ret
0x00000000000b8338 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000004c27d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000184f03 : add byte ptr [rbx + 0x46280001], ah ; cmc ; call qword ptr [rax]
0x00000000000943af : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000143b1f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000146ecf : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000967cf : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000008d4ac : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x0000000000104014 : add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x4589
0x0000000000103ff4 : add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x4589
0x0000000000133bef : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000078bdf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000020210 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000028d5b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001faef : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000020adb : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000006f6ef : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x0000000000094a99 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000d950f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000006ebdf : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000009b238 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x0000000000184863 : add byte ptr [rbx + 0xc280001], al ; cmc ; call rdi
0x00000000000c8619 : add byte ptr [rbx + 0xf4801e1], al ; ret
0x00000000000364ef : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000184ebb : add byte ptr [rbx + 1], bl ; add byte ptr [rax], dh ; cmc ; call qword ptr [rsi]
0x000000000014937a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000017ef13 : add byte ptr [rbx + rax*8 - 0x5e780000], dh ; int1 ; call qword ptr [rbx]
0x0000000000171a9f : add byte ptr [rbx + rbp*4 - 7], bl ; call rsp
0x00000000001756c3 : add byte ptr [rbx + rbp], ah ; add al, bl ; out 0xeb, al ; jmp qword ptr [rsi]
0x0000000000185683 : add byte ptr [rbx + rbp], ah ; add dword ptr [rax], eax ; cwde ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000016e0df : add byte ptr [rbx + rbx*2 - 0x11], cl ; call rsp
0x0000000000180663 : add byte ptr [rbx + rbx*8], al ; add byte ptr [rax], al ; pop rdx ; jge 0x180665 ; jmp qword ptr [rax]
0x00000000001746a3 : add byte ptr [rbx + rbx], al ; add byte ptr [rax - 0x80], bl ; jmp 0x1746b3
0x00000000001746bb : add byte ptr [rbx + rbx], bl ; add byte ptr [rax - 0x80], ah ; jmp 0x1746cb
0x00000000000eca3a : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000067e82 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000f375a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x00000000000438d7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000042197 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000017f6f3 : add byte ptr [rbx + rcx*8 - 0x35a80000], dl ; int1 ; call qword ptr [rax]
0x000000000017f70b : add byte ptr [rbx + rcx*8 - 0x35b00000], ch ; int1 ; call qword ptr [rdx]
0x000000000017000f : add byte ptr [rbx + rcx*8 - 0xa], ch ; call rsp
0x000000000017f6c3 : add byte ptr [rbx + rcx*8], ah ; add byte ptr [rax - 0x36], bl ; int1 ; call qword ptr [rax]
0x000000000017f6db : add byte ptr [rbx + rcx*8], bh ; add byte ptr [rax - 0x36], dl ; int1 ; call qword ptr [rdx]
0x000000000017f6ab : add byte ptr [rbx + rcx*8], cl ; add byte ptr [rax - 0x36], dl ; int1 ; call qword ptr [rdx]
0x00000000001736b3 : add byte ptr [rbx + rcx], dl ; add al, ch ; adc bl, ch ; call rsi
0x000000000018671b : add byte ptr [rbx + rdi - 0x616fffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000186703 : add byte ptr [rbx + rdi - 0x6187ffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a6b3 : add byte ptr [rbx + rdi*2 + 1], dl ; add byte ptr [rax], ch ; sbb ah, bh ; jmp qword ptr [rsi]
0x0000000000186673 : add byte ptr [rbx + rdi], dl ; add dword ptr [rax], eax ; js 0x18661f ; cmc ; jmp qword ptr [rcx]
0x0000000000187ec3 : add byte ptr [rbx + rdx*2 + 1], ah ; add byte ptr [rax - 7], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000187eab : add byte ptr [rbx + rdx*2 + 1], cl ; add byte ptr [rbp - 7], ah ; cmc ; call qword ptr [rcx]
0x000000000016e937 : add byte ptr [rbx + rdx*2 - 0x10], bl ; jmp rsp
0x0000000000187f0b : add byte ptr [rbx + rdx*2 - 0x66fffff], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000187ef3 : add byte ptr [rbx + rdx*2 - 0x687ffff], dl ; cmc ; jmp qword ptr [rcx]
0x000000000017beeb : add byte ptr [rbx + rdx*4 + 0x7d300000], cl ; out dx, eax ; call qword ptr [rdx]
0x000000000017beb3 : add byte ptr [rbx + rdx*4], dl ; add byte ptr [rax], ch ; jge 0x17beb2 ; call qword ptr [rdx]
0x0000000000185ed3 : add byte ptr [rbx + rsi + 1], dh ; add al, ch ; mov ch, dh ; jmp rcx
0x000000000016e82f : add byte ptr [rbx + rsi - 0x10], ch ; call rsp
0x0000000000179e83 : add byte ptr [rbx + rsi*2], ah ; add byte ptr [rax], al ; and rdi, rbp ; call rdx
0x00000000001724bf : add byte ptr [rbx + rsi*4 - 6], ch ; jmp rsp
0x000000000005350e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000017ceeb : add byte ptr [rbx - 0x11700000], cl ; cld ; call qword ptr [rdx]
0x000000000006ea4b : add byte ptr [rbx - 0x13178f83], cl ; ret 6
0x00000000000b8117 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xb8131 ; ret
0x000000000006bf3f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000992ff : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000992f8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000992f1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000992ea : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000992e3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000992dc : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000e639b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000105846 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x105858 ; ret
0x00000000000f3e9f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0xf3eb9 ; ret
0x0000000000115d47 : add byte ptr [rbx - 0x3f7cb7f6], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x0000000000050426 : add byte ptr [rbx - 0x4b743], al ; call qword ptr [rax]
0x0000000000099039 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x0000000000099024 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000038e93 : add byte ptr [rbx - 0x57ccf16], al ; or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x00000000000cc1ae : add byte ptr [rbx - 0x6bf00003], al ; ret 0xb60f
0x0000000000117abb : add byte ptr [rbx - 0x74c3dbac], cl ; or byte ptr [rcx], dil ; ret 0x2175
0x0000000000036214 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000002a298 : add byte ptr [rbx - 0x76be0008], al ; ret
0x000000000004de99 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000002066f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000051601 : add byte ptr [rbx - 0x7af00008], al ; ret 0xffee
0x000000000006b7a4 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000014aa36 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000029cd1 : add byte ptr [rbx - 0x7bf0f908], al ; ret 2
0x00000000000bc037 : add byte ptr [rbx - 0x7cb7f3ad], cl ; ret
0x00000000000c0d5f : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000cdca7 : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3b04
0x00000000000c5820 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00000000000cfa2f : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00000000000cb23d : add byte ptr [rbx - 0x7cefdba4], cl ; ret
0x00000000000e38af : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000f476f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x0000000000075e2e : add byte ptr [rbx - 0xd], bl ; ret
0x000000000016bb58 : add byte ptr [rbx - 5], dh ; push qword ptr [rax] ; push rdi ; sti ; jmp qword ptr [rax]
0x000000000017888b : add byte ptr [rbx*2 - 0x28000000], ch ; out dx, al ; call qword ptr [rax]
0x000000000016befc : add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x0000000000194683 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x0000000000172a0f : add byte ptr [rbx], bh ; std ; call rsp
0x0000000000102297 : add byte ptr [rcx + 0x11894dd0], cl ; ret
0x000000000004e9d6 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x0000000000173863 : add byte ptr [rcx + 0x25380000], al ; jmp 0x173873
0x000000000002662e : add byte ptr [rcx + 0x29], cl ; ret
0x000000000002ac9f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000010b82a : add byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0x334c
0x000000000010ba32 : add byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0x334d
0x000000000004e114 : add byte ptr [rcx + 0x34d00505], cl ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000001417df : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000001013fa : add byte ptr [rcx + 0x39], al ; ret 0x6348
0x00000000000adcd8 : add byte ptr [rcx + 0x39], al ; ret 0xf40
0x000000000007e59f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000003d6b4 : add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000038920 : add byte ptr [rcx + 0x39], cl ; ret 0xb7e
0x00000000000400b0 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x0000000000081f76 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000054903 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000da97e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000000336f6 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000682a2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000702e6 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000f55b0 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00000000001417bf : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009537f : add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000728b6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000000d06b6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000e3daa : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x000000000006cce2 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x0000000000129bde : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008cf06 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x0000000000041b7f : add byte ptr [rcx + 0x63], cl ; or al, 0x8a ; add rcx, r10 ; jmp rcx
0x0000000000146f3c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000094228 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000ca06f : add byte ptr [rcx + 0x63], cl ; ret
0x000000000002c50f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x0000000000032a37 : add byte ptr [rcx + 0x7fffff], ch ; je 0x32a32 ; ret
0x00000000000e266f : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000182fc0 : add byte ptr [rcx + 0xe], dl ; adc byte ptr [rbx + 0xabd0202], al ; ret
0x00000000000afc2a : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00000000000bedd0 : add byte ptr [rcx + 0xf], al ; mov dh, 0x14 ; and al, 0x39 ; ret 0x840f
0x000000000004f9fa : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000004f9c7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000004b7f8 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000098f42 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000047380 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000002ee79 : add byte ptr [rcx + 0xf], cl ; ret 0x8949
0x00000000000e97ec : add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x00000000000989cf : add byte ptr [rcx + 1], cl ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x0000000000079778 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000016f12f : add byte ptr [rcx + rax - 0xe], bh ; jmp rsp
0x0000000000186cb3 : add byte ptr [rcx + rax*2 + 1], dl ; add al, bl ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x000000000017ed1b : add byte ptr [rcx + rax*8 + 0x52f00000], bh ; int1 ; jmp qword ptr [rbx]
0x0000000000172c8b : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; rcr bl, 0xea ; call qword ptr [rax]
0x000000000016f447 : add byte ptr [rcx + rbp*2 - 0xd], cl ; jmp rsp
0x000000000017d47b : add byte ptr [rcx + rbp*4], bl ; add byte ptr [rax], al ; push rax ; or eax, esi ; jmp qword ptr [rdx]
0x000000000017d4b3 : add byte ptr [rcx + rbp*4], dl ; add al, ch ; or eax, esi ; call qword ptr [rdx]
0x000000000018146b : add byte ptr [rcx + rbp*8], cl ; add byte ptr [rax], al ; mov al, 0x28 ; call rdi
0x0000000000185473 : add byte ptr [rcx + rbp], dl ; add dword ptr [rax], eax ; js 0x1854d5 ; cmc ; jmp qword ptr [rcx]
0x00000000001844b3 : add byte ptr [rcx + rbx + 1], dl ; add al, ch ; ret
0x00000000001884bb : add byte ptr [rcx + rbx*2 + 1], bl ; add byte ptr [rax], ah ; add dh, dh ; jmp qword ptr [rcx]
0x00000000001784e3 : add byte ptr [rcx + rbx*2 - 0x3e380000], al ; out dx, al ; jmp rax
0x000000000018848b : add byte ptr [rcx + rbx*2], ch ; add dword ptr [rax], eax ; sar bh, 1 ; cmc ; call qword ptr [rsi]
0x000000000018449b : add byte ptr [rcx + rbx], bh ; add dword ptr [rax], eax ; rol bl, 1 ; hlt ; jmp qword ptr [rcx]
0x000000000006909c : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x00000000000eee6f : add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000171fdf : add byte ptr [rcx + rcx*2], cl ; cli ; call rsp
0x000000000005ebb1 : add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000112951 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000b4d81 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000b4e4b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000c7397 : add byte ptr [rcx + rcx*4 + 0x3c], cl ; ret 0x448b
0x000000000008772f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000002d4f7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000007b262 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, r8 ; call rax
0x00000000000b73ff : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x736a6
0x00000000000fe9b4 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000077df8 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r13 ; call 0x74059
0x00000000000ca5ca : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xca5dd
0x000000000008d372 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x00000000000690e6 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000078464 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000764e4 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x0000000000109778 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000001764f3 : add byte ptr [rcx + rdi + 0x13480000], dl ; in al, dx ; call qword ptr [rdx]
0x000000000017650b : add byte ptr [rcx + rdi + 0x13500000], ch ; in al, dx ; call qword ptr [rax]
0x000000000018a4e3 : add byte ptr [rcx + rdi*2 + 0x31a80001], al ; stc ; jmp qword ptr [rsi]
0x000000000018a483 : add byte ptr [rcx + rdi*2], ah ; add dword ptr [rax], eax ; test al, 0x31 ; stc ; jmp qword ptr [rsi]
0x000000000016d717 : add byte ptr [rcx + rdi*8 - 0x15], cl ; call rsp
0x00000000001764db : add byte ptr [rcx + rdi], bh ; add byte ptr [rax + 0x13], dl ; in al, dx ; call qword ptr [rax]
0x0000000000183d13 : add byte ptr [rcx + rdx + 0x72c80001], dh ; hlt ; jmp rcx
0x0000000000187cab : add byte ptr [rcx + rdx*2 + 1], cl ; add byte ptr [rax - 0x19], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187cf3 : add byte ptr [rcx + rdx*2 - 0x1857ffff], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000187c93 : add byte ptr [rcx + rdx*2], dh ; add dword ptr [rax], eax ; out 0xf5, eax ; jmp qword ptr [rcx]
0x00000000001708c7 : add byte ptr [rcx + rdx*4 - 9], cl ; jmp rsp
0x000000000016ec4f : add byte ptr [rcx + rdx*8 - 0x10], ch ; call rsp
0x00000000001725e7 : add byte ptr [rcx + rdx*8], cl ; cli ; jmp rsp
0x000000000016f5a7 : add byte ptr [rcx + rsi*4], bh ; call rsp
0x0000000000191d13 : add byte ptr [rcx + rsi*8 + 0x32780001], dh ; clc ; call qword ptr [rcx]
0x000000000016e9f7 : add byte ptr [rcx - 0x10], bh ; call rsp
0x000000000017bbf0 : add byte ptr [rcx - 0x11], bh ; jmp qword ptr [rbx]
0x000000000007a613 : add byte ptr [rcx - 0x173fce16], cl ; ret
0x000000000000247b : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x000000000009bbe9 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000003fbae : add byte ptr [rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000e1f48 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00000000000d951f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000308e4 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000193863 : add byte ptr [rcx - 0x68c7fffe], al ; clc ; call qword ptr [rcx]
0x00000000000e4aaf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000b5679 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000034d84 : add byte ptr [rcx - 0x75], cl ; cmp al, 0x24 ; call r14
0x00000000000bad8f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret 0x4808
0x00000000000ca06b : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rcx + 0x63], cl ; ret
0x000000000003ffd3 : add byte ptr [rcx - 0x75], cl ; ret
0x00000000000f7897 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x00000000001603b0 : add byte ptr [rcx - 0x76ff000b], cl ; cmc ; jmp rax
0x000000000008d02f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x0000000000041c5e : add byte ptr [rcx - 0x77], al ; ret
0x00000000000c3474 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x00000000000c3429 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000052911 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000002f346 : add byte ptr [rcx - 0x77], cl ; ret 0x14d
0x000000000009e78a : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000054086 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000002f471 : add byte ptr [rcx - 0x77], cl ; ret 0x8d8b
0x00000000000f822b : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000067947 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000cbf65 : add byte ptr [rcx - 0x7d], 0xfa ; add al, 0x75 ; ret 0x8b48
0x000000000005cec5 : add byte ptr [rcx - 0x7d], al ; out dx, al ; add dword ptr [rax + 1], ecx ; ret
0x00000000000ab676 : add byte ptr [rcx - 0x7d], al ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x000000000002b911 : add byte ptr [rcx - 0x7d], cl ; mov byte ptr [rcx], 0x83 ; ret
0x0000000000022aae : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003147f : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000008a7d7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x0000000000022a27 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000011d94f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000005ec63 : add byte ptr [rcx - 0x7d], cl ; ret 0x8304
0x0000000000038510 : add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000007c9ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000a8bef : add byte ptr [rcx - 0x7d], cl ; rol byte ptr [rcx], 0x4c ; mov edx, eax ; jmp 0xa8c0b
0x0000000000036a9c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x0000000000105bff : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x000000000010724f : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000025b84 : add byte ptr [rcx - 0xa], al ; ret 0xf08
0x00000000001852f0 : add byte ptr [rcx - 0xb], dl ; jmp qword ptr [rcx]
0x00000000000b811a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000015f108 : add byte ptr [rcx - 0xd], ah ; jmp qword ptr [rax]
0x000000000015f358 : add byte ptr [rcx - 0xd], bh ; call qword ptr [rax]
0x000000000016b18f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000015f228 : add byte ptr [rcx - 0xd], dh ; jmp qword ptr [rax]
0x000000000016c2e8 : add byte ptr [rcx - 4], cl ; jmp rax
0x0000000000081662 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000081688 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000187893 : add byte ptr [rcx*2 - 0x26d7ffff], dh ; cmc ; jmp rax
0x000000000017b893 : add byte ptr [rcx*4 + 0x70180000], dh ; out dx, eax ; call qword ptr [rcx]
0x0000000000007473 : add byte ptr [rcx], ah ; add byte ptr [rax], ah ; add al, al ; ret
0x000000000000724b : add byte ptr [rcx], ah ; add byte ptr [rax], ah ; add al, bl ; ret
0x000000000000e5cb : add byte ptr [rcx], ah ; add byte ptr [rax], ah ; add al, dl ; ret
0x000000000016ba6c : add byte ptr [rcx], ah ; sti ; call rax
0x0000000000161a6b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000002c6d9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x00000000001120b1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081191 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000007de8f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000f8d60 : add byte ptr [rcx], al ; jmp 0xf8b2b
0x00000000000f9120 : add byte ptr [rcx], al ; jmp 0xf8efb
0x00000000000d3ea9 : add byte ptr [rcx], al ; jne 0xd3eed ; ret
0x000000000002c424 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x0000000000073f64 : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000011588f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007371d : add byte ptr [rcx], al ; ret
0x00000000000c0887 : add byte ptr [rcx], al ; setg dl ; jmp 0xc0814
0x0000000000174cdb : add byte ptr [rcx], bh ; add al, ah ; ret 0xffeb
0x00000000000a62d7 : add byte ptr [rcx], bh ; ret
0x0000000000033ef0 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000cfe4f : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000cf9fd : add byte ptr [rcx], bh ; ret 0xf74
0x00000000001941eb : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x0000000000080566 : add byte ptr [rcx], ch ; ret
0x00000000000adba2 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000b131a : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000af0c7 : add byte ptr [rcx], ch ; ret 0x8d41
0x000000000012331d : add byte ptr [rcx], ch ; ret 0xca39
0x0000000000032cde : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b1233 : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000af216 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000b128a : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000dfbb1 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000001718af : add byte ptr [rcx], ch ; stc ; call rsp
0x00000000000f7e11 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x00000000000e7945 : add byte ptr [rcx], cl ; clc ; ret
0x00000000000c0c64 : add byte ptr [rcx], cl ; ret
0x000000000011b5a3 : add byte ptr [rcx], dh ; dec dword ptr [rcx - 0x77] ; in al, 0xe8 ; ret 0xf9bb
0x000000000003284f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x000000000010e880 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000a79a7 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000035dfc : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002c51f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x0000000000037eb7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000035c1b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000080322 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000023c8d : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret
0x00000000000f2749 : add byte ptr [rcx], dh ; shr al, 0x8f ; ret 0xfff5
0x000000000016bab4 : add byte ptr [rcx], dh ; sti ; push rax ; xor ebx, edi ; jmp rax
0x00000000000056bb : add byte ptr [rcx], dl ; add byte ptr [rax], ah ; add al, al ; ret
0x000000000000d053 : add byte ptr [rcx], dl ; add byte ptr [rax], ah ; add al, bl ; ret
0x0000000000005733 : add byte ptr [rcx], dl ; add byte ptr [rax], ah ; add al, dl ; ret
0x00000000001852eb : add byte ptr [rdi + 0x51000001], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000131a3a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000735e7 : add byte ptr [rdi + 0x80], bh ; call 0x1f888
0x00000000001852d3 : add byte ptr [rdi + 1], dh ; add al, ch ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000009a2a4 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000010af0 : add byte ptr [rdi + 9], ah ; add byte ptr [rax], al ; ret
0x000000000014b424 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000187273 : add byte ptr [rdi + rax*2], dl ; add dword ptr [rax], eax ; or dh, al ; cmc ; jmp qword ptr [rdx]
0x000000000017b313 : add byte ptr [rdi + rax*4 + 0x5d480000], dh ; out dx, eax ; call rcx
0x000000000016e1ef : add byte ptr [rdi + rax*4], bl ; out dx, eax ; call rsp
0x000000000017f2f3 : add byte ptr [rdi + rax*8 - 0x42680000], dl ; int1 ; call qword ptr [rsi]
0x000000000017f2c3 : add byte ptr [rdi + rax*8], ah ; add byte ptr [rax - 0x44], bh ; int1 ; jmp qword ptr [rdi]
0x000000000016e40f : add byte ptr [rdi + rax*8], cl ; out dx, eax ; call rsp
0x000000000016e7ff : add byte ptr [rdi + rbp - 0x10], bh ; jmp rsp
0x0000000000170ae7 : add byte ptr [rdi + rbp*4 - 9], bl ; call rsp
0x00000000001726af : add byte ptr [rdi + rbp*8], cl ; cli ; call rsp
0x0000000000171cc7 : add byte ptr [rdi + rbx*8], bl ; stc ; jmp rsp
0x0000000000174ac3 : add byte ptr [rdi + rbx], ah ; add byte ptr [rax], bl ; mov ah, 0xeb ; call qword ptr [rdx]
0x0000000000105d98 : add byte ptr [rdi + rcx - 0x4a], al ; cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x0000000000187a6b : add byte ptr [rdi + rcx*2], cl ; add dword ptr [rax], eax ; nop ; loopne 0x187a70 ; call qword ptr [rdx]
0x000000000002c324 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000017aaa3 : add byte ptr [rdi + rdi*2], al ; add al, cl ; out dx, eax ; call rbx
0x00000000001724ff : add byte ptr [rdi + rdi*4 - 6], bh ; call rsp
0x00000000001882c3 : add byte ptr [rdi + rdx*2 + 1], ah ; add byte ptr [rax - 3], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001882ab : add byte ptr [rdi + rdx*2 + 1], cl ; add byte ptr [rax], dh ; std ; cmc ; jmp qword ptr [rcx]
0x000000000016fc2f : add byte ptr [rdi + rdx*2 - 0xb], ch ; jmp rsp
0x0000000000188263 : add byte ptr [rdi + rdx*2], al ; add dword ptr [rax], eax ; call 0x22187871
0x000000000017428b : add byte ptr [rdi + rdx], ch ; add byte ptr [rax], al ; jo 0x174317 ; jmp 0x17429b
0x00000000001862a3 : add byte ptr [rdi + rsi + 1], al ; add al, bh ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x00000000001862bb : add byte ptr [rdi + rsi + 1], bl ; add byte ptr [rax], dl ; xchg eax, esi ; cmc ; jmp qword ptr [rcx]
0x000000000016fe67 : add byte ptr [rdi + rsi - 0xa], ch ; jmp rsp
0x0000000000172247 : add byte ptr [rdi + rsi*2 - 6], ch ; call rsp
0x00000000001822f3 : add byte ptr [rdi + rsi*8 + 0x60780000], dl ; jmp qword ptr [rcx]
0x0000000000182263 : add byte ptr [rdi + rsi*8], al ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0xd], bl ; jmp qword ptr [rcx]
0x00000000001822db : add byte ptr [rdi + rsi*8], bh ; add byte ptr [rax + 0x60], ah ; jmp qword ptr [rcx]
0x00000000001762bb : add byte ptr [rdi + rsi], bl ; add byte ptr [rax + 0xa], al ; in al, dx ; call qword ptr [rsi]
0x000000000018628b : add byte ptr [rdi + rsi], ch ; add dword ptr [rax], eax ; loopne 0x18622f ; cmc ; jmp qword ptr [rcx]
0x0000000000176273 : add byte ptr [rdi + rsi], dl ; add byte ptr [rax], al ; sbb byte ptr [rdx], cl ; in al, dx ; call qword ptr [rsi]
0x00000000000b8a98 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001607e0 : add byte ptr [rdi - 0x70ff000b], cl ; cmc ; jmp rax
0x000000000016c3b4 : add byte ptr [rdi - 4], bh ; call qword ptr [rax + 0x20fffc7e]
0x000000000016d30f : add byte ptr [rdi], ah ; sub ebx, ebp ; call rsp
0x000000000017d263 : add byte ptr [rdi], al ; add byte ptr [rax], al ; pop rax ; out dx, eax ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001710af : add byte ptr [rdi], bh ; clc ; jmp rsp
0x0000000000032bb0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000018128b : add byte ptr [rdi], ch ; add byte ptr [rax], al ; jo 0x1812c0 ; call qword ptr [rbx]
0x0000000000020ad7 : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x0000000000020b05 : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x00000000000f45b7 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000001333b6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000991d7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000001343ef : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000e8e21 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c4bd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2c44e ; loopne 0x2c4ce ; ret
0x00000000000ea684 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xea615 ; loopne 0xea695 ; ret
0x000000000013445f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000025928 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000bc13f : add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006512f : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000007dc8f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000009b120 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000007176f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000146f4f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008170f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008d72f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008d73f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000008d71f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008d27f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000008d13f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000088dbf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008159f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008158f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008157f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000329a7 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000032bd6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00000000000b2471 : add byte ptr [rdi], cl ; ret
0x00000000000b0750 : add byte ptr [rdi], cl ; ret 0x144
0x00000000000a8727 : add byte ptr [rdi], cl ; ret 0x3bba
0x0000000000029550 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000000c832c : add byte ptr [rdi], cl ; ret 0x813b
0x000000000003f87e : add byte ptr [rdi], cl ; ret 0x8539
0x000000000011be0e : add byte ptr [rdi], cl ; ret 0x8941
0x0000000000040535 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000002e366 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000de8ca : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000d1a12 : add byte ptr [rdi], cl ; ret 0xabe9
0x00000000000a3c8e : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000ae6d9 : add byte ptr [rdi], cl ; ret 0xd801
0x00000000000c5134 : add byte ptr [rdi], cl ; ret 0xe883
0x0000000000032c3f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x00000000000fd9d1 : add byte ptr [rdi], cl ; test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005e331 : add byte ptr [rdi], cl ; test byte ptr [rdi], al ; and dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000b7f7a : add byte ptr [rdi], cl ; xchg dword ptr [rax], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000005064b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d3927 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000006f094 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0x000000000010cb7b : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000123267 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x000000000005a8df : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000c6686 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x000000000006325c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000000ce577 : add byte ptr [rdi], cl ; xor dword ptr [rcx + 0x4cfffffd], 0x63 ; ret 0x8b49
0x00000000000bff7a : add byte ptr [rdx + 0x17c], bh ; call 0x2c238
0x00000000000bff5b : add byte ptr [rdx + 0x182], bh ; call 0x2c238
0x00000000001087eb : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x00000000000bff99 : add byte ptr [rdx + 0x1b4], bh ; call 0x2c238
0x0000000000143adf : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000013f7af : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009678f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000000bc4cd : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x0000000000194daf : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001941b3 : add byte ptr [rdx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000021567 : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000000e9973 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x0000000000192e03 : add byte ptr [rdx + rax + 0x72080002], ah ; clc ; call qword ptr [rax]
0x000000000017ee0b : add byte ptr [rdx + rax*8 + 0x44100000], ch ; cli ; jmp qword ptr [rdi]
0x000000000017ed7b : add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; mov al, 0x80 ; int1 ; jmp rbx
0x00000000001727d7 : add byte ptr [rdx + rax], cl ; sti ; jmp rsp
0x00000000001855f3 : add byte ptr [rdx + rbp + 0x57d80001], dl ; cmc ; jmp qword ptr [rcx]
0x000000000018560b : add byte ptr [rdx + rbp + 0x57f00001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001855db : add byte ptr [rdx + rbp + 1], bh ; add al, al ; push rdi ; cmc ; jmp qword ptr [rcx]
0x0000000000171a7f : add byte ptr [rdx + rbp*4], bl ; stc ; call rsp
0x0000000000032a3c : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x0000000000175563 : add byte ptr [rdx + rbp], al ; add byte ptr [rax], al ; test al, 0xe4 ; jmp 0x175573
0x0000000000185573 : add byte ptr [rdx + rbp], dl ; add dword ptr [rax], eax ; mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x0000000000174613 : add byte ptr [rdx + rbx - 0x7fb80000], dh ; jmp 0x174623
0x00000000001745fb : add byte ptr [rdx + rbx - 0x7fc00000], bl ; jmp 0x17460b
0x00000000001745e3 : add byte ptr [rdx + rbx - 0x7fc80000], al ; jmp 0x1745f3
0x00000000001720d7 : add byte ptr [rdx + rbx*2 - 6], bl ; jmp rsp
0x000000000016d897 : add byte ptr [rdx + rbx*2], ch ; in al, dx ; call rsp
0x000000000017c603 : add byte ptr [rdx + rbx*4 - 0x49d80000], ah ; out dx, eax ; jmp rsp
0x0000000000184593 : add byte ptr [rdx + rbx], dh ; add dword ptr [rax], eax ; js 0x184566 ; hlt ; call qword ptr [rdx]
0x00000000000f58eb : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000089323 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000154077 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000001865c3 : add byte ptr [rdx + rdi + 1], ah ; add al, cl ; pushfq ; cmc ; jmp qword ptr [rbx]
0x00000000001724df : add byte ptr [rdx + rdi*4], ch ; cli ; jmp rsp
0x000000000016d7f7 : add byte ptr [rdx + rdx*2 - 0x14], bh ; call rsp
0x0000000000187e1b : add byte ptr [rdx + rdx*2 - 0x74fffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000177da3 : add byte ptr [rdx + rdx*2], al ; add al, bl ; leave ; in eax, dx ; jmp qword ptr [rax]
0x0000000000187d6b : add byte ptr [rdx + rdx*2], cl ; add dword ptr [rax], eax ; and al, ch ; cmc ; jmp qword ptr [rcx]
0x000000000017bd63 : add byte ptr [rdx + rdx*4], al ; add byte ptr [rax], al ; or byte ptr [rdx - 0x11], bh ; jmp qword ptr [rax]
0x00000000001719af : add byte ptr [rdx + rdx*4], bh ; stc ; jmp rsp
0x0000000000173dc3 : add byte ptr [rdx + rdx], ah ; add byte ptr [rax + 0x7a], bl ; std ; jmp qword ptr [rdi]
0x0000000000173d73 : add byte ptr [rdx + rdx], dl ; add byte ptr [rax], al ; call 0x131728da
0x0000000000175df3 : add byte ptr [rdx + rsi + 0x1a80000], dl ; in al, dx ; call qword ptr [rdx]
0x0000000000175e0b : add byte ptr [rdx + rsi + 0x1b00000], ch ; in al, dx ; call qword ptr [rcx]
0x000000000018dddb : add byte ptr [rdx + rsi*4 + 1], bh ; add byte ptr [rax - 0x1e], dh ; sti ; jmp qword ptr [rdx]
0x000000000015f144 : add byte ptr [rdx - 0xd], ah ; call qword ptr [rax]
0x000000000015f128 : add byte ptr [rdx - 0xd], ah ; jmp qword ptr [rax]
0x00000000000ecfc7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000ecfc6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x000000000016c268 : add byte ptr [rdx - 4], cl ; jmp rax
0x000000000018809b : add byte ptr [rdx*2 - 0x4efffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000188083 : add byte ptr [rdx*2 - 0x507ffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018806b : add byte ptr [rdx*2 - 0x51fffff], cl ; cmc ; jmp qword ptr [rcx]
0x000000000016bf7c : add byte ptr [rdx], 0xfc ; call qword ptr [rax]
0x00000000000e8bae : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000002c476 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000001054d6 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000ef897 : add byte ptr [rdx], al ; call rax
0x000000000002c384 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000186050 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00000000001941af : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rdx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000174d7b : add byte ptr [rdx], bl ; add byte ptr [rax], al ; mov al, 0xcb ; jmp 0x174d8b
0x00000000000efce0 : add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e519f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016c110 : add byte ptr [rip + 0x26d0fffc], ah ; cld ; call rax
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000000b7611 : add byte ptr [rip - 0xfff], bh ; jae 0xb7622 ; ret
0x000000000018521b : add byte ptr [rsi + 0x50a00001], bh ; cmc ; jmp qword ptr [rcx]
0x000000000017606b : add byte ptr [rsi + 0x5e00000], cl ; in al, dx ; jmp rsp
0x00000000001124b7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000123125 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000147244 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000032897 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x000000000003290f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x000000000008d63c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000081494 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000007a6a2 : add byte ptr [rsi + 1], bh ; call 0x668b8
0x00000000000d9db7 : add byte ptr [rsi + 6], dh ; ret
0x00000000000e435f : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000001931cb : add byte ptr [rsi + rax + 2], ch ; add byte ptr [rax + 0x7e], ah ; clc ; call rbx
0x0000000000173213 : add byte ptr [rsi + rax - 0x7a880000], dh ; std ; jmp qword ptr [rdx]
0x0000000000170eaf : add byte ptr [rsi + rax - 8], cl ; jmp rsp
0x0000000000187213 : add byte ptr [rsi + rax*2 - 0x3a87ffff], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001871fb : add byte ptr [rsi + rax*2 - 0x3a9fffff], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001871e3 : add byte ptr [rsi + rax*2 - 0x3ab7ffff], al ; cmc ; jmp qword ptr [rcx]
0x00000000000b89dc : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000187183 : add byte ptr [rsi + rax*2], ah ; add dword ptr [rax], eax ; call 0x22186759
0x000000000018719b : add byte ptr [rsi + rax*2], bh ; add dword ptr [rax], eax ; add ch, al ; cmc ; jmp qword ptr [rcx]
0x000000000017f18b : add byte ptr [rsi + rax*8], ch ; add byte ptr [rax], al ; mov sil, 0xf1 ; jmp rsi
0x000000000017168f : add byte ptr [rsi + rax], bl ; stc ; call rsp
0x00000000001859b3 : add byte ptr [rsi + rbp + 1], dl ; add byte ptr [rax + 0x65], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018d963 : add byte ptr [rsi + rbp*4], al ; add dword ptr [rax], eax ; sub byte ptr [rdx - 9], dh ; call qword ptr [rcx]
0x00000000001819f3 : add byte ptr [rsi + rbp*8 + 0x3ff80000], dl ; call rdi
0x0000000000172af7 : add byte ptr [rsi + rbp*8], bh ; std ; jmp rsp
0x0000000000185983 : add byte ptr [rsi + rbp], ah ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x000000000017c993 : add byte ptr [rsi + rbx*4], dh ; add byte ptr [rax], al ; cwde ; leave ; out dx, eax ; call qword ptr [rdi]
0x0000000000192200 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001779fb : add byte ptr [rsi + rcx*2 + 0x65000000], bl ; in eax, dx ; call rdi
0x000000000018399b : add byte ptr [rsi + rcx], bh ; add dword ptr [rax], eax ; ret 0xffe9
0x0000000000173973 : add byte ptr [rsi + rcx], dl ; add byte ptr [rax], al ; mov byte ptr [rsi], dh ; jmp 0x173983
0x00000000001727bf : add byte ptr [rsi + rdi*8], bl ; cli ; jmp rsp
0x0000000000176983 : add byte ptr [rsi + rdi], ah ; add byte ptr [rax], al ; sbb byte ptr [rbx - 0x14], ah ; jmp rax
0x0000000000186973 : add byte ptr [rsi + rdi], dl ; add dword ptr [rax], eax ; test al, 0xa3 ; cmc ; jmp rdx
0x00000000001881d3 : add byte ptr [rsi + rdx*2 + 1], dh ; add byte ptr [rax - 4], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018821b : add byte ptr [rsi + rdx*2 - 0x35fffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000188203 : add byte ptr [rsi + rdx*2 - 0x377ffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018818b : add byte ptr [rsi + rdx*2], ch ; add dword ptr [rax], eax ; loopne 0x188195 ; cmc ; jmp qword ptr [rcx]
0x000000000016efef : add byte ptr [rsi + rsi*4 - 0xf], bl ; jmp rsp
0x0000000000160ee8 : add byte ptr [rsi + rsi*8 - 0x953ff01], ch ; call rax
0x0000000000176183 : add byte ptr [rsi + rsi], ah ; add byte ptr [rax], al ; cwde ; or esp, ebp ; jmp qword ptr [rdx]
0x000000000017616b : add byte ptr [rsi + rsi], cl ; add byte ptr [rax], al ; nop ; or esp, ebp ; jmp qword ptr [rax]
0x000000000016e79f : add byte ptr [rsi - 0x10], ch ; call rsp
0x000000000016dd27 : add byte ptr [rsi - 0x14], bh ; call rsp
0x000000000016d010 : add byte ptr [rsi - 0x428f0004], bh ; cld ; jmp rax
0x00000000000216ed : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015f080 : add byte ptr [rsi - 0xd], bl ; jmp qword ptr [rax]
0x000000000015f2c0 : add byte ptr [rsi - 0xd], dh ; jmp qword ptr [rax]
0x000000000001faec : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016e167 : add byte ptr [rsi], bh ; out dx, eax ; jmp rsp
0x00000000000df942 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d94f9 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000172837 : add byte ptr [rsp + rax - 5], ch ; jmp rsp
0x000000000018afab : add byte ptr [rsp + rax*4 + 1], cl ; add al, ah ; mov cl, 0xf6 ; call qword ptr [rbx]
0x000000000018af93 : add byte ptr [rsp + rax*4], dh ; add dword ptr [rax], eax ; call 0x1118a656
0x000000000019648f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000016df77 : add byte ptr [rsp + rbp*2 - 0x13], bl ; call rsp
0x000000000016fe8f : add byte ptr [rsp + rbp*2 - 0xa], cl ; call rsp
0x00000000001917cb : add byte ptr [rsp + rbp*8 + 1], ch ; add al, ah ; sub bh, al ; call qword ptr [rdx]
0x0000000000185763 : add byte ptr [rsp + rbp], al ; add dword ptr [rax], eax ; or byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018577b : add byte ptr [rsp + rbp], bl ; add dword ptr [rax], eax ; and byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x000000000017880b : add byte ptr [rsp + rbx*2 - 0x28500000], ch ; out dx, al ; jmp qword ptr [rax]
0x000000000016f4d7 : add byte ptr [rsp + rbx*4 - 0xd], ch ; call rsp
0x000000000016dcc7 : add byte ptr [rsp + rbx*4], ch ; in al, dx ; jmp rsp
0x00000000001837eb : add byte ptr [rsp + rcx + 0x1ce00001], cl ; hlt ; jmp qword ptr [rdi]
0x00000000001937c3 : add byte ptr [rsp + rcx + 2], ah ; add byte ptr [rax], bh ; xchg eax, edx ; clc ; jmp qword ptr [rsi]
0x0000000000187803 : add byte ptr [rsp + rcx*2 - 0x2807ffff], ah ; cmc ; call qword ptr [rax]
0x000000000009b7e4 : add byte ptr [rsp + rcx*2 - 0x75], ah ; add cl, ch ; ret 0xb0
0x00000000000d3e61 : add byte ptr [rsp + rcx*2 - 0xd], dh ; ret
0x000000000018b7cb : add byte ptr [rsp + rcx*4 + 1], ch ; add al, dh ; ret 0xfff6
0x000000000018b7b3 : add byte ptr [rsp + rcx*4 + 1], dl ; add al, ch ; ret 0xfff6
0x0000000000170cd7 : add byte ptr [rsp + rcx*8 - 9], bh ; jmp rsp
0x0000000000186813 : add byte ptr [rsp + rdi - 0x5dd7ffff], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001867e3 : add byte ptr [rsp + rdi - 0x5eb7ffff], al ; cmc ; jmp rdx
0x000000000016cab8 : add byte ptr [rsp + rdi*8 - 0x35c6f01], ah ; jmp qword ptr [rax]
0x0000000000192813 : add byte ptr [rsp + rdi*8 - 0x6667ffff], dh ; sti ; jmp qword ptr [rdx]
0x000000000016c5cc : add byte ptr [rsp + rdi*8 - 1], bh ; nop ; jnp 0x16c5d6 ; jmp qword ptr [rax]
0x000000000016c08c : add byte ptr [rsp + rdi*8], ah ; jmp rax
0x000000000016d73f : add byte ptr [rsp + rdi*8], bl ; jmp 0x16d747
0x000000000018677b : add byte ptr [rsp + rdi], bl ; add dword ptr [rax], eax ; push rax ; lahf ; cmc ; jmp qword ptr [rcx]
0x0000000000187f6b : add byte ptr [rsp + rdx*2], cl ; add dword ptr [rax], eax ; loopne 0x187f73 ; cmc ; call qword ptr [rax]
0x0000000000020843 : add byte ptr [rsp + rdx], cl ; ret
0x00000000001704cf : add byte ptr [rsp + rsi - 9], bh ; jmp rsp
0x0000000000191feb : add byte ptr [rsp + rsi*8 + 0x35b00001], cl ; clc ; jmp qword ptr [rbx]
0x000000000018201b : add byte ptr [rsp + rsi*8 + 0x56700000], bh ; jmp qword ptr [rcx]
0x0000000000175f8b : add byte ptr [rsp + rsi], ch ; add byte ptr [rax], al ; nop ; add ebp, esp ; jmp qword ptr [rsi]
0x0000000000174f83 : add byte ptr [rsp], ah ; add byte ptr [rax], al ; test al, 0xd9 ; jmp 0x174f93
0x0000000000174fcb : add byte ptr [rsp], ch ; add al, dl ; fldpi ; call qword ptr [rdx]
0x0000000000174fb3 : add byte ptr [rsp], dl ; add al, cl ; fldpi ; call qword ptr [rdx]
0x00000000000b88bd : add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x00000000000b41fc : add byte ptr cs:[rax - 0x77], cl ; ret
0x00000000000b4795 : add byte ptr cs:[rax - 0x77], cl ; ret 0x8d48
0x00000000000b3eed : add byte ptr cs:[rax - 0x77], cl ; ret 0x9ce9
0x00000000000ac519 : add byte ptr cs:[rax - 0x7bf0ffc2], al ; ret 0xfff3
0x000000000002ae31 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000044307 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000176985 : add byte ptr ds:[rax], al ; sbb byte ptr [rbx - 0x14], ah ; jmp rax
0x00000000000e435e : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x0000000000033d1a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000005cdb4 : add byte ptr fs:[rax], al ; add al, ch ; ret
0x0000000000181ec4 : add byte ptr fs:[rax], al ; test al, 0x51 ; call qword ptr [rdx]
0x0000000000071590 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000068a43 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002dace : add byte ptr ss:[rax - 0x77], cl ; ret 0x8348
0x00000000000305cb : add byte ptr ss:[rax - 0x77], cl ; ret 0x8948
0x0000000000176185 : add byte ptr ss:[rax], al ; cwde ; or esp, ebp ; jmp qword ptr [rdx]
0x000000000017616d : add byte ptr ss:[rax], al ; nop ; or esp, ebp ; jmp qword ptr [rax]
0x00000000000330d4 : add byte ptr ss:[rbp - 0xcf98a40], al ; ret
0x0000000000033eef : add byte ptr ss:[rcx], bh ; ret 0x237f
0x0000000000175ea9 : add ch, ah ; call qword ptr [rcx]
0x0000000000175ed9 : add ch, ah ; call qword ptr [rdx]
0x0000000000194df7 : add ch, al ; add eax, dword ptr [rax] ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; ret 7
0x00000000000b4558 : add ch, al ; and dh, byte ptr [rbx - 0x76b7000a] ; ret 0x8948
0x00000000001871a0 : add ch, al ; cmc ; jmp qword ptr [rcx]
0x00000000000c2771 : add ch, al ; pop rcx ; sal ch, 1 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000c4c77 : add ch, al ; ret
0x00000000001733f1 : add ch, bl ; call qword ptr [rax]
0x0000000000032eb7 : add ch, bl ; fpatan ; ret
0x000000000014cb9c : add ch, bl ; in eax, dx ; push rax ; fsub st(5), st(0) ; jmp rax
0x000000000015d0bc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000015d0bd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000a88e9 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000a7d60 : add ch, byte ptr [rcx] ; ret 0x8d41
0x000000000006a80a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000004fa7a : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000001813f7 : add ch, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000033b76 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000004c5b1 : add cl, bl ; in eax, 0xdf ; loopne 0x4c546 ; ret 0xe680
0x000000000004e232 : add cl, bl ; in eax, 0xdf ; loopne 0x4e1c7 ; ret 0xe680
0x00000000000e61f5 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000910ec : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000050366 : add cl, byte ptr [rax + 0x29] ; ret
0x000000000003842f : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000038459 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000001016ab : add cl, byte ptr [rax + 0x39] ; ret 0x1f72
0x000000000010169d : add cl, byte ptr [rax + 0x39] ; ret 0x2d72
0x00000000000e61f6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x000000000017c4ad : add cl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000006b989 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000a5f2b : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000ad8c7 : add cl, byte ptr [rax - 0x46] ; ret
0x00000000000910ed : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000008cf67 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000068d6f : add cl, byte ptr [rax - 0x77] ; ret
0x00000000000733e2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000e2592 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000007c540 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000024e64 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000c15ee : add cl, byte ptr [rax - 0x7d] ; ret 0xc701
0x000000000007c5a3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000115675 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x000000000003dcc4 : add cl, byte ptr [rbp + 0xf] ; mov esi, 0x850f026a ; ret 0xe
0x0000000000102a1f : add cl, byte ptr [rbp + 0xf] ; ret
0x0000000000134232 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000641d2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x000000000015deb0 : add cl, byte ptr [rcx - 0x2d8a0011] ; out dx, eax ; jmp rsi
0x00000000000b4f2e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000002c344 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000dab37 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000d3659 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000652d5 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000012312b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000098fa3 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000172d7d : add cl, byte ptr [rdx + 0xe] ; sbb byte ptr [rbx + 0xa950203], al ; ret
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000018e318 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x000000000005d3f4 : add cl, ch ; idiv dil ; dec dword ptr [rax - 0x77] ; ret
0x000000000002fd8f : add cl, ch ; jmp 0x4902fd8f
0x0000000000060049 : add cl, ch ; pop rsp ; ret 0xffff
0x00000000000246d4 : add cl, ch ; ret
0x000000000009b7e8 : add cl, ch ; ret 0xb0
0x000000000005aff8 : add cl, ch ; ret 0xff9d
0x00000000000d3975 : add cl, ch ; ret 0xffeb
0x000000000003e075 : add cl, ch ; ret 0xfff3
0x000000000005704b : add cl, ch ; ret 0xfff9
0x00000000000c917a : add cl, ch ; ret 0xfffc
0x00000000000d77b0 : add cl, ch ; ret 0xfffe
0x0000000000060061 : add cl, ch ; ret 0xffff
0x000000000005feaa : add cl, ch ; sti ; ret
0x000000000016ce84 : add cl, cl ; cld ; call qword ptr [rdx + 0x22fffcc8]
0x00000000000f4766 : add cl, cl ; ret
0x000000000017b2a0 : add dh, ah ; ret
0x00000000000c00cf : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000016f587 : add dh, al ; stosd dword ptr [rdi], eax ; jmp rsp
0x000000000016145b : add dh, bh ; jmp rdi
0x0000000000157577 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001343e3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000c042d : add dh, bl ; ret
0x000000000009822b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000010f842 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001780f5 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000c780d : add dh, byte ptr [rcx] ; imul al ; jnp 0xc77be ; sti ; call rcx
0x000000000018e2dd : add dh, byte ptr [rdx + 0xa] ; ret
0x000000000010f841 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001884c1 : add dh, dh ; jmp qword ptr [rcx]
0x0000000000074986 : add dh, dh ; ret
0x0000000000023aa6 : add dh, dh ; ret 0x4801
0x0000000000081e28 : add dh, dh ; ret 0x7404
0x0000000000065ddf : add dh, dh ; ret 0x7420
0x0000000000149467 : add dh, dh ; ret 0x7501
0x0000000000149474 : add dh, dh ; ret 0x7502
0x0000000000149481 : add dh, dh ; ret 0x7504
0x0000000000149439 : add dh, dh ; ret 0x7510
0x0000000000149446 : add dh, dh ; ret 0x7520
0x00000000000c3c97 : add dh, dh ; ret 0x7540
0x00000000000d3fca : add dh, dh ; ret 0xf01
0x000000000010a0a3 : add dh, dh ; ret 0xf04
0x000000000008f8f2 : add dh, dh ; ret 0xf20
0x000000000008f8fb : add dh, dh ; ret 0xf40
0x00000000000f0da6 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000f123a : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000a7629 : add dil, r15b ; ret
0x0000000000187090 : add dl, 0xf5 ; call qword ptr [rdx]
0x000000000016cfec : add dl, 0xfc ; inc dword ptr [rax] ; ret 0xfffc
0x0000000000179947 : add dl, byte ptr [rbp + 0xa] ; ret
0x000000000017c3a5 : add dl, byte ptr [rdi + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000193711 : add dl, byte ptr [rsi + rcx + 0x10] ; ret
0x000000000003272f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000193990 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00000000000d0c85 : add dword ptr [r10 + rdx*8 - 0x76b21a8b], eax ; ret 0x894d
0x000000000017dcfc : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x00000000000402b4 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000186d2d : add dword ptr [r8], eax ; mov cl, 0xf5 ; jmp rdi
0x000000000018708d : add dword ptr [r8], r8d ; add dl, 0xf5 ; call qword ptr [rdx]
0x00000000001870f5 : add dword ptr [r8], r8d ; clc ; ret
0x000000000018713d : add dword ptr [r8], r8d ; jo 0x18710c ; cmc ; jmp qword ptr [rcx]
0x0000000000187155 : add dword ptr [r8], r8d ; mov ah, al ; cmc ; jmp qword ptr [rcx]
0x0000000000187275 : add dword ptr [r8], r8d ; or dh, al ; cmc ; jmp qword ptr [rdx]
0x00000000000c0178 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000143ae1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000ba655 : add dword ptr [rax + 0x29], ecx ; ret
0x00000000000440ca : add dword ptr [rax + 0x29], ecx ; ret 0x149
0x00000000000c6d3c : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x000000000002610e : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000c67c3 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00000000000dcaa3 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000004314c : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000004b614 : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000dca97 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000c6893 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000bde5d : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x000000000008cd3e : add dword ptr [rax + 0x39], ecx ; ret 0xeb77
0x00000000000a5d58 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x00000000000a5198 : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x0000000000042beb : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x000000000008b8ea : add dword ptr [rax + 0x39], ecx ; ret 0xef77
0x000000000008c0ba : add dword ptr [rax + 0x39], ecx ; ret 0xf075
0x000000000008e000 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x00000000000a5ea9 : add dword ptr [rax + 0x39], ecx ; ret 0xf175
0x0000000000041e8b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000b09c5 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000e3b51 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000eedf7 : add dword ptr [rax + 0xf], eax ; ret 0xfc3
0x00000000000c861c : add dword ptr [rax + 0xf], ecx ; ret
0x000000000005cec9 : add dword ptr [rax + 1], ecx ; ret
0x0000000000020522 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000c00f3 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000bebe7 : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0xa73
0x00000000000bce2c : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0xb73
0x00000000000822d1 : add dword ptr [rax + rax], ecx ; ret
0x000000000010aac5 : add dword ptr [rax + rcx + 0x31], esi ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000018f35e : add dword ptr [rax + rdi*2], 0xa ; ret
0x00000000000b984e : add dword ptr [rax - 0x6bf08406], eax ; ret 0xb60f
0x000000000002d65b : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000e61f2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000910c6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000013f742 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000008cf56 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000724d5 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000006f73d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000022014 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000038eb5 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x0000000000101f40 : add dword ptr [rax - 0x78], eax ; ja 0x101f4b ; ret
0x0000000000114545 : add dword ptr [rax - 0x78], eax ; je 0x1145a7 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000011463d : add dword ptr [rax - 0x78], eax ; je 0x11469f ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000c0b65 : add dword ptr [rax - 0x7d], ecx ; call 0xffffffffc20d5778
0x00000000001456fa : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000020c0a : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000100c15 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000cdcaa : add dword ptr [rax - 0x7d], ecx ; ret 0x3b04
0x00000000000c5823 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x000000000004040c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000c2caf : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000cfa32 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x0000000000034969 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000bdfcb : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000034be9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000b2ab6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x0000000000024659 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d01
0x00000000000cde85 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d10
0x0000000000114495 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000a48ac : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x00000000000a662f : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000650b0 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x00000000000de2c9 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000000c69e4 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000c529e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000041c5b : add dword ptr [rax], 0x89410000 ; ret
0x00000000000e9d03 : add dword ptr [rax], 1 ; ret
0x00000000001883fe : add dword ptr [rax], eax ; adc bh, bh ; cmc ; jmp qword ptr [rcx]
0x000000000018809e : add dword ptr [rax], eax ; adc bl, bh ; cmc ; jmp qword ptr [rcx]
0x00000000001845ae : add dword ptr [rax], eax ; add ah, 0xf4 ; call rdx
0x00000000001844ce : add dword ptr [rax], eax ; add ah, al ; hlt ; jmp qword ptr [rcx]
0x0000000000172c8d : add dword ptr [rax], eax ; add al, al ; fucomi st(2) ; call qword ptr [rax]
0x0000000000024a66 : add dword ptr [rax], eax ; add al, ch ; ret 0x77
0x00000000000bff7d : add dword ptr [rax], eax ; add al, ch ; stosd dword ptr [rdi], eax ; ret 0xfff6
0x000000000014176c : add dword ptr [rax], eax ; add bl, al ; ret
0x0000000000065efa : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000002831d : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000000275a5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000006728d : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000064248 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000001160c6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000119469 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000010c360 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; jl 0x10c394 ; adc al, ch ; ret
0x00000000000761f8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000011ca5d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000006f1ea : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c502b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000ccc56 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002af0d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000789f4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000078b20 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002336b : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000077457 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000a416a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000b7f7e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000011e3ed : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012489f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c5015 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x000000000011e341 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000286ba : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006991a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001884ee : add dword ptr [rax], eax ; add byte ptr [rax], 0xf6 ; jmp qword ptr [rcx]
0x00000000000215c1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000015757a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015672a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000156552 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015654a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000156ce2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000009a861 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x00000000000529ae : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00000000000471ac : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000010acd3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007b503 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c35a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x1f886
0x000000000007a6a4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x668b6
0x000000000014b421 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x14b438 ; neg eax ; ret
0x000000000009a2a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x9a2b1 ; neg eax ; ret
0x0000000000149377 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x149388 ; neg eax ; ret
0x00000000000c28ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xc28bb
0x00000000000b8b13 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xb8b27 ; ret
0x000000000010dc73 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000007ad4e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010b1b9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000004396e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000109b3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000267d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r10d, r8d ; jmp 0x267fd
0x0000000000064f0c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000000648c9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000ca5c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xca5e0
0x000000000004e09b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000068c2e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000072913 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000022975 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000006a200 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000033df8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006394e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c8412 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000018593e : add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018d3be : add dword ptr [rax], eax ; add byte ptr [rbp - 9], cl ; call rcx
0x00000000000db9e6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003f257 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006b7a2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000029ccf : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0f908], al ; ret 2
0x00000000000adcd6 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0xf40
0x000000000010bd58 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000007b260 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, r8 ; call rax
0x000000000002b90f : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; mov byte ptr [rcx], 0x83 ; ret
0x0000000000022aac : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000010724d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000025b82 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x00000000001852ee : add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dl ; jmp qword ptr [rcx]
0x00000000000b2422 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000010cb79 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000008d63a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000018719e : add dword ptr [rax], eax ; add ch, al ; cmc ; jmp qword ptr [rcx]
0x00000000000c2f88 : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000149465 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000149472 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000014947f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000149437 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000149444 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000149451 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000d3fc8 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x000000000018708e : add dword ptr [rax], eax ; add dl, 0xf5 ; call qword ptr [rdx]
0x00000000000e292d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000004eba0 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x0000000000187d6e : add dword ptr [rax], eax ; and al, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018577e : add dword ptr [rax], eax ; and byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018563e : add dword ptr [rax], eax ; and byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x000000000019163e : add dword ptr [rax], eax ; and byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x000000000018af96 : add dword ptr [rax], eax ; call 0x1118a653
0x000000000018b7b6 : add dword ptr [rax], eax ; call 0x1818ae84
0x00000000001844b6 : add dword ptr [rax], eax ; call 0x22183985
0x00000000001852d6 : add dword ptr [rax], eax ; call 0x22184832
0x0000000000185926 : add dword ptr [rax], eax ; call 0x22184e96
0x0000000000187186 : add dword ptr [rax], eax ; call 0x22186756
0x0000000000188266 : add dword ptr [rax], eax ; call 0x2218786e
0x0000000000185ed6 : add dword ptr [rax], eax ; call 0xffffffffe218546a
0x0000000000188086 : add dword ptr [rax], eax ; clc ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000184f46 : add dword ptr [rax], eax ; clc ; cmc ; call qword ptr [rax]
0x00000000001870f6 : add dword ptr [rax], eax ; clc ; ret
0x000000000018b7e6 : add dword ptr [rax], eax ; clc ; ret 0xfff6
0x00000000001862a6 : add dword ptr [rax], eax ; clc ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x0000000000187806 : add dword ptr [rax], eax ; clc ; xlatb ; cmc ; call qword ptr [rax]
0x000000000016ef3e : add dword ptr [rax], eax ; cld ; push rcx ; int1 ; jmp rsp
0x000000000016fa66 : add dword ptr [rax], eax ; cld ; ret 0xfff4
0x0000000000185986 : add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x000000000008109a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001710ae : add dword ptr [rax], eax ; cmp al, 0x67 ; clc ; jmp rsp
0x000000000016f5a6 : add dword ptr [rax], eax ; cmp al, 0xb1 ; call rsp
0x000000000016fa96 : add dword ptr [rax], eax ; cmp al, 0xc8 ; hlt ; call rsp
0x0000000000172a0e : add dword ptr [rax], eax ; cmp al, 0xe3 ; std ; call rsp
0x0000000000171606 : add dword ptr [rax], eax ; cmp al, 0xe8 ; clc ; jmp rsp
0x000000000018812e : add dword ptr [rax], eax ; cmp bl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001880e6 : add dword ptr [rax], eax ; cmp bl, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000188b16 : add dword ptr [rax], eax ; cwde ; adc dh, dh ; call qword ptr [rdx]
0x0000000000188506 : add dword ptr [rax], eax ; cwde ; add dh, dh ; jmp qword ptr [rcx]
0x0000000000192816 : add dword ptr [rax], eax ; cwde ; cdq ; sti ; jmp qword ptr [rdx]
0x0000000000185686 : add dword ptr [rax], eax ; cwde ; pop rax ; cmc ; jmp qword ptr [rcx]
0x0000000000188146 : add dword ptr [rax], eax ; cwde ; sti ; cmc ; jmp qword ptr [rcx]
0x000000000017295e : add dword ptr [rax], eax ; fadd qword ptr [rsi - 4] ; jmp rsp
0x00000000001855f6 : add dword ptr [rax], eax ; fcom dword ptr [rdi - 0xb] ; jmp qword ptr [rcx]
0x0000000000190f36 : add dword ptr [rax], eax ; fcom dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000001716fe : add dword ptr [rax], eax ; fcomp qword ptr [rax] ; stc ; jmp rsp
0x0000000000185146 : add dword ptr [rax], eax ; fmul dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000001706fe : add dword ptr [rax], eax ; fsub qword ptr [rbx - 9] ; call rsp
0x000000000016fac6 : add dword ptr [rax], eax ; fsub st(6), st(0) ; hlt ; call rsp
0x0000000000187d26 : add dword ptr [rax], eax ; fsub st(7) ; cmc ; jmp qword ptr [rcx]
0x0000000000171166 : add dword ptr [rax], eax ; fsubr qword ptr [rbx - 8] ; call rsp
0x0000000000170e96 : add dword ptr [rax], eax ; in al, dx ; add al, bh ; inc esp ; ret 1
0x0000000000170c76 : add dword ptr [rax], eax ; in al, dx ; ret
0x000000000016f05e : add dword ptr [rax], eax ; in al, dx ; ret 0xfff1
0x000000000016f9c6 : add dword ptr [rax], eax ; in al, dx ; scasd eax, dword ptr [rdi] ; hlt ; jmp rsp
0x00000000001709e6 : add dword ptr [rax], eax ; in al, dx ; test al, 0xf7 ; call rsp
0x000000000016f4be : add dword ptr [rax], eax ; in al, dx ; xchg eax, ebp ; call rsp
0x000000000016f3ee : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; and bl, dh ; call rsp
0x000000000016fc2e : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; push rdi ; cmc ; jmp rsp
0x000000000016f4d6 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; pushfq ; call rsp
0x000000000016f066 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; ret
0x000000000016ffae : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; ret 0xfff6
0x0000000000041026 : add dword ptr [rax], eax ; jne 0x41028 ; mov rax, rbx ; pop rbx ; ret
0x000000000017077e : add dword ptr [rax], eax ; jo 0x17077f ; jmp rsp
0x000000000018443e : add dword ptr [rax], eax ; jo 0x18440a ; hlt ; jmp qword ptr [rcx]
0x000000000018713e : add dword ptr [rax], eax ; jo 0x18710b ; cmc ; jmp qword ptr [rcx]
0x000000000018ddde : add dword ptr [rax], eax ; jo 0x18ddc9 ; sti ; jmp qword ptr [rdx]
0x0000000000184596 : add dword ptr [rax], eax ; js 0x184563 ; hlt ; call qword ptr [rdx]
0x0000000000185336 : add dword ptr [rax], eax ; js 0x185390 ; cmc ; jmp qword ptr [rcx]
0x0000000000185476 : add dword ptr [rax], eax ; js 0x1854d2 ; cmc ; jmp qword ptr [rcx]
0x00000000001859b6 : add dword ptr [rax], eax ; js 0x185a24 ; cmc ; jmp qword ptr [rcx]
0x0000000000186676 : add dword ptr [rax], eax ; js 0x18661c ; cmc ; jmp qword ptr [rcx]
0x0000000000186706 : add dword ptr [rax], eax ; js 0x1866ad ; cmc ; jmp qword ptr [rcx]
0x0000000000187216 : add dword ptr [rax], eax ; js 0x1871e4 ; cmc ; jmp qword ptr [rcx]
0x0000000000187ef6 : add dword ptr [rax], eax ; js 0x187ef8 ; cmc ; jmp qword ptr [rcx]
0x0000000000191d16 : add dword ptr [rax], eax ; js 0x191d51 ; clc ; call qword ptr [rcx]
0x000000000016fd4e : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; adc esi, esi ; call rsp
0x000000000016f7f6 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; jno 0x16f7f4 ; call rsp
0x000000000016f7f5 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; jno 0x16f7f5 ; call rsp
0x00000000001837ee : add dword ptr [rax], eax ; loopne 0x183813 ; hlt ; jmp qword ptr [rdi]
0x000000000018628e : add dword ptr [rax], eax ; loopne 0x18622c ; cmc ; jmp qword ptr [rcx]
0x0000000000187f6e : add dword ptr [rax], eax ; loopne 0x187f70 ; cmc ; call qword ptr [rax]
0x000000000018806e : add dword ptr [rax], eax ; loopne 0x188071 ; cmc ; jmp qword ptr [rcx]
0x000000000018818e : add dword ptr [rax], eax ; loopne 0x188192 ; cmc ; jmp qword ptr [rcx]
0x0000000000190f4e : add dword ptr [rax], eax ; loopne 0x190f6e ; clc ; call qword ptr [rbx]
0x000000000019138e : add dword ptr [rax], eax ; loopne 0x1913b6 ; clc ; call qword ptr [rdx]
0x00000000001917ce : add dword ptr [rax], eax ; loopne 0x191801 ; clc ; call qword ptr [rdx]
0x00000000001928fe : add dword ptr [rax], eax ; loopne 0x19289f ; sti ; jmp qword ptr [rdx]
0x0000000000187156 : add dword ptr [rax], eax ; mov ah, al ; cmc ; jmp qword ptr [rcx]
0x0000000000184546 : add dword ptr [rax], eax ; mov ah, al ; hlt ; call qword ptr [rdi]
0x0000000000188206 : add dword ptr [rax], eax ; mov ah, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000191fee : add dword ptr [rax], eax ; mov al, 0x35 ; clc ; jmp qword ptr [rbx]
0x000000000019238e : add dword ptr [rax], eax ; mov al, 0x38 ; clc ; jmp qword ptr [rcx]
0x0000000000187e1e : add dword ptr [rax], eax ; mov al, 0xf8 ; cmc ; jmp qword ptr [rcx]
0x000000000018815e : add dword ptr [rax], eax ; mov al, 0xfb ; cmc ; jmp qword ptr [rcx]
0x0000000000188446 : add dword ptr [rax], eax ; mov bh, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000184456 : add dword ptr [rax], eax ; mov bl, al ; hlt ; jmp qword ptr [rcx]
0x0000000000185576 : add dword ptr [rax], eax ; mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x0000000000186d2e : add dword ptr [rax], eax ; mov cl, 0xf5 ; jmp rdi
0x00000000001715de : add dword ptr [rax], eax ; mov ebx, fs ; clc ; call rsp
0x00000000001715be : add dword ptr [rax], eax ; mov esi, ds ; clc ; call rsp
0x000000000008d42c : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008d371 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00000000000fe9b3 : add dword ptr [rax], eax ; mov rdi, r12 ; call rbx
0x000000000018b25e : add dword ptr [rax], eax ; mov sil, 0xf6 ; jmp rdi
0x0000000000187a6e : add dword ptr [rax], eax ; nop ; loopne 0x187a6d ; call qword ptr [rdx]
0x000000000018534e : add dword ptr [rax], eax ; nop ; push rcx ; cmc ; jmp qword ptr [rcx]
0x000000000018671e : add dword ptr [rax], eax ; nop ; sahf ; cmc ; jmp qword ptr [rcx]
0x0000000000187f0e : add dword ptr [rax], eax ; nop ; stc ; cmc ; jmp qword ptr [rcx]
0x000000000018912e : add dword ptr [rax], eax ; nop ; sub esi, esi ; call rdi
0x000000000018772e : add dword ptr [rax], eax ; nop ; xlatb ; cmc ; call qword ptr [rdx]
0x00000000001727d6 : add dword ptr [rax], eax ; or al, 2 ; sti ; jmp rsp
0x0000000000185766 : add dword ptr [rax], eax ; or byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000185626 : add dword ptr [rax], eax ; or byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x000000000018d1e6 : add dword ptr [rax], eax ; or byte ptr [rbp - 9], al ; jmp qword ptr [rdi]
0x00000000001896d6 : add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], al ; call rsi
0x0000000000189bd6 : add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], dl ; jmp qword ptr [rcx]
0x0000000000187276 : add dword ptr [rax], eax ; or dh, al ; cmc ; jmp qword ptr [rdx]
0x000000000018c82e : add dword ptr [rax], eax ; or edi, esi ; call qword ptr [rbx]
0x0000000000187c96 : add dword ptr [rax], eax ; out 0xf5, eax ; jmp qword ptr [rcx]
0x00000000001881d6 : add dword ptr [rax], eax ; pop rax ; cld ; cmc ; jmp qword ptr [rcx]
0x0000000000192346 : add dword ptr [rax], eax ; pop rax ; cmp al, bh ; call qword ptr [rdx]
0x0000000000184366 : add dword ptr [rax], eax ; pop rax ; ret
0x000000000018b756 : add dword ptr [rax], eax ; pop rax ; ret 0xfff6
0x000000000008d4ab : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000016efee : add dword ptr [rax], eax ; pop rsp ; mov dh, 0xf1 ; jmp rsp
0x000000000016f62e : add dword ptr [rax], eax ; pop rsp ; ret 0xfff3
0x000000000016ffa6 : add dword ptr [rax], eax ; pop rsp ; ret 0xfff6
0x00000000001850de : add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000018677e : add dword ptr [rax], eax ; push rax ; lahf ; cmc ; jmp qword ptr [rcx]
0x00000000001880fe : add dword ptr [rax], eax ; push rax ; sti ; cmc ; jmp qword ptr [rcx]
0x000000000016f406 : add dword ptr [rax], eax ; pushfq ; call rsp
0x000000000016f69e : add dword ptr [rax], eax ; pushfq ; jrcxz 0x16f69b ; call rsp
0x00000000001714ce : add dword ptr [rax], eax ; pushfq ; lodsd eax, dword ptr [rsi] ; clc ; jmp rsp
0x000000000016fa0e : add dword ptr [rax], eax ; pushfq ; mov cl, 0xf4 ; call rsp
0x000000000018d6ce : add dword ptr [rax], eax ; rcr byte ptr [rbp - 9], 1 ; jmp qword ptr [rcx]
0x000000000007c402 : add dword ptr [rax], eax ; ret
0x000000000018399e : add dword ptr [rax], eax ; ret 0xffe9
0x000000000016ff9e : add dword ptr [rax], eax ; ret 0xfff6
0x000000000018449e : add dword ptr [rax], eax ; rol bl, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001837be : add dword ptr [rax], eax ; sahf ; ret
0x000000000018925e : add dword ptr [rax], eax ; sal byte ptr [rax], 0xf6 ; call rsi
0x000000000018e02e : add dword ptr [rax], eax ; sal dh, 1 ; clc ; call qword ptr [rax]
0x000000000018824e : add dword ptr [rax], eax ; sar ah, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000018848e : add dword ptr [rax], eax ; sar bh, 1 ; cmc ; call qword ptr [rsi]
0x0000000000187f3e : add dword ptr [rax], eax ; sar cl, 0xf5 ; jmp qword ptr [rcx]
0x000000000016fba6 : add dword ptr [rax], eax ; sbb al, 0x48 ; cmc ; call rsp
0x0000000000171596 : add dword ptr [rax], eax ; sbb al, 0xd5 ; clc ; call rsp
0x00000000001727be : add dword ptr [rax], eax ; sbb al, 0xfe ; cli ; jmp rsp
0x000000000017168e : add dword ptr [rax], eax ; sbb al, 6 ; stc ; call rsp
0x0000000000185956 : add dword ptr [rax], eax ; sbb byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000187eae : add dword ptr [rax], eax ; stc ; cmc ; call qword ptr [rcx]
0x00000000001882c6 : add dword ptr [rax], eax ; std ; cmc ; jmp qword ptr [rcx]
0x000000000018a6b6 : add dword ptr [rax], eax ; sub byte ptr [rax], bl ; cld ; jmp qword ptr [rsi]
0x000000000018d966 : add dword ptr [rax], eax ; sub byte ptr [rdx - 9], dh ; call qword ptr [rcx]
0x0000000000184f06 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], al ; call qword ptr [rax]
0x0000000000187896 : add dword ptr [rax], eax ; sub cl, bl ; cmc ; jmp rax
0x000000000018a3f6 : add dword ptr [rax], eax ; test al, 0x31 ; stc ; jmp qword ptr [rsi]
0x0000000000186976 : add dword ptr [rax], eax ; test al, 0xa3 ; cmc ; jmp rdx
0x0000000000187cf6 : add dword ptr [rax], eax ; test al, 0xe7 ; cmc ; jmp qword ptr [rcx]
0x0000000000187f26 : add dword ptr [rax], eax ; test al, 0xf9 ; cmc ; jmp qword ptr [rcx]
0x0000000000186156 : add dword ptr [rax], eax ; xchg rax, rbx ; cmc ; call rdx
0x000000000018df26 : add dword ptr [rax], eax ; xchg rdi, rsi ; call rcx
0x000000000018588e : add dword ptr [rax], eax ; xor byte ptr [rdx - 0xb], ah ; call rax
0x0000000000184ebe : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], al ; call qword ptr [rsi]
0x00000000001871ce : add dword ptr [rax], eax ; xor ch, al ; cmc ; jmp qword ptr [rcx]
0x00000000001882ae : add dword ptr [rax], eax ; xor ch, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000080c16 : add dword ptr [rax], edi ; ret 0x940f
0x000000000018719d : add dword ptr [rax], r8d ; add ch, al ; cmc ; jmp qword ptr [rcx]
0x0000000000187185 : add dword ptr [rax], r8d ; call 0x22186757
0x0000000000187215 : add dword ptr [rax], r8d ; js 0x1871e5 ; cmc ; jmp qword ptr [rcx]
0x00000000001871cd : add dword ptr [rax], r8d ; xor ch, al ; cmc ; jmp qword ptr [rcx]
0x00000000000d3eaa : add dword ptr [rbp + 0x3b], esi ; ret
0x0000000000098fdc : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x000000000005a80e : add dword ptr [rbp + 0x538f0fff], eax ; ret 0xffff
0x00000000000f679f : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x0000000000102286 : add dword ptr [rbp + 0x75020254], ecx ; ret
0x00000000000af2c6 : add dword ptr [rbp + 1], ecx ; ret
0x00000000001057d9 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000009a897 : add dword ptr [rbp - 0x1a], esi ; ret
0x0000000000041eb4 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x00000000000b2ca1 : add dword ptr [rbp - 0x24], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001022a2 : add dword ptr [rbp - 0x55], esi ; mov eax, 0xffffffff ; ret
0x0000000000045de5 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000000e5d69 : add dword ptr [rbp - 0xc], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000899a4 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00000000001342a2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000bfa72 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000cbd6a : add dword ptr [rbx + 0x294803e0], eax ; ret 0x8d49
0x000000000000271e : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x00000000000fb998 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00000000001831f6 : add dword ptr [rbx + rax], 0x33 ; add dword ptr [rdx], ecx ; ret
0x000000000018c9b6 : add dword ptr [rbx + rax], 0x59 ; add dword ptr [rdx], ecx ; ret
0x00000000000c4b8a : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000101f62 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000031441 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000a48a9 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00000000000c61aa : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x0000000000073f65 : add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000189f1e : add dword ptr [rbx], 0xa ; ret
0x0000000000193964 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001739cb : add dword ptr [rbx], eax ; ret 0xe01
0x0000000000193961 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000010dc61 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000000000e9d71 : add dword ptr [rcx + 0x1f0fc302], ecx ; add bl, dh ; ret
0x000000000008070a : add dword ptr [rcx + 0x29], ecx ; ret
0x000000000009ad5f : add dword ptr [rcx + 0x39], eax ; ret
0x00000000000c4886 : add dword ptr [rcx + 0x39], eax ; ret 0x8e0f
0x0000000000023cb0 : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000080767 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x000000000008cbb7 : add dword ptr [rcx + 0x39], ecx ; ret 0xef75
0x000000000008ad51 : add dword ptr [rcx + 0x39], ecx ; sal byte ptr [rbp - 0x17], 1 ; or byte ptr [rdi], sil ; ret
0x00000000000c039f : add dword ptr [rcx + 0x5d], eax ; pop r14 ; pop r15 ; ret
0x00000000001068df : add dword ptr [rcx + 0x5d], eax ; pop r14 ; ret
0x00000000000cc90f : add dword ptr [rcx + 0x63], ecx ; ret
0x00000000000267ea : add dword ptr [rcx + 9], eax ; ret 0x3948
0x000000000009a894 : add dword ptr [rcx + rcx*4 + 1], eax ; jne 0x9a887 ; ret
0x0000000000058860 : add dword ptr [rcx + rcx*4 - 0x18], ecx ; test edx, edx ; je 0x58831 ; jmp 0x58813
0x00000000000a8bf3 : add dword ptr [rcx + rcx*4 - 0x3e], ecx ; jmp 0xa8c07
0x0000000000102264 : add dword ptr [rcx + rcx*8 + 0x6348e775], eax ; ret 0xc741
0x000000000002bd02 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x0000000000114aac : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c1b1a : add dword ptr [rcx - 0x1d], edi ; mov eax, 1 ; ret
0x00000000000409a7 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000076a62 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000091106 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000a0236 : add dword ptr [rcx - 0x77], ecx ; fmul qword ptr [rax - 0x77] ; ret
0x0000000000045536 : add dword ptr [rcx - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000008c971 : add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0x00000000000265ce : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000022a5d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000010222f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000c49b3 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4504
0x0000000000102034 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x0000000000038536 : add dword ptr [rcx - 0x7d], ecx ; ret 0xe901
0x00000000000290df : add dword ptr [rcx - 0x7d], ecx ; shr byte ptr [rax + 0x41], 0x39 ; ret
0x00000000001071cb : add dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x000000000009aacb : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000c4a85 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000c4acf : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000000ce35a : add dword ptr [rcx], edi ; ret
0x00000000000c6d18 : add dword ptr [rcx], edi ; ret 0xe875
0x00000000000a2efd : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x39], 4 ; ret 0
0x00000000001016c3 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000001158d0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x0000000000115890 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000011591f : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000014c00a : add dword ptr [rdi + 3], esi ; ret
0x00000000000883f7 : add dword ptr [rdi - 0x1a], edi ; ret
0x00000000001821ab : add dword ptr [rdi], 2 ; ret
0x0000000000185af3 : add dword ptr [rdi], 3 ; add ecx, dword ptr fs:[rdx] ; ret
0x0000000000192d7b : add dword ptr [rdi], 3 ; pop rsp ; add dword ptr [rdx], ecx ; ret
0x000000000010347f : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000c0888 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x000000000002c425 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x000000000004cc41 : add dword ptr [rdi], ecx ; mov byte ptr [rax + rax + 0x63480000], bl ; ret 0x8d49
0x00000000000c87ae : add dword ptr [rdi], ecx ; ret 0x8b48
0x00000000000ab67a : add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x000000000009903c : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x0000000000099027 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000004d7f1 : add dword ptr [rdi], ecx ; test byte ptr [rsi], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000321a3 : add dword ptr [rdi], ecx ; test dh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000d3fc4 : add dword ptr [rdi], ecx ; test dword ptr [rbp - 0x9ffffff], esi ; ret 0xf01
0x00000000001415be : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000056681 : add dword ptr [rdi], ecx ; test dword ptr [rdx - 0x7600000a], edx ; ret
0x00000000000c6614 : add dword ptr [rdi], ecx ; xchg dword ptr [rbx - 0x7cfffffe], ebp ; ret 0xb880
0x00000000000fe9be : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000d367e : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x0000000000040d91 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x0000000000098f05 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000099400 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000910c4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000001739c7 : add dword ptr [rdx + 0xe], eax ; rol byte ptr [rcx], 3 ; ret 0xe01
0x0000000000098c4c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000000638f7 : add dword ptr [rdx + 4], 1 ; ret
0x0000000000063958 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000008e1fd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000e9adb : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000017b29e : add dword ptr [rdx + rax], -0xc ; ret
0x000000000018ddc6 : add dword ptr [rdx + rax], 0x53 ; ret
0x000000000018d196 : add dword ptr [rdx + rax], 0x5f ; ret
0x00000000000d0c86 : add dword ptr [rdx + rdx*8 - 0x76b21a8b], eax ; ret 0x894d
0x000000000017e7c6 : add dword ptr [rdx], 0x4b ; ret
0x0000000000192204 : add dword ptr [rdx], 0x51 ; ret
0x000000000018752c : add dword ptr [rdx], 0x53 ; ret
0x000000000017b41c : add dword ptr [rdx], 0x54 ; ret
0x000000000018a70b : add dword ptr [rdx], 0x5b ; ret
0x0000000000176df4 : add dword ptr [rdx], 0x63 ; ret
0x000000000018ca2c : add dword ptr [rdx], 0x65 ; ret
0x000000000017ccf4 : add dword ptr [rdx], 0x6c ; ret
0x000000000017754c : add dword ptr [rdx], 0x6f ; ret
0x000000000017a20c : add dword ptr [rdx], 0x77 ; ret
0x000000000018caa5 : add dword ptr [rdx], 0x7f ; ret
0x0000000000177555 : add dword ptr [rdx], 2 ; mov dl, 0xa ; ret
0x000000000017996c : add dword ptr [rdx], 2 ; pop rbp ; ret
0x000000000017e7bc : add dword ptr [rdx], 2 ; ret
0x000000000018d4c4 : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x000000000010203f : add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000017b4c2 : add dword ptr [rdx], ecx ; ret
0x000000000010203e : add dword ptr [rdx], r8d ; pop rbx ; ret
0x0000000000073f5f : add dword ptr [rip + 0x329872], 1 ; pop rbx ; ret
0x0000000000073718 : add dword ptr [rip + 0x32a045], 1 ; ret
0x0000000000091055 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000017e23f : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00000000001786b6 : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1786cc ; ret
0x000000000017c3c7 : add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x00000000001786c4 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000910d7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000017ff98 : add dword ptr [rsi], 0x77 ; ret
0x000000000017b77e : add dword ptr [rsi], 0xa ; ret
0x0000000000183610 : add dword ptr [rsi], 2 ; hlt ; ret
0x000000000017b7f0 : add dword ptr [rsi], 2 ; popfq ; ret
0x000000000017b230 : add dword ptr [rsi], 2 ; ret
0x000000000017dcfd : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001876b6 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000000c4bcc : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xc4be3 ; je 0xc4b73 ; pop rbx ; ret
0x0000000000185985 : add dword ptr cs:[rax], eax ; cmc ; jmp qword ptr [rcx]
0x000000000016f4d5 : add dword ptr cs:[rax], eax ; insb byte ptr [rdi], dx ; pushfq ; call rsp
0x00000000001859b5 : add dword ptr cs:[rax], eax ; js 0x185a25 ; cmc ; jmp qword ptr [rcx]
0x0000000000186975 : add dword ptr ds:[rax], eax ; test al, 0xa3 ; cmc ; jmp rdx
0x0000000000126337 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018912d : add dword ptr gs:[rax], eax ; nop ; sub esi, esi ; call rdi
0x00000000000c4ace : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x000000000007e6cb : add eax, 0x10 ; ret
0x000000000007e67f : add eax, 0x12c0c ; ret
0x000000000007c3ff : add eax, 0x1326c ; ret
0x000000000002b52a : add eax, 0x1384f0 ; ret
0x0000000000020832 : add eax, 0x142d34 ; ret
0x0000000000020842 : add eax, 0x144c00 ; ret
0x000000000010ff9c : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x00000000000aaef0 : add eax, 0x16e ; ret
0x0000000000081c3b : add eax, 0x16f20 ; ret
0x0000000000081097 : add eax, 0x17614 ; cmove rax, rdx ; ret
0x0000000000194685 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x0000000000180f5c : add eax, 0x2300e44 ; ret 0xe0a
0x000000000017eebc : add eax, 0x2300e55 ; ret
0x0000000000081615 : add eax, 0x26 ; ret
0x000000000011a245 : add eax, 0x2821c6 ; call qword ptr [rax]
0x0000000000119c42 : add eax, 0x2827c9 ; call qword ptr [rax]
0x00000000001128a2 : add eax, 0x2885f1 ; add rsp, 8 ; ret
0x0000000000112872 : add eax, 0x288689 ; add rsp, 8 ; ret
0x0000000000112812 : add eax, 0x288771 ; add rsp, 8 ; ret
0x0000000000112842 : add eax, 0x288799 ; add rsp, 8 ; ret
0x0000000000080563 : add eax, 0x29000000 ; ret
0x00000000000ab6b9 : add eax, 0x2907f9c1 ; ret 0xf089
0x00000000001059e2 : add eax, 0x295601 ; mov rax, qword ptr fs:[rax] ; ret
0x00000000001088ea : add eax, 0x2974f9 ; add rsp, 8 ; ret
0x00000000001088d1 : add eax, 0x297512 ; test eax, eax ; je 0x1088e9 ; ret
0x0000000000107f66 : add eax, 0x297e15 ; add rsp, 8 ; ret
0x0000000000107f36 : add eax, 0x297e45 ; add rsp, 8 ; ret
0x0000000000107f1a : add eax, 0x297e61 ; add rsp, 8 ; ret
0x00000000001054bb : add eax, 0x29a604 ; test eax, eax ; je 0x1054d1 ; ret
0x00000000000ff4f2 : add eax, 0x29d381 ; ret
0x00000000000febb0 : add eax, 0x29dcab ; add rsp, 8 ; ret
0x00000000000f46e9 : add eax, 0x2aaa92 ; pop rbp ; ret
0x00000000000ea402 : add eax, 0x2b0a69 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e3e30 : add eax, 0x2ba44b ; add rsp, 0x18 ; ret
0x00000000000e3ddc : add eax, 0x2ba4df ; pop rbp ; pop r12 ; ret
0x00000000000e3898 : add eax, 0x2ba993 ; add rsp, 8 ; ret
0x00000000000e3839 : add eax, 0x2baa12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1096 : add eax, 0x2bb705 ; mov rdx, rax ; jmp 0xe1036
0x00000000000e1000 : add eax, 0x2bb79b ; add rsp, 8 ; ret
0x00000000000e262b : add eax, 0x2bbb20 ; add rsp, 8 ; ret
0x00000000000e2249 : add eax, 0x2bbe32 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000141644 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000a9464 : add eax, 0x2f70af ; add rsp, 8 ; ret
0x000000000017dcfb : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000f4e12 : add eax, 0x31b69 ; ret
0x0000000000080347 : add eax, 0x31d59c ; add rsp, 8 ; ret
0x00000000000f4f02 : add eax, 0x31e19 ; ret
0x0000000000078520 : add eax, 0x3229bb ; mov qword ptr [rax], rdi ; ret
0x00000000000766b5 : add eax, 0x324716 ; xor edi, edi ; call qword ptr [rax]
0x00000000000764e0 : add eax, 0x3248eb ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000078531 : add eax, 0x32528e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000073682 : add eax, 0x328e99 ; ret
0x0000000000073f60 : add eax, 0x329872 ; add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000073786 : add eax, 0x329fd9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000063175 : add eax, 0x33a586 ; pop rbx ; pop rbp ; ret
0x0000000000033f0c : add eax, 0x36717b ; mov eax, edx ; ret
0x0000000000033ed1 : add eax, 0x3671b2 ; ret
0x0000000000033ec1 : add eax, 0x3671c6 ; ret
0x0000000000036be2 : add eax, 0x3698af ; add rsp, 8 ; ret
0x000000000002bfbd : add eax, 0x36ee2e ; mov qword ptr [rax], rdx ; ret
0x0000000000028c42 : add eax, 0x373ca9 ; ret
0x0000000000021712 : add eax, 0x37ec39 ; ret
0x0000000000021702 : add eax, 0x37ec59 ; ret
0x000000000011c8fa : add eax, 0x38c48348 ; ret
0x00000000000751c5 : add eax, 0x39480000 ; ret
0x00000000000e1097 : add eax, 0x48002bb7 ; mov edx, eax ; jmp 0xe1035
0x0000000000143b78 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000013f828 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000094436 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000103481 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000008cf9a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x0000000000143bf9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000013f869 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000000e3da7 : add eax, 0x59002b8a ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e67c0 : add eax, 0x5b000000 ; pop rbp ; ret
0x0000000000066746 : add eax, 0x5b000000 ; ret
0x0000000000001569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x000000000015811d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000107752 : add eax, 0x5c2c8 ; ret
0x0000000000074f18 : add eax, 0x5c415d5b ; ret
0x00000000000d60bd : add eax, 0x5d000000 ; pop r12 ; ret
0x00000000001941e9 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x0000000000086ea0 : add eax, 0x6fbb ; ret
0x0000000000086e71 : add eax, 0x721a ; ret
0x00000000000bfff8 : add eax, 0x75c33948 ; ret 0x8948
0x000000000002bc11 : add eax, 0x788d4800 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002c8c2 : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x000000000008243b : add eax, 0x80 ; ret
0x0000000000094c3e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000c6d12 : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000098eff : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000db8ab : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000011dfdd : add eax, 0x83480000 ; ret 0x4910
0x0000000000120b31 : add eax, 0x83480000 ; ret 0xe910
0x000000000011df31 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000143b7b : add eax, 0x8428d48 ; ret
0x00000000000f45b9 : add eax, 0x89c78944 ; ret
0x00000000000962e2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000112866 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000086eb4 : add eax, 0xa2bd7 ; ret
0x000000000008060c : add eax, 0xa2d3f ; ret
0x000000000008027c : add eax, 0xa2f9f ; ret
0x0000000000081de2 : add eax, 0xa4f49 ; ret
0x000000000007ddec : add eax, 0xa52ef ; ret
0x0000000000112896 : add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000009a2dd : add eax, 0xac5be ; ret
0x000000000009aea9 : add eax, 0xad6b2 ; ret
0x000000000009aeb1 : add eax, 0xaff6a ; ret
0x000000000007ff5f : add eax, 0xbf95c ; ret
0x000000000007c84f : add eax, 0xc ; ret
0x00000000000822cf : add eax, 0xc016c ; ret
0x0000000000119b4e : add eax, 0xc0310000 ; pop rbx ; ret
0x0000000000147f7a : add eax, 0xc0310000 ; ret
0x000000000007dcdf : add eax, 0xc042c ; ret
0x00000000000823ef : add eax, 0xc185c ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x0000000000143bfd : add eax, 0xc428d48 ; ret
0x0000000000095a7d : add eax, 0xc478d48 ; ret
0x0000000000081629 : add eax, 0xc58f2 ; ret
0x000000000009ae95 : add eax, 0xc726 ; ret
0x0000000000081631 : add eax, 0xc807a ; ret
0x0000000000081da1 : add eax, 0xca3a ; ret
0x000000000007c5ec : add eax, 0xccd9f ; ret
0x000000000003034a : add eax, 0xce3d8b48 ; ret
0x000000000008249e : add eax, 0xd ; ret
0x000000000009a2d5 : add eax, 0xd396 ; ret
0x00000000000968bd : add eax, 0xd478d48 ; ret
0x0000000000033870 : add eax, 0xd889000c ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bedce : add eax, 0xf410000 ; mov dh, 0x14 ; and al, 0x39 ; ret 0x840f
0x0000000000134293 : add eax, 0xf7f0ff3 ; ret
0x00000000000460a9 : add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000046e30 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000484ec : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000cc1ac : add eax, 0xfd830000 ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000f4dd1 : add eax, 0xfff992aa ; ret
0x00000000000f4ec1 : add eax, 0xfff9990a ; ret
0x00000000000f4f4b : add eax, 0xfffa3c00 ; ret
0x000000000004fc27 : add eax, 0xfffffd16 ; add rax, rdx ; jmp rax
0x00000000000d9f47 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x00000000000e9d6f : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000a8bf1 : add eax, 1 ; mov rdx, r8 ; jmp 0xa8c09
0x00000000000e9d59 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000098fda : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008227b : add eax, 1 ; ret
0x00000000000215a5 : add eax, 2 ; push rax ; call rbx
0x000000000009a578 : add eax, 2 ; ret
0x000000000009a591 : add eax, 3 ; ret
0x00000000000c4a8b : add eax, 8 ; ret
0x0000000000020a19 : add eax, dword ptr [0] ; ret
0x00000000000a1265 : add eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000039c66 : add eax, dword ptr [rax] ; add al, ch ; ret 0xff25
0x0000000000025684 : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x0000000000194df9 : add eax, dword ptr [rax] ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; ret 7
0x0000000000100b00 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000011e17d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120cd1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e1a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000104c62 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000010e94e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010b63b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000e96d6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000f4407 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000e46dc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000de92d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov r15d, edi ; call 0xdab99
0x000000000009a5d3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e09a3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x0000000000100754 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000c71bf : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000099037 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x000000000011294f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000f3de5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000036a9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000000c0c62 : add eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret
0x000000000004e230 : add eax, dword ptr [rax] ; add cl, bl ; in eax, 0xdf ; loopne 0x4e1c9 ; ret 0xe680
0x00000000000f4e8f : add eax, dword ptr [rax] ; cmove rax, rdx ; ret
0x00000000000e0ae7 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000099260 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000099280 : add eax, dword ptr [rax] ; ret
0x0000000000181a83 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x000000000017b4aa : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x0000000000101f3d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x101f4e ; ret
0x0000000000141609 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000174232 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x000000000017923a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x0000000000103040 : add eax, dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0xf45
0x00000000000eae6a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000103e3d : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x0000000000031c70 : add eax, dword ptr [rdi + 0x20] ; ret
0x000000000011c9cf : add eax, dword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x000000000011d03a : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000000eac46 : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000141709 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001718ad : add eax, dword ptr [rdx] ; add byte ptr [rcx], ch ; stc ; call rsp
0x00000000001836c8 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x0000000000183055 : add eax, dword ptr [rsi + 0x180e6702] ; ret
0x0000000000179e4a : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x000000000017799a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000018f35a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rax + rdi*2], 0xa ; ret
0x0000000000189f1a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rbx], 0xa ; ret
0x000000000017b29a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x000000000018ddc2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x53 ; ret
0x00000000001876b2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000099331 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000049c28 : add eax, eax ; ret
0x0000000000088188 : add eax, ebp ; and dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x000000000007977a : add eax, ebp ; jmp rax
0x00000000000eb638 : add eax, ebp ; ret 0xf9d5
0x00000000000f4f97 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000086e25 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009b0a2 : add eax, ebx ; pop rbx ; ret
0x00000000000529b3 : add eax, ecx ; jmp rax
0x000000000008134a : add eax, ecx ; ret
0x000000000008d855 : add eax, edi ; add rax, r8 ; ret
0x0000000000081347 : add eax, edi ; add rax, rcx ; ret
0x0000000000044e5b : add eax, edi ; jmp rax
0x000000000007ffcb : add eax, edi ; ret
0x000000000012313b : add eax, edi ; sub rax, r8 ; ret
0x0000000000123390 : add eax, edi ; sub rax, rdx ; ret
0x00000000000d9ee5 : add eax, edx ; cmp rdi, rsi ; ja 0xd9e89 ; pop rbx ; pop rbp ; ret
0x00000000000d9f1d : add eax, edx ; cmp rdi, rsi ; ja 0xd9f18 ; ret
0x000000000002cd46 : add eax, edx ; jmp rax
0x000000000010aa8e : add eax, edx ; ret
0x000000000007e426 : add eax, edx ; sub rax, rdi ; ret
0x00000000000e0ae5 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000471b1 : add eax, esi ; jmp rax
0x00000000000a8747 : add eax, esi ; ret
0x0000000000049c27 : add eax, r8d ; ret
0x00000000000498f8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000a7d48 : add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000108144 : add ebp, dword ptr [rcx] ; ret 0x8166
0x0000000000193993 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000002db36 : add ebp, eax ; sbb eax, 0x8948ffff ; ret 0x4e9
0x000000000004ac2f : add ebp, eax ; wait ; ret 3
0x00000000000b0017 : add ebp, ecx ; ret 0xfff0
0x00000000001796c1 : add ebp, edi ; call qword ptr [rsi]
0x0000000000193995 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x0000000000193985 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000003182 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000175f49 : add ebp, esp ; jmp qword ptr [rsi]
0x00000000000f0f39 : add ebp, esp ; mov r12, r11 ; jmp 0xf0f55
0x000000000011ca62 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000017b4c0 : add ebx, dword ptr [rax] ; add dword ptr [rdx], ecx ; ret
0x000000000010243d : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x0000000000192d7d : add ebx, dword ptr [rcx + rax + 0xa] ; ret
0x00000000000a7e53 : add ebx, eax ; mov qword ptr [rbp], rbx ; call r12
0x00000000000f373c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000421e1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000e16cd : add ebx, ebp ; and ecx, dword ptr [rax - 0x7d] ; ret 0x3c01
0x00000000001733b9 : add ebx, ebp ; jmp rbx
0x00000000000e3cd1 : add ebx, ebp ; ret
0x0000000000020918 : add ebx, ebp ; ret 0x1f0f
0x0000000000134453 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000ea53f : add ebx, esi ; ret
0x000000000011476e : add ebx, esp ; call r14
0x0000000000081d34 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x81d29 ; ret
0x00000000000d913f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000009115a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00000000000fcb68 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000075274 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000bfa75 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000fdd78 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x00000000000894e1 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000fd629 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000008930f : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x00000000000cbd6d : add ecx, dword ptr [rax + 0x29] ; ret 0x8d49
0x000000000017c22a : add ecx, dword ptr [rax + 0x380e0a01] ; ret
0x000000000010245c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000e1e64 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009b01a : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x9b034 ; ret
0x000000000008cf7a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000cdee1 : add ecx, dword ptr [rax - 0x77] ; ret 0xc148
0x00000000000f14e7 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x00000000000f0a48 : add ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rdi + 0x48], 0x83 ; ret
0x00000000000ac3a5 : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ef3b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000011cd21 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x00000000001341c2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000020c03 : add ecx, dword ptr [rbx - 0x7cb77efc] ; ret 0x4801
0x00000000000943d4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000dda17 : add ecx, dword ptr [rcx + 0xf10244c] ; xchg eax, esp ; ret 0x8440
0x000000000009115b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000192b4d : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x0000000000094c00 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000100f43 : add ecx, dword ptr [rdi] ; xchg ah, bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000185af7 : add ecx, dword ptr [rdx] ; ret
0x0000000000185af6 : add ecx, dword ptr fs:[rdx] ; ret
0x000000000002a7d8 : add ecx, eax ; jmp rcx
0x00000000000effff : add ecx, ebp ; ret
0x0000000000129aab : add ecx, ebx ; jmp r9
0x0000000000146f42 : add ecx, ebx ; jmp rcx
0x00000000000e42c4 : add ecx, ebx ; ret
0x00000000000e3fd8 : add ecx, ebx ; ret 0x3944
0x0000000000041b85 : add ecx, edx ; jmp rcx
0x00000000000440cf : add ecx, edx ; mov rax, r9 ; add rsp, 0x28 ; ret
0x00000000000992d4 : add ecx, esi ; jmp rcx
0x000000000010e66d : add edi, 0x10 ; jmp rcx
0x000000000010828f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000010a2aa : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000110ba4 : add edi, 0x58 ; jmp rcx
0x0000000000110304 : add edi, 0x68 ; jmp rcx
0x00000000000781b1 : add edi, 0x8c0 ; call 0x743c8
0x000000000010daf7 : add edi, 0xc8 ; jmp rcx
0x000000000008cf54 : add edi, 1 ; mov rax, rdi ; ret
0x00000000000b9b23 : add edi, 1 ; test dl, dl ; jne 0xb9b11 ; ret
0x000000000008cf65 : add edi, 2 ; mov rax, rdi ; ret
0x000000000008cf78 : add edi, 3 ; mov rax, rdi ; ret
0x000000000008cf85 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000008cf98 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000008cf22 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000014b653 : add edi, dword ptr [rbp + 0x10] ; call rbx
0x00000000000e2499 : add edi, dword ptr [rbx] ; jne 0xe24b4 ; jmp 0xe24c9
0x0000000000102274 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000207f4 : add edi, ebp ; call rax
0x000000000017c051 : add edi, ebp ; jmp rsp
0x00000000000b90aa : add edi, edi ; dec dword ptr [rax - 0x77] ; ret 0x6b8
0x0000000000129aa8 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000003394c : add edi, esi ; ret 0
0x000000000016befd : add edi, esp ; call qword ptr [rax]
0x000000000016bf1d : add edi, esp ; call rax
0x0000000000101c21 : add edx, 0xc ; cmp rdx, r8 ; jne 0x101c12 ; ret
0x0000000000102231 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000008d758 : add edx, eax ; jl 0x8d7c7 ; add rax, rdi ; ret
0x000000000008d768 : add edx, eax ; jl 0x8d7c9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008d788 : add edx, eax ; jl 0x8d7c9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008d7a8 : add edx, eax ; jl 0x8d7c9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008cf0c : add edx, eax ; jmp r10
0x0000000000020dd8 : add edx, eax ; jmp rdx
0x0000000000042d72 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000ae514 : add edx, ecx ; jmp rdx
0x00000000000ab96c : add edx, edi ; jmp rdx
0x0000000000031291 : add edx, esi ; jmp rdx
0x000000000016f131 : add edx, esi ; jmp rsp
0x00000000000a7c05 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000010f635 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000001016c1 : add esi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000098289 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001831f8 : add esi, dword ptr [rbx] ; add dword ptr [rdx], ecx ; ret
0x0000000000078819 : add esi, dword ptr [rbx] ; xor al, byte ptr [rax] ; call 0x74ac6
0x0000000000111d90 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001759fb : add esi, dword ptr [rsi + 0x41380e01] ; ret
0x0000000000109fd2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x0000000000029397 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000000c17af : add esi, dword ptr [rsi + rax - 0xd] ; ret
0x0000000000020ad5 : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x0000000000020b03 : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x000000000008d42a : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008d4a9 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000efffa : add esi, eax ; and al, 0xc ; add ecx, ebp ; ret
0x00000000000400a3 : add esi, eax ; jmp qword ptr [rax]
0x000000000009920c : add esi, eax ; jmp rsi
0x00000000001155b3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000193965 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000001602bd : add esi, ebp ; call rcx
0x000000000016038d : add esi, ebp ; jmp qword ptr [rsi]
0x0000000000134373 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000011c293 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000da0cc : add esi, ebx ; ret
0x0000000000033b79 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000064ea6 : add esi, ecx ; jmp rsi
0x000000000014937c : add esi, edi ; fadd st(3) ; ret
0x0000000000099319 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000314bf : add esi, edi ; jmp rsi
0x0000000000129aa5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000188659 : add esi, esi ; jmp qword ptr [rcx]
0x00000000000c0427 : add esi, esi ; or esi, r10d ; jne 0xc0438 ; ret
0x00000000000c4b5b : add esi, esi ; ret
0x0000000000066b18 : add esi, esi ; ret 0x7420
0x00000000000f0533 : add esi, esi ; ret 0xf04
0x000000000004fa02 : add esi, esi ; ret 0xf40
0x000000000010ac07 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000007b434 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000115b26 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000067a97 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000028ee6 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003360e : add esp, 0x10 ; pop rbx ; ret
0x0000000000101856 : add esp, 0x10 ; ret
0x0000000000028eb7 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a64d1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008118f : add esp, 0x100 ; ret
0x000000000007de8d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000063213 : add esp, 0x1000 ; pop rbx ; ret
0x0000000000063221 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003374c : add esp, 0x108 ; ret
0x00000000000db6ee : add esp, 0x120 ; pop rbx ; ret
0x0000000000033979 : add esp, 0x140 ; pop rbx ; ret
0x000000000003317b : add esp, 0x148 ; ret
0x0000000000108a8c : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000fe790 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000e02ad : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000d53ae : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007aff6 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000637f6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000114af6 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000115a9c : add esp, 0x18 ; movzx eax, al ; ret
0x000000000007c078 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108d72 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000036c75 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002cbc7 : add esp, 0x18 ; ret
0x00000000000410f8 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000dacf7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000067384 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069d72 : add esp, 0x20 ; pop rbx ; ret
0x000000000010f339 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000daca4 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000209be : add esp, 0x28 ; jmp rax
0x00000000000205bd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003ee55 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000328b3 : add esp, 0x28 ; ret
0x0000000000063141 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010002a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107eeb : add esp, 0x30 ; pop rbx ; ret
0x0000000000100059 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b8fb8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b4657 : add esp, 0x38 ; ret
0x0000000000108ca0 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000339fc : add esp, 0x40 ; pop rbx ; ret
0x00000000000ea4c8 : add esp, 0x40 ; ret
0x0000000000108bf8 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5568 : add esp, 0x408 ; ret
0x0000000000043f7c : add esp, 0x440 ; pop rbx ; ret
0x00000000000dbda2 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000010b527 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000103483 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000b4f32 : add esp, 0x48 ; ret
0x000000000009b12c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119b4b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000dab8b : add esp, 0x58 ; ret
0x00000000000df94f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000da617 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dabcb : add esp, 0x60 ; pop rbx ; ret
0x00000000000cee51 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000112ccc : add esp, 0x68 ; ret
0x0000000000111c66 : add esp, 0x78 ; ret
0x000000000004e153 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000006d170 : add esp, 0x80 ; mov eax, edx ; ret
0x0000000000063f41 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007845f : add esp, 0x80 ; mov rax, r8 ; ret
0x000000000003f543 : add esp, 0x80 ; pop rbx ; ret
0x0000000000063999 : add esp, 0x80 ; ret
0x0000000000035a6f : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000033802 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000113245 : add esp, 0x88 ; ret
0x00000000000e8eb2 : add esp, 0x90 ; pop rbx ; ret
0x0000000000033fa1 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000063263 : add esp, 0x98 ; ret
0x00000000001119b4 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000003434d : add esp, 0xa8 ; ret
0x00000000000a8686 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x0000000000063b0d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000b312e : add esp, 0xd0 ; pop rbx ; ret
0x000000000003346a : add esp, 0xd0 ; ret
0x000000000003fd44 : add esp, 0xd8 ; ret
0x00000000000aa192 : add esp, 1 ; jmp 0xaa171
0x000000000010e913 : add esp, 8 ; add eax, 2 ; ret
0x00000000000803cd : add esp, 8 ; jmp rax
0x00000000001021bd : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000004983f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000684fd : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a6888 : add esp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000020f38 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006658c : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000063c5e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000008d3bd : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000030617 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ab634 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000035d60 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000001148ec : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006f7a9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000010b407 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000003f576 : add esp, 8 ; movzx eax, al ; ret
0x0000000000104b9a : add esp, 8 ; movzx eax, ax ; ret
0x000000000010aa89 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006a060 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000022d39 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000216f1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070a68 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000033693 : add esp, 8 ; pop rbx ; ret
0x0000000000032f13 : add esp, 8 ; ret
0x0000000000119991 : add esp, 8 ; sar eax, 0x1f ; ret
0x0000000000115b94 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000022964 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d094b : add esp, 8 ; xor eax, eax ; ret
0x0000000000185af5 : add esp, dword ptr [rbx + rax + 0xa] ; ret
0x0000000000175e11 : add esp, ebp ; call qword ptr [rcx]
0x0000000000175df9 : add esp, ebp ; call qword ptr [rdx]
0x000000000016bf19 : add esp, edi ; inc dword ptr [rax + 3] ; cld ; call rax
0x000000000016beb9 : add esp, edi ; jmp rax
0x000000000015ee80 : add esp, edx ; inc dword ptr [rax] ; loop 0x15ee80 ; jmp qword ptr [rax]
0x00000000000fb997 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x0000000000185af2 : add qword ptr [r15], 3 ; add ecx, dword ptr fs:[rdx] ; ret
0x000000000016f9c5 : add qword ptr [r8], r8 ; in al, dx ; scasd eax, dword ptr [rdi] ; hlt ; jmp rsp
0x0000000000187a6d : add qword ptr [r8], r8 ; nop ; loopne 0x187a6e ; call qword ptr [rdx]
0x0000000000187895 : add qword ptr [r8], r8 ; sub cl, bl ; cmc ; jmp rax
0x000000000018772d : add qword ptr [r8], rax ; nop ; xlatb ; cmc ; call qword ptr [rdx]
0x0000000000024658 : add qword ptr [rax - 0x7d], rcx ; ret 0x4d01
0x0000000000187805 : add qword ptr [rax], r8 ; clc ; xlatb ; cmc ; call qword ptr [rax]
0x00000000001415bd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000008cf0b : add r10, rax ; jmp r10
0x0000000000134452 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000aa191 : add r12, 1 ; jmp 0xaa172
0x00000000001343e2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134372 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a8bf0 : add r8, 1 ; mov rdx, r8 ; jmp 0xa8c0a
0x0000000000122d60 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f1f4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000c581d : add r8b, byte ptr [r8] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000172205 : add r8b, byte ptr [r8] ; fdiv qword ptr [rdx - 6] ; jmp rsp
0x0000000000172245 : add r8b, byte ptr [r8] ; insb byte ptr [rdi], dx ; ja 0x17224b ; call rsp
0x0000000000102111 : add r8b, byte ptr [r8] ; jne 0x102167 ; mov eax, r8d ; ret
0x000000000008d0b4 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008d024 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x0000000000036ffb : add r8b, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017239d : add r8b, byte ptr [rax] ; in al, dx ; test edx, edi ; jmp rsp
0x000000000011cd20 : add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000129aaa : add r9, r11 ; jmp r9
0x000000000010169c : add r9b, byte ptr [rax + 0x39] ; ret 0x2d72
0x0000000000125f12 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000141643 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000098fd9 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009a580 : add rax, 1 ; ret
0x000000000009a577 : add rax, 2 ; ret
0x000000000009a590 : add rax, 3 ; ret
0x0000000000020a18 : add rax, qword ptr [0] ; ret
0x0000000000031c6f : add rax, qword ptr [rdi + 0x20] ; ret
0x000000000011c9ce : add rax, qword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x000000000011d039 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x0000000000020a17 : add rax, qword ptr fs:[0] ; ret
0x0000000000079779 : add rax, r13 ; jmp rax
0x000000000008d857 : add rax, r8 ; ret
0x000000000008d074 : add rax, r9 ; jmp rax
0x00000000000f4f96 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000086e24 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009b0a1 : add rax, rbx ; pop rbx ; ret
0x00000000000529b2 : add rax, rcx ; jmp rax
0x0000000000081349 : add rax, rcx ; ret
0x000000000008d854 : add rax, rdi ; add rax, r8 ; ret
0x0000000000081346 : add rax, rdi ; add rax, rcx ; ret
0x0000000000044e5a : add rax, rdi ; jmp rax
0x000000000007ffca : add rax, rdi ; ret
0x000000000012313a : add rax, rdi ; sub rax, r8 ; ret
0x000000000012338f : add rax, rdi ; sub rax, rdx ; ret
0x000000000002cd45 : add rax, rdx ; jmp rax
0x000000000007e425 : add rax, rdx ; sub rax, rdi ; ret
0x00000000000471b0 : add rax, rsi ; jmp rax
0x000000000011476d : add rbx, r12 ; call r14
0x00000000000a7e52 : add rbx, rax ; mov qword ptr [rbp], rbx ; call r12
0x0000000000041b84 : add rcx, r10 ; jmp rcx
0x0000000000146f41 : add rcx, r11 ; jmp rcx
0x000000000002a7d7 : add rcx, r8 ; jmp rcx
0x000000000005c434 : add rcx, rax ; jmp rcx
0x000000000005c9cd : add rcx, rdx ; jmp rcx
0x00000000000992d3 : add rcx, rsi ; jmp rcx
0x000000000010e66c : add rdi, 0x10 ; jmp rcx
0x000000000010828e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000010a2a9 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000110ba3 : add rdi, 0x58 ; jmp rcx
0x0000000000110303 : add rdi, 0x68 ; jmp rcx
0x00000000000781b0 : add rdi, 0x8c0 ; call 0x743c9
0x000000000010daf6 : add rdi, 0xc8 ; jmp rcx
0x000000000008cf53 : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000b9b22 : add rdi, 1 ; test dl, dl ; jne 0xb9b12 ; ret
0x000000000008cf64 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000008cf77 : add rdi, 3 ; mov rax, rdi ; ret
0x000000000014b652 : add rdi, qword ptr [r13 + 0x10] ; call rbx
0x0000000000102273 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000207f3 : add rdi, rbp ; call rax
0x0000000000129aa7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000042d71 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000ae513 : add rdx, r9 ; jmp rdx
0x000000000008d757 : add rdx, rax ; jl 0x8d7c8 ; add rax, rdi ; ret
0x000000000008d756 : add rdx, rax ; jl 0x8d7c9 ; add rax, rdi ; ret
0x0000000000020dd7 : add rdx, rax ; jmp rdx
0x0000000000109b72 : add rdx, rcx ; jmp rdx
0x00000000000ab96b : add rdx, rdi ; jmp rdx
0x0000000000031290 : add rdx, rsi ; jmp rdx
0x000000000010f634 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000001016c0 : add rsi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000009920b : add rsi, rax ; jmp rsi
0x00000000001155b2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000064ea5 : add rsi, rcx ; jmp rsi
0x00000000000314be : add rsi, rdi ; jmp rsi
0x000000000007b433 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000115b25 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000067a96 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000028ee5 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003360d : add rsp, 0x10 ; pop rbx ; ret
0x0000000000101855 : add rsp, 0x10 ; ret
0x00000000000a64d0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008118e : add rsp, 0x100 ; ret
0x0000000000063212 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003374b : add rsp, 0x108 ; ret
0x00000000000db6ed : add rsp, 0x120 ; pop rbx ; ret
0x0000000000033978 : add rsp, 0x140 ; pop rbx ; ret
0x000000000003317a : add rsp, 0x148 ; ret
0x0000000000108a8b : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000fe78f : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000e02ac : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000d53ad : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007aff5 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000637f5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000114af5 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000115a9b : add rsp, 0x18 ; movzx eax, al ; ret
0x0000000000036c74 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002cbc6 : add rsp, 0x18 ; ret
0x00000000000410f7 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000067383 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069d71 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000daca3 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000209bd : add rsp, 0x28 ; jmp rax
0x000000000003ee54 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000328b2 : add rsp, 0x28 ; ret
0x0000000000063140 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000100029 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107eea : add rsp, 0x30 ; pop rbx ; ret
0x00000000000b8fb7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b4656 : add rsp, 0x38 ; ret
0x0000000000108c9f : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000339fb : add rsp, 0x40 ; pop rbx ; ret
0x00000000000ea4c7 : add rsp, 0x40 ; ret
0x00000000000e5567 : add rsp, 0x408 ; ret
0x0000000000043f7b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000dbda1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000103482 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000b4f31 : add rsp, 0x48 ; ret
0x000000000009b12b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dab8a : add rsp, 0x58 ; ret
0x00000000000df94e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000da616 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dabca : add rsp, 0x60 ; pop rbx ; ret
0x0000000000112ccb : add rsp, 0x68 ; ret
0x0000000000111c65 : add rsp, 0x78 ; ret
0x000000000006d16f : add rsp, 0x80 ; mov eax, edx ; ret
0x000000000003f542 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000063998 : add rsp, 0x80 ; ret
0x0000000000033801 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000113244 : add rsp, 0x88 ; ret
0x00000000000e8eb1 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000033fa0 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000063262 : add rsp, 0x98 ; ret
0x00000000001119b3 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000003434c : add rsp, 0xa8 ; ret
0x00000000000b312d : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000033469 : add rsp, 0xd0 ; ret
0x000000000003fd43 : add rsp, 0xd8 ; ret
0x000000000010e912 : add rsp, 8 ; add eax, 2 ; ret
0x00000000000803cc : add rsp, 8 ; jmp rax
0x000000000004983e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000684fc : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a6887 : add rsp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000020f37 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006658b : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000063c5d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000008d3bc : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000030616 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ab633 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000035d5f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000001148eb : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006f7a8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000010b406 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000003f575 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000104b99 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000010aa88 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006a05f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000216f0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070a67 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000033692 : add rsp, 8 ; pop rbx ; ret
0x0000000000032f12 : add rsp, 8 ; ret
0x0000000000119990 : add rsp, 8 ; sar eax, 0x1f ; ret
0x0000000000115b93 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000022963 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d094a : add rsp, 8 ; xor eax, eax ; ret
0x0000000000086efe : add sil, sil ; ret 0x7404
0x00000000000e9d3d : add word ptr [rax], 1 ; ret
0x000000000018925d : add word ptr [rax], ax ; sal byte ptr [rax], 0xf6 ; call rsi
0x00000000000e9ada : add word ptr [rdx + rax*2], 1 ; ret
0x000000000016bff0 : and ah, 0xfb ; call rax
0x000000000016c129 : and ah, bh ; call rax
0x000000000016c065 : and ah, bh ; inc dword ptr [rax + 0x22] ; cld ; jmp qword ptr [rax]
0x000000000016c085 : and ah, bh ; jmp qword ptr [rax]
0x000000000016c0a5 : and ah, bh ; push rax ; and esp, edi ; call rax
0x0000000000174fb5 : and al, 0 ; add al, cl ; fldpi ; call qword ptr [rdx]
0x0000000000174fcd : and al, 0 ; add al, dl ; fldpi ; call qword ptr [rdx]
0x0000000000091911 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000023628 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000089391 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000194dfc : and al, 0 ; add byte ptr [rax], al ; ret 7
0x0000000000089322 : and al, 0 ; je 0x89339 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c85d7 : and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000040d8f : and al, 0x10 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x0000000000034dcb : and al, 0x10 ; call r14
0x00000000000b4266 : and al, 0x10 ; call rax
0x0000000000076699 : and al, 0x10 ; call rdi
0x0000000000032d17 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000ef892 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000000e48dc : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000006c7b6 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000010835a : and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000ef78e : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000765d3 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000074f49 : and al, 0x14 ; pop r12 ; ret
0x0000000000184384 : and al, 0x18 ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000011c968 : and al, 0x18 ; add rsp, 0x28 ; ret
0x00000000000786ab : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000108d3a : and al, 0x18 ; call qword ptr [rax]
0x0000000000023b23 : and al, 0x18 ; call r12
0x000000000002072c : and al, 0x18 ; call rax
0x000000000010e027 : and al, 0x18 ; call rcx
0x000000000008cf3d : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000076694 : and al, 0x18 ; mov qword ptr [rsp + 0x10], rdx ; call rdi
0x0000000000021520 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000000b4261 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000023d0f : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000245ba : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000009bc87 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x000000000006c892 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000009bf5f : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000009b9cf : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x0000000000108b7b : and al, 0x1c ; call qword ptr [rax]
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000c5e22 : and al, 0x20 ; call 0xc20a4
0x00000000000762c4 : and al, 0x20 ; call qword ptr [rax]
0x00000000000241ba : and al, 0x20 ; call r14
0x0000000000023933 : and al, 0x20 ; call r15
0x000000000009b69b : and al, 0x20 ; call rbx
0x000000000010de2f : and al, 0x20 ; call rcx
0x000000000009b2fb : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000024115 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000249a0 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000023b1e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000a6b2f : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x0000000000174f84 : and al, 0x24 ; add byte ptr [rax], al ; test al, 0xd9 ; jmp 0x174f92
0x000000000015b204 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000011c8f6 : and al, 0x28 ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000023d14 : and al, 0x28 ; call rax
0x000000000009b1d0 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000c7a83 : and al, 0x28 ; mov dword ptr [rsp + 0x7c], ebx ; mov r10, rax ; jmp 0xc7ac0
0x00000000000241b5 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x000000000002392e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000079273 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000000d7512 : and al, 0x28 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000185684 : and al, 0x2b ; add dword ptr [rax], eax ; cwde ; pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000000b89ec : and al, 0x2e ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000185984 : and al, 0x2e ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000000ccc54 : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001091cd : and al, 0x30 ; call qword ptr [rax]
0x0000000000024da2 : and al, 0x30 ; call r14
0x0000000000024b62 : and al, 0x30 ; call r15
0x00000000000245bf : and al, 0x30 ; call rax
0x0000000000076623 : and al, 0x30 ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x0000000000115a29 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000a745e : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x000000000009bb7c : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00000000000b3b59 : and al, 0x30 ; mov rdi, rbx ; call r12
0x00000000000bf974 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000176184 : and al, 0x36 ; add byte ptr [rax], al ; cwde ; or esp, ebp ; jmp qword ptr [rdx]
0x0000000000027341 : and al, 0x38 ; call r14
0x00000000000270da : and al, 0x38 ; call rbx
0x00000000000e0bd5 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000024d9d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000024b5d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x000000000008d286 : and al, 0x39 ; ret 0x2574
0x00000000000bedd5 : and al, 0x39 ; ret 0x840f
0x00000000000eed66 : and al, 0x39 ; ret 0xb575
0x0000000000112651 : and al, 0x3a ; call qword ptr [rax]
0x0000000000176984 : and al, 0x3e ; add byte ptr [rax], al ; sbb byte ptr [rbx - 0x14], ah ; jmp rax
0x000000000010bd56 : and al, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000cb02f : and al, 0x40 ; add rax, rdx ; jmp rax
0x0000000000025312 : and al, 0x40 ; call r15
0x0000000000025e7a : and al, 0x40 ; call rbx
0x00000000000255c8 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000104f41 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002733c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000270d5 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000034d88 : and al, 0x41 ; call rsi
0x0000000000187184 : and al, 0x46 ; add dword ptr [rax], eax ; call 0x22186758
0x0000000000028ee4 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e02ab : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000b71e2 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d9e1e : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000067382 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ea465 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000ea4c6 : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000000c5e1e : and al, 0x48 ; mov dword ptr [rsp + 0x20], ebp ; call 0xc20a8
0x000000000011c7cd : and al, 0x48 ; mov eax, dword ptr [rax + 0x128] ; jmp rax
0x000000000009aca4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002530d : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000025e75 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000008919c : and al, 0x48 ; test esi, esi ; jne 0x891b3 ; jmp 0x8916d
0x0000000000034e88 : and al, 0x4c ; mov esi, ebp ; mov rdi, r12 ; call r14
0x00000000000c35a0 : and al, 0x54 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x1f888
0x00000000000c359f : and al, 0x54 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x1f889
0x0000000000188084 : and al, 0x55 ; add dword ptr [rax], eax ; clc ; cli ; cmc ; jmp qword ptr [rcx]
0x00000000000dda15 : and al, 0x58 ; add ecx, dword ptr [rcx + 0xf10244c] ; xchg eax, esp ; ret 0x8440
0x00000000000c35e9 : and al, 0x58 ; mov r13d, eax ; call 0x1f88f
0x000000000007b11c : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000074f44 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000001128fc : and al, 0x5d ; pop r12 ; ret
0x000000000010979b : and al, 0x60 ; call rax
0x000000000011cc6d : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000009be3d : and al, 0x70 ; mov rdi, r12 ; call rbx
0x000000000009b8b3 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000000ace3b : and al, 0x71 ; jmp 0xab804
0x0000000000179e84 : and al, 0x73 ; add byte ptr [rax], al ; and rdi, rbp ; call rdx
0x000000000007b107 : and al, 0x74 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000d929d : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000018a484 : and al, 0x79 ; add dword ptr [rax], eax ; test al, 0x31 ; stc ; jmp qword ptr [rsi]
0x000000000016ffac : and al, 0x7c ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; ret 0xfff6
0x00000000000c7a87 : and al, 0x7c ; mov r10, rax ; jmp 0xc7abc
0x00000000000c831f : and al, 0x83 ; ret 0x4801
0x00000000000a3f63 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a470b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000029347 : and al, 0x89 ; ret
0x00000000000b3631 : and al, 0x89 ; ret 0x8b49
0x0000000000023aa2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000002892d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000f01ec : and al, 0xb ; jmp 0xf01ff
0x00000000000e0cf2 : and al, 0xb0 ; ret
0x00000000000efffd : and al, 0xc ; add ecx, ebp ; ret
0x000000000003360b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c2474 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003663d : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000011c91f : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000d9fb7 : and al, 0xc ; call rax
0x000000000011adb8 : and al, 0xc0 ; add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000000000d8bd5 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000021d5 : and al, 0xc7 ; jno 0x2226 ; ret 0x1dd4
0x0000000000115f7b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000040531 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000d77ac : and al, 0xd0 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000068273 : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000069918 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000dab35 : and al, 0xe8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000032d7c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000032e0b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00000000001039fd : and al, 0xe8 ; mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x00000000000f9159 : and al, 0xe8 ; push rcx ; ret
0x0000000000032de9 : and al, 0xe8 ; ret
0x0000000000043ae8 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bd2f5 : and al, 0xf ; xchg eax, esp ; ret 0x394c
0x000000000016e759 : and al, 0xf0 ; call rsp
0x0000000000032e07 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000032de5 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000032ea7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a7c76 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000a7c7c : and al, 0xf0 ; ret
0x00000000000b89ba : and al, 0xf3 ; ret
0x0000000000182384 : and al, 0xf8 ; add byte ptr [rax], al ; test al, 0x60 ; jmp qword ptr [rcx]
0x0000000000087006 : and al, 0xf8 ; jne 0x86ee2 ; ret
0x0000000000043aa1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000043aa7 : and al, 0xf8 ; ret
0x000000000016ba7d : and al, 0xfb ; call qword ptr [rax]
0x000000000016c04d : and al, 0xfc ; jmp qword ptr [rax]
0x000000000016c08d : and al, 0xfc ; jmp rax
0x0000000000043a5b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000043a61 : and al, 0xfc ; ret
0x0000000000032f87 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x0000000000032f8b : and al, 0xfe ; ret
0x0000000000184f65 : and al, 1 ; add byte ptr [rax - 0x7f], ch ; stc ; call qword ptr [rax]
0x0000000000171ce5 : and al, 2 ; add ah, cl ; loope 0x171cea ; jmp rsp
0x0000000000196490 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000010602f : and al, 4 ; pop rdi ; call 0x822e5
0x000000000010602e : and al, 4 ; pop rdi ; call 0x822e6
0x0000000000094d48 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000a64e6 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002cbc4 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000a64c9 : and al, 8 ; call 0x22764
0x00000000000f64a4 : and al, 8 ; call 0x72724
0x00000000000f64a3 : and al, 8 ; call 0x72725
0x0000000000031fd3 : and al, 8 ; call 0x7e294
0x000000000010a817 : and al, 8 ; call qword ptr [rax]
0x000000000007bed2 : and al, 8 ; call qword ptr [rdx]
0x00000000000ef793 : and al, 8 ; call rax
0x000000000010977f : and al, 8 ; call rcx
0x0000000000032e3a : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000106543 : and al, 8 ; jne 0x106538 ; add rsp, 0x18 ; ret
0x000000000001fbe1 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000066038 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000fe53b : and al, 8 ; mov rdi, r13 ; call r12
0x0000000000114b1f : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000032d1b : and al, 8 ; ret
0x00000000000b72fc : and al, 8 ; test rax, rax ; je 0xb730c ; call rax
0x00000000000b72fb : and al, 8 ; test rax, rax ; je 0xb730d ; call rax
0x0000000000115a2e : and al, 8 ; xor eax, eax ; call rdx
0x000000000016d1bc : and al, al ; cld ; jmp qword ptr [rax + 0x20fffcbf]
0x000000000016bce8 : and al, al ; std ; jmp qword ptr [rax]
0x00000000000328fe : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000032f56 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007c5ba : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000187d70 : and al, ch ; cmc ; jmp qword ptr [rcx]
0x00000000001169d7 : and al, ch ; ret
0x0000000000076428 : and al, ch ; ret 0x6d0
0x000000000016e739 : and al, dh ; call rsp
0x000000000002c422 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002c442 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002c382 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002c402 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002c322 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002c3c2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002c362 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002c3a2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000016c049 : and bh, ah ; inc dword ptr [rax + 0x24] ; cld ; jmp qword ptr [rax]
0x000000000016c089 : and bh, ah ; inc dword ptr [rax] ; and al, 0xfc ; jmp rax
0x000000000016c069 : and bh, ah ; jmp qword ptr [rax]
0x000000000004fa78 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000002d542 : and bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000016c460 : and bh, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x22fffc80]
0x000000000018cd59 : and bh, dh ; call rsi
0x000000000016d1e4 : and bl, al ; cld ; jmp qword ptr [rax + 0x10fffcc2]
0x0000000000095327 : and bl, al ; nop dword ptr [rax] ; ret
0x000000000016bcf8 : and bl, al ; std ; jmp qword ptr [rax + 0x20fffdc3]
0x000000000016ba69 : and bl, bh ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016f3f1 : and bl, dh ; call rsp
0x00000000000331ff : and bl, dh ; ret
0x000000000016ba68 : and bl, dil ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x00000000000753d9 : and byte ptr [r8 + 0x39], r9b ; ret
0x000000000006e36a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000985a6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000722e4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000007afd5 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000349a1 : and byte ptr [rax + 0x39], cl ; ret
0x000000000010ab0b : and byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x000000000004466c : and byte ptr [rax + 1], cl ; ret
0x000000000008d786 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000e8e4b : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000024116 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000249a1 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000076b03 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000006e36b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000003617a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x00000000000661a6 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007c1ab : and byte ptr [rax - 0x77], cl ; jae 0x7c1c1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000df215 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000ee62f : and byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000011a382 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000409ac : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000229bc : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000002ad44 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2ad58 ; call rax
0x0000000000022866 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000000254b0 : and byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000008b7bf : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000025ba0 : and byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000185780 : and byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000185640 : and byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000070472 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000016c264 : and byte ptr [rax - 4], cl ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000016c214 : and byte ptr [rax - 4], dl ; jmp qword ptr [rax]
0x00000000001175a2 : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003891c : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xb7e
0x00000000000a0267 : and byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000b89fb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000992fc : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b89e0 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016be74 : and byte ptr [rax], al ; cld ; jmp qword ptr [rax]
0x000000000009645c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000985a7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000016c7f4 : and byte ptr [rbp - 4], dh ; jmp qword ptr [rax + 0x20fffc74]
0x000000000019371b : and byte ptr [rbx + 0x100e4402], al ; ret
0x0000000000030eb2 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000067386 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000174235 : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000017923d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000001840e5 : and byte ptr [rbx + 0xa7e0204], al ; ret
0x000000000005343f : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00000000000fe35c : and byte ptr [rbx - 0x3f7affff], 0x89 ; ret 0x4078
0x00000000000473ba : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000183211 : and byte ptr [rbx - 0x73fc79fc], al ; add al, byte ptr [rdx] ; push rdi ; ret
0x000000000018c9d1 : and byte ptr [rbx - 0x73fc79fc], al ; add bl, byte ptr [rcx + 0xa] ; ret
0x00000000000662a9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000016c804 : and byte ptr [rbx - 4], dh ; jmp qword ptr [rax + 0x20fffc72]
0x0000000000191640 : and byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x00000000000286dc : and byte ptr [rcx + 0x39], cl ; ret
0x00000000000722e5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000001778ae : and byte ptr [rcx + 0xa], al ; ret
0x00000000000a6b30 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x0000000000043ae5 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000001166f8 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x000000000016c2b8 : and byte ptr [rcx - 4], dl ; jmp qword ptr [rax]
0x00000000000db6f0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000016ba94 : and byte ptr [rcx], ch ; sti ; push rax ; sub ebx, edi ; call qword ptr [rax]
0x000000000011af3a : and byte ptr [rcx], dh ; in eax, dx ; mov edi, r14d ; call 0xb7178
0x000000000010f33b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b2948 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001803f7 : and byte ptr [rdi + 0xa], cl ; ret
0x000000000016d1c4 : and byte ptr [rdi - 0x415f0004], bh ; cld ; jmp qword ptr [rax]
0x0000000000181c20 : and byte ptr [rdi - 0xd], al ; call rsi
0x000000000016c2b4 : and byte ptr [rdi - 4], cl ; jmp qword ptr [rax]
0x000000000016c5e8 : and byte ptr [rdi - 4], dh ; call qword ptr [rax + 0x10fffc76]
0x000000000016c124 : and byte ptr [rdi], bl ; cld ; push rax ; and ah, bh ; call rax
0x000000000016baac : and byte ptr [rdi], ch ; sti ; call qword ptr [rax]
0x000000000002c405 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010435d : and byte ptr [rdi], cl ; test byte ptr [rsi + rax - 0x7cb80000], bl ; ret 0xf01
0x00000000000229a9 : and byte ptr [rdi], cl ; test cl, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000095019 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000149440 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000000e15df : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8041
0x00000000001042ef : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x000000000016c80c : and byte ptr [rdx - 4], dh ; jmp qword ptr [rax + 0x10fffc71]
0x000000000016c218 : and byte ptr [rdx - 4], dl ; jmp qword ptr [rax]
0x000000000016bb34 : and byte ptr [rdx - 5], ah ; inc dword ptr [rax] ; sti ; jmp rax
0x000000000016c088 : and byte ptr [rdx], ah ; cld ; inc dword ptr [rax] ; and al, 0xfc ; jmp rax
0x000000000016be78 : and byte ptr [rdx], al ; cld ; jmp qword ptr [rax]
0x000000000018a7db : and byte ptr [rdx], al ; mov edx, 0x41200e0a ; ret
0x000000000014beb9 : and byte ptr [rip - 0x3b7cb800], ah ; or cl, ch ; ret
0x0000000000146fda : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017799d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000016d1cc : and byte ptr [rsi - 0x425f0004], bh ; cld ; call qword ptr [rax]
0x000000000016c7ec : and byte ptr [rsi - 4], dh ; jmp qword ptr [rax + 0x20fffc75]
0x000000000016c050 : and byte ptr [rsi], ah ; cld ; call qword ptr [rax]
0x000000000016c0c0 : and byte ptr [rsi], bl ; cld ; jmp rax
0x00000000000e1f31 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x000000000009a572 : and ch, 0xf ; je 0x9a599 ; add rax, 2 ; ret
0x000000000016ddc9 : and ch, ch ; jmp rsp
0x000000000009a55d : and cl, 0xf ; je 0x9a585 ; ret
0x000000000000395a : and cl, ah ; ret
0x000000000016d1b4 : and cl, al ; cld ; jmp qword ptr [rax + 0x20fffcc0]
0x000000000016bcec : and cl, al ; std ; jmp qword ptr [rax]
0x000000000011bbec : and cl, byte ptr [rax - 0x7d] ; ret
0x00000000000879e8 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008171d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000016be70 : and dh, bh ; sti ; jmp qword ptr [rax]
0x0000000000175140 : and dh, bl ; jmp 0x175146
0x00000000000df53d : and dh, bl ; ret
0x00000000000b455a : and dh, byte ptr [rbx - 0x76b7000a] ; ret 0x8948
0x0000000000081d47 : and dh, dh ; ret 0x7504
0x000000000004fa77 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000016c068 : and dil, spl ; jmp qword ptr [rax]
0x000000000016d1ac : and dl, al ; cld ; jmp qword ptr [rax + 0x20fffcc1]
0x000000000016bcf0 : and dl, al ; std ; jmp qword ptr [rax + 0x20fffdc2]
0x000000000008818a : and dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00000000000f04ec : and dword ptr [rax + 0x3a], eax ; cmp byte ptr [rsi + 0x48], dh ; mov edx, eax ; jmp 0xf050d
0x0000000000174cdd : and dword ptr [rax], eax ; add al, ah ; ret 0xffeb
0x000000000005e335 : and dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000000b740 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000048a0 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x12
0x0000000000049751 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000015cd22 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000d0ac8 : and dword ptr [rbx - 0x7cb7f717], eax ; ret 0x4801
0x000000000006a69f : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000f86cb : and dword ptr [rcx + 0x2a], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000067949 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x0000000000102416 : and dword ptr [rcx - 0xa], eax ; ret
0x000000000003cec3 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x000000000009f1fb : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000033b46 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x000000000006f6d0 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000033ca8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000070ad6 : and dword ptr [rdi], ecx ; mov dh, 0 ; pop rbx ; ret
0x0000000000032bd3 : and dword ptr [rsi + 0x540f0013], ecx ; ret 0x2e0f
0x0000000000159dd9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000094e4b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x000000000015cd21 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000014bff6 : and eax, 0 ; add bl, dh ; ret
0x0000000000020a1b : and eax, 0 ; ret
0x00000000000df353 : and eax, 0x100f ; ret
0x0000000000032f6a : and eax, 0x200 ; ret
0x000000000016c111 : and eax, 0x26d0fffc ; cld ; call rax
0x000000000016c0f1 : and eax, 0x2710fffc ; cld ; call qword ptr [rax]
0x000000000011a1eb : and eax, 0x27f750 ; ret
0x00000000000e7804 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000b8146 : and eax, 0x2d0 ; ret
0x00000000000b7502 : and eax, 0x2d4 ; call 0x73727
0x00000000000209b8 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x00000000000803c7 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002074d : and eax, 0x30 ; call rax
0x0000000000035b59 : and eax, 0x30 ; call rdx
0x000000000002ca24 : and eax, 0x30 ; jmp rax
0x0000000000029a39 : and eax, 0x30 ; lea rbp, qword ptr [r13 + 0x10] ; call rax
0x000000000002d4f3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x0000000000046af8 : and eax, 0x30 ; xor esi, esi ; call rax
0x000000000009925d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000009927d : and eax, 0x3fc00 ; ret
0x000000000009923c : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000011d0d7 : and eax, 0x48fffbc5 ; add esp, 0x18 ; ret
0x00000000001850dd : and eax, 0x4e500001 ; cmc ; jmp qword ptr [rcx]
0x00000000001850f5 : and eax, 0x4e680001 ; cmc ; call qword ptr [rcx]
0x0000000000185145 : and eax, 0x4ed80001 ; cmc ; jmp qword ptr [rcx]
0x000000000018515d : and eax, 0x4ef00001 ; cmc ; jmp qword ptr [rsi]
0x000000000014b795 : and eax, 0x58d4800 ; ret 0x1f9
0x000000000014bd73 : and eax, 0x5be17500 ; ret
0x000000000002c512 : and eax, 0x7f ; ret
0x00000000000992b0 : and eax, 0x7ff80000 ; ret
0x0000000000032924 : and eax, 0x80 ; ret
0x00000000000329e7 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x000000000006ebe2 : and eax, 0x804 ; ret
0x00000000000c6d76 : and eax, 0x8348d231 ; ret 0x4801
0x00000000000d20c6 : and eax, 0x8900000c ; ret 0x894c
0x00000000000c204a : and eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000075f53 : and eax, 0x950f4100 ; ret
0x00000000000f3e67 : and eax, 0xc ; cmp eax, 4 ; je 0xf3e78 ; ret
0x00000000000f4038 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000014beba : and eax, 0xc4834800 ; or cl, ch ; ret
0x00000000000b88bc : and eax, 0xc748002e ; ret 0xffff
0x00000000001750e5 : and eax, 0xdd480000 ; jmp 0x1750f1
0x000000000017513d : and eax, 0xde200000 ; jmp 0x175149
0x0000000000171d0d : and eax, 0xedbc0002 ; stc ; call rsp
0x00000000000d3f04 : and eax, 0xf ; ret
0x000000000014c005 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000e7941 : and eax, 0xfff ; or eax, edi ; ret
0x00000000000f7e0d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00000000000f7da8 : and eax, 0xffffff ; ret
0x00000000000e50b2 : and eax, 0xfffffff0 ; mov r15, r8 ; jmp 0xe5083
0x00000000001016e3 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000e3ccf : and eax, 1 ; jmp 0xe3c9b
0x00000000000c039d : and eax, 1 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c4b88 : and eax, 1 ; pop rbx ; ret
0x000000000002c4c2 : and eax, 1 ; ret
0x00000000000c4a88 : and eax, 2 ; add eax, 8 ; ret
0x000000000002c342 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000c4ad4 : and eax, 2 ; ret
0x00000000000421dc : and eax, 2 ; sub eax, 1 ; ret
0x000000000002c3e2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002c302 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000032c54 : and eax, 8 ; ret
0x00000000000ca7ba : and eax, dword ptr [rbx - 0x7cb7fe3f] ; ret
0x0000000000184f45 : and eax, dword ptr [rcx] ; add al, bh ; cmc ; call qword ptr [rax]
0x0000000000184f05 : and eax, dword ptr [rcx] ; add byte ptr [rax], ch ; cmc ; call qword ptr [rax]
0x0000000000184ebd : and eax, dword ptr [rcx] ; add byte ptr [rax], dh ; cmc ; call qword ptr [rsi]
0x00000000001416e9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000171cc5 : and eax, dword ptr [rdx] ; add byte ptr [rdi + rbx*8], bl ; stc ; jmp rsp
0x0000000000002d17 : and eax, ebp ; clc ; ret
0x0000000000032632 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000032572 : and eax, edx ; ret
0x00000000000325c0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002c6dd : and eax, esi ; ret
0x000000000006a6a0 : and ebp, edi ; pop rbx ; ret
0x00000000000f3e02 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0xf3e15 ; ret
0x00000000000c4bcf : and ebx, 8 ; je 0xc4b70 ; pop rbx ; ret
0x000000000016ba6d : and ebx, edi ; call rax
0x0000000000036ab8 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x0000000000148555 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000147c88 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000006d090 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000e16cf : and ecx, dword ptr [rax - 0x7d] ; ret 0x3c01
0x0000000000079ddc : and ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000074876 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret 0x328f
0x00000000000737bc : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000104cd6 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000e2509 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x0000000000104cfd : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x000000000002c522 : and edi, 0xffffff80 ; sete al ; ret
0x0000000000191641 : and edi, eax ; call qword ptr [rdx]
0x0000000000179e89 : and edi, ebp ; call rdx
0x000000000016ba79 : and edi, ebx ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016c0ed : and edi, esp ; inc dword ptr [rax + 0x25] ; cld ; call qword ptr [rax]
0x000000000006d183 : and edx, 1 ; mov eax, edx ; ret
0x000000000009b018 : and edx, 3 ; mov rax, rdi ; jne 0x9b036 ; ret
0x0000000000002bf9 : and edx, esp ; bswap ebx ; clc ; ret
0x0000000000043abe : and esi, 0xe0837fff ; jg 0x43ad7 ; ret 0x5488
0x00000000000305c9 : and esi, dword ptr [rax - 0x76b7ffca] ; ret 0x8948
0x00000000000e249b : and esi, dword ptr [rbp + 0xd] ; jmp 0xe24c7
0x000000000002e46c : and esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c2f9c : and esi, esi ; ret
0x000000000016c0a9 : and esp, edi ; call rax
0x000000000016c109 : and esp, edi ; jmp qword ptr [rax]
0x0000000000033b45 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000033ca7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000e50b1 : and r8, 0xfffffffffffffff0 ; mov r15, r8 ; jmp 0xe5084
0x000000000014b794 : and rax, 0x58d4800 ; ret 0x1f9
0x0000000000032631 : and rax, rdx ; movq xmm0, rax ; ret
0x0000000000179e88 : and rdi, rbp ; call rdx
0x000000000016c084 : and spl, dil ; jmp qword ptr [rax]
0x00000000000329ab : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000329a8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000069432 : bnd call 0x72367 ; mov edx, eax ; jmp 0x693d8
0x000000000015ee6a : bnd call rsp ; loope 0x15ee66 ; jmp rsp
0x00000000001021f7 : bnd jb 0x1021ec ; mov eax, 0xffffffff ; ret
0x000000000008d1f9 : bnd je 0x8d1f4 ; ret
0x000000000009c0e7 : bnd je 0x9c0f6 ; test edx, edx ; jne 0x9c0e8 ; ret
0x00000000000d0afb : bnd jmp 0xd0adf ; mov eax, dword ptr [rsi + 0x14] ; ret
0x0000000000088c5a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000081580 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000081590 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000815a0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000081570 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000814bf : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000088e53 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000082275 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000007e2c6 : bsf eax, edx ; ret
0x000000000007e422 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000088f70 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000007e312 : bsf rax, rdx ; ret
0x000000000008d851 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000007ffc7 : bsr eax, eax ; add rax, rdi ; ret
0x000000000008d720 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008d730 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008d740 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008024b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000080159 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000080055 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000007ffc6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008024a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000080158 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000080054 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000110ccd : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000f7d82 : bswap eax ; ret
0x0000000000002bfb : bswap ebx ; clc ; ret
0x00000000000b4444 : call 0x106129
0x000000000014c590 : call 0x108892
0x000000000010f142 : call 0x10b3d2
0x000000000010f185 : call 0x10b452
0x00000000000b9f2b : call 0x110b9f2e
0x000000000018af98 : call 0x1118a651
0x000000000010945e : call 0x115722
0x00000000000d6fcc : call 0x12cff3e3
0x0000000000173d78 : call 0x131728d5
0x000000000017d4b8 : call 0x1317c4c9
0x0000000000033b20 : call 0x140c8333
0x000000000018b7b8 : call 0x1818ae82
0x00000000000735ed : call 0x1f882
0x00000000000c35ee : call 0x1f88a
0x0000000000102c24 : call 0x1f890
0x0000000000046d1c : call 0x21046d1e
0x000000000004734b : call 0x2104734d
0x00000000000473f9 : call 0x210473fb
0x0000000000047841 : call 0x21047843
0x0000000000047850 : call 0x21047852
0x0000000000049114 : call 0x21049116
0x000000000004928c : call 0x2104928e
0x00000000001844b8 : call 0x22183983
0x00000000001852d8 : call 0x22184830
0x0000000000185928 : call 0x22184e94
0x0000000000187188 : call 0x22186754
0x0000000000188268 : call 0x2218786c
0x00000000000a6472 : call 0x22762
0x000000000017bbd8 : call 0x2317ab58
0x0000000000087214 : call 0x247cfd6d
0x00000000000bff61 : call 0x2c232
0x000000000009ee51 : call 0x2c238
0x00000000000d7d1d : call 0x43fb2
0x00000000000c1261 : call 0x45ce13aa
0x000000000006e214 : call 0x468d7
0x00000000000f274c : call 0x4e9e2
0x00000000001339da : call 0x4f9249d8
0x00000000001339d9 : call 0x4f9249d9
0x00000000001364aa : call 0x4f9274a8
0x00000000001364a9 : call 0x4f9274a9
0x0000000000138fca : call 0x4f929fc8
0x0000000000138fc9 : call 0x4f929fc9
0x000000000016e9f5 : call 0x6192ea00
0x000000000007a6a8 : call 0x668b2
0x000000000007bc47 : call 0x67f32
0x000000000004cbce : call 0x68e62
0x000000000005e015 : call 0x6a302
0x00000000000f64a6 : call 0x72722
0x000000000005a4d1 : call 0x72b57
0x00000000000b73ee : call 0x73682
0x00000000000b740b : call 0x73692
0x00000000000b7403 : call 0x736a2
0x00000000000b7418 : call 0x736b2
0x00000000000b7507 : call 0x73722
0x0000000000077dff : call 0x74052
0x00000000000781b7 : call 0x743c2
0x0000000000078578 : call 0x74842
0x000000000007881d : call 0x74ac2
0x00000000000a81a7 : call 0x74ccb9ce
0x00000000000b88ad : call 0x750b89b6
0x000000000003062a : call 0x7c862
0x0000000000022046 : call 0x7e292
0x00000000000759b4 : call 0x81c92
0x00000000000c7810 : call 0x81c94
0x0000000000106032 : call 0x822e2
0x000000000004ac30 : call 0x86ed2
0x000000000005b58f : call 0x8c838df
0x00000000000b7d12 : call 0x8ce0062
0x0000000000020226 : call 0x990a6
0x000000000002032a : call 0x991c6
0x000000000011ae8f : call 0xb7172
0x00000000000d99be : call 0xb8167
0x000000000011be93 : call 0xb8182
0x00000000000d99eb : call 0xb8187
0x00000000000c5e24 : call 0xc20a2
0x00000000000de934 : call 0xdab92
0x000000000006ea4f : call 0xdad42
0x00000000000fcea9 : call 0xdad46
0x000000000005eb87 : call 0xeae32
0x00000000000e7ddd : call 0xf0e7de6
0x00000000000e7dfd : call 0xf0e7e06
0x0000000000067b65 : call 0xf3d92
0x00000000000f8338 : call 0xf54627
0x0000000000032e6d : call 0xffffffff8169f0fd
0x0000000000054f02 : call 0xffffffff8e054f08
0x000000000015a843 : call 0xffffffffaed846b9
0x00000000000c0b68 : call 0xffffffffc20d5775
0x00000000000a78aa : call 0xffffffffc233c0f2
0x000000000004b613 : call 0xffffffffc23dfe1d
0x0000000000076e35 : call 0xffffffffc240b646
0x0000000000077eb7 : call 0xffffffffc240c7c8
0x00000000000415c1 : call 0xffffffffc28d56e9
0x00000000000774b8 : call 0xffffffffc290bcd1
0x00000000001019de : call 0xffffffffc299205a
0x000000000010bfc6 : call 0xffffffffc29a07d7
0x0000000000094c84 : call 0xffffffffc3094c94
0x0000000000098e76 : call 0xffffffffc30e1bcc
0x0000000000098e8f : call 0xffffffffc30e1be5
0x0000000000041070 : call 0xffffffffc33d587a
0x000000000005ab66 : call 0xffffffffc33ef770
0x00000000000cc5ba : call 0xffffffffc345db35
0x00000000000ee530 : call 0xffffffffc3482d3a
0x00000000000ee7cc : call 0xffffffffc3482fd6
0x000000000009b77c : call 0xffffffffc365f8e2
0x00000000001444a5 : call 0xffffffffc39a53be
0x0000000000145525 : call 0xffffffffc39a643e
0x00000000000823b7 : call 0xffffffffc3d8ad08
0x000000000007c5c7 : call 0xffffffffc4004f18
0x000000000007ddc7 : call 0xffffffffc4006718
0x000000000005c6e5 : call 0xffffffffd104c720
0x00000000001736b8 : call 0xffffffffd71721d0
0x0000000000185ed8 : call 0xffffffffe2185468
0x0000000000032d37 : call 0xffffffffe284efc7
0x00000000001733b8 : call 0xffffffffe4171ec1
0x00000000000f1377 : call 0xffffffffead0d607
0x0000000000111b6f : call qword ptr [r10]
0x00000000000747df : call qword ptr [r14]
0x000000000016c60b : call qword ptr [rax + 0x10fffc72]
0x000000000016c603 : call qword ptr [rax + 0x10fffc73]
0x000000000016c5fb : call qword ptr [rax + 0x10fffc74]
0x000000000016c5f3 : call qword ptr [rax + 0x10fffc75]
0x000000000016c5eb : call qword ptr [rax + 0x10fffc76]
0x000000000016d207 : call qword ptr [rax + 0x10fffcbe]
0x000000000016d1ff : call qword ptr [rax + 0x10fffcbf]
0x000000000016d1f7 : call qword ptr [rax + 0x10fffcc0]
0x000000000016d1ef : call qword ptr [rax + 0x10fffcc1]
0x000000000016cfe3 : call qword ptr [rax + 0x10fffcc3]
0x000000000016c13b : call qword ptr [rax + 0x20fffc2a]
0x000000000016c0bb : call qword ptr [rax + 0x20fffc2b]
0x000000000016c5cf : call qword ptr [rax + 0x20fffc7b]
0x000000000016c3b7 : call qword ptr [rax + 0x20fffc7e]
0x000000000016cabb : call qword ptr [rax + 0x20fffca3]
0x000000000016c8a3 : call qword ptr [rax + 0x20fffca6]
0x000000000016cfb3 : call qword ptr [rax + 0x20fffcca]
0x000000000016cddb : call qword ptr [rax + 0x26fffcc6]
0x000000000006b7e7 : call qword ptr [rax + 0x80]
0x000000000016f063 : call qword ptr [rax + rdx - 0x3c93ffff]
0x000000000016c37b : call qword ptr [rax - 0x1f0003c8]
0x000000000016c327 : call qword ptr [rax - 0x1f0003cf]
0x000000000016c1af : call qword ptr [rax - 0x1f0003f4]
0x000000000016bfcf : call qword ptr [rax - 0x1f000412]
0x000000000016bfe3 : call qword ptr [rax - 0x1f000420]
0x000000000016bb8b : call qword ptr [rax - 0x1f000477]
0x000000000016c19b : call qword ptr [rax - 0x2f0003e6]
0x00000000000326dc : call qword ptr [rax - 0x3d]
0x000000000015f0d3 : call qword ptr [rax]
0x000000000016e6a3 : call qword ptr [rbp + rdx*8 + 0x15fc0000]
0x000000000015fd07 : call qword ptr [rbp + rsi*8 - 0xc]
0x000000000016e3fb : call qword ptr [rbx + rax*8]
0x000000000016d503 : call qword ptr [rbx + rbp*2]
0x000000000016d15f : call qword ptr [rbx + rdi*4 - 0x3cc50004]
0x000000000014bdce : call qword ptr [rbx]
0x000000000005a9d8 : call qword ptr [rcx]
0x000000000015e7fb : call qword ptr [rdi]
0x000000000016c463 : call qword ptr [rdx + 0x22fffc80]
0x000000000016c98f : call qword ptr [rdx + 0x22fffca1]
0x000000000016ce87 : call qword ptr [rdx + 0x22fffcc8]
0x000000000016e79b : call qword ptr [rdx + rbx*8 + 0x266c0000]
0x000000000004ffdc : call qword ptr [rdx]
0x000000000016c3ff : call qword ptr [rsi + 0x26fffc7d]
0x000000000016c8eb : call qword ptr [rsi + 0x26fffca5]
0x000000000016cde3 : call qword ptr [rsi + 0x26fffccc]
0x000000000016010b : call qword ptr [rsi + 0x3bfff51f]
0x00000000001600db : call qword ptr [rsi - 0x2e000ae1]
0x000000000016bc77 : call qword ptr [rsi - 0x3d]
0x00000000000747e0 : call qword ptr [rsi]
0x0000000000181279 : call qword ptr es:[rbx]
0x0000000000023b25 : call r12
0x00000000000218a9 : call r14
0x0000000000023935 : call r15
0x0000000000064f13 : call r8
0x00000000000f3686 : call r9
0x000000000016c38b : call rax
0x000000000002c068 : call rbx
0x0000000000029eb9 : call rcx
0x0000000000023936 : call rdi
0x0000000000035b5e : call rdx
0x00000000000218aa : call rsi
0x0000000000023b26 : call rsp
0x000000000016dded : cdq ; add byte ptr [rax], al ; mov word ptr [rcx], gs ; in eax, dx ; call rsp
0x0000000000079e0d : cdq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000025b81 : cdq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x000000000016cb05 : cdq ; cld ; jmp rax
0x0000000000186471 : cdq ; cmc ; call qword ptr [rsi]
0x0000000000186489 : cdq ; cmc ; jmp qword ptr [rcx]
0x0000000000036194 : cdq ; idiv rsi ; ret
0x000000000015c580 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000109fe3 : cdq ; or ebp, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x0000000000041433 : cdq ; ret 0x35
0x0000000000192819 : cdq ; sti ; jmp qword ptr [rdx]
0x00000000000eb993 : cdq ; sub al, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000109143 : cdq ; xchg byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000df22e : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000010245d : cdqe ; shr rax, 4 ; ret
0x000000000005bb4e : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x870f
0x0000000000038e76 : clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x00000000000e0998 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000004ad8a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000016ec4d : clc ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sal eax, 1 ; call rsp
0x000000000018245d : clc ; add byte ptr [rax], al ; mov al, 0x66 ; jmp qword ptr [rdi]
0x0000000000182385 : clc ; add byte ptr [rax], al ; test al, 0x60 ; jmp qword ptr [rcx]
0x0000000000050365 : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x0000000000068d6e : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000d3658 : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000088423 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000010cb78 : clc ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000019238d : clc ; add dword ptr [rax], eax ; mov al, 0x38 ; clc ; jmp qword ptr [rcx]
0x0000000000031440 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000d367d : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x0000000000098f04 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000001016e5 : clc ; add eax, 0x10 ; ret
0x00000000000ab6b8 : clc ; add eax, 0x2907f9c1 ; ret 0xf089
0x0000000000109fd1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000c17ae : clc ; add esi, dword ptr [rsi + rax - 0xd] ; ret
0x000000000008d856 : clc ; add rax, r8 ; ret
0x0000000000081348 : clc ; add rax, rcx ; ret
0x00000000000f5012 : clc ; add rsp, 8 ; ret
0x000000000002c511 : clc ; and eax, 0x7f ; ret
0x00000000000f7da7 : clc ; and eax, 0xffffff ; ret
0x00000000000f7d81 : clc ; bswap eax ; ret
0x000000000018e032 : clc ; call qword ptr [rax]
0x0000000000190f52 : clc ; call qword ptr [rbx]
0x0000000000190f3a : clc ; call qword ptr [rcx]
0x0000000000193472 : clc ; call qword ptr [rdi]
0x0000000000191392 : clc ; call qword ptr [rdx]
0x0000000000191caa : clc ; call qword ptr [rsi]
0x00000000001931d2 : clc ; call rbx
0x0000000000193592 : clc ; call rcx
0x00000000001935e2 : clc ; call rdi
0x00000000001710e2 : clc ; call rsp
0x0000000000188088 : clc ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000184f48 : clc ; cmc ; call qword ptr [rax]
0x0000000000101531 : clc ; cmc ; je 0x10152d ; pop rbx ; ret
0x0000000000187e21 : clc ; cmc ; jmp qword ptr [rcx]
0x0000000000037917 : clc ; cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000003af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001484f9 : clc ; cmp rcx, rax ; jne 0x14852b ; xor eax, eax ; ret
0x00000000001484f8 : clc ; cmp rcx, rax ; jne 0x14852c ; xor eax, eax ; ret
0x0000000000149339 : clc ; cmp rcx, rax ; jne 0x14936b ; xor eax, eax ; ret
0x0000000000149338 : clc ; cmp rcx, rax ; jne 0x14936c ; xor eax, eax ; ret
0x0000000000036192 : clc ; cqo ; idiv rsi ; ret
0x000000000007ac50 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000070588 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000101598 : clc ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000002c187 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000076430 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000046e34 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000484f0 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000112989 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00000000000bd695 : clc ; dec dword ptr [rdi] ; test dl, dl ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000006d74d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000170f52 : clc ; dec esp ; enter 1, -0x34 ; sbb edi, eax ; jmp rsp
0x00000000001710aa : clc ; dec esp ; rol byte ptr [rcx], 1 ; add byte ptr [rdi], bh ; clc ; jmp rsp
0x000000000002a29a : clc ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000170e9a : clc ; inc esp ; ret 1
0x0000000000180758 : clc ; jg 0x180750 ; call rsi
0x0000000000025f17 : clc ; jg 0x25ea6 ; ret 0x870f
0x000000000002623e : clc ; jg 0x261cd ; ret 0x5c77
0x0000000000191ff2 : clc ; jmp qword ptr [rbx]
0x0000000000192392 : clc ; jmp qword ptr [rcx]
0x00000000001937ca : clc ; jmp qword ptr [rsi]
0x0000000000044e5c : clc ; jmp rax
0x0000000000170eb2 : clc ; jmp rsp
0x000000000014b31a : clc ; jne 0x14b427 ; ret
0x000000000014b319 : clc ; jne 0x14b428 ; ret
0x0000000000033df4 : clc ; jne 0x33df0 ; mov eax, 1 ; ret
0x0000000000087007 : clc ; jne 0x86ee1 ; ret
0x000000000009b01d : clc ; jne 0x9b031 ; ret
0x000000000009d336 : clc ; jo 0x9d34c ; xchg eax, esp ; ret
0x000000000009f906 : clc ; jo 0x9f91c ; xchg eax, esp ; ret
0x00000000000a1d36 : clc ; jo 0xa1d4c ; xchg eax, esp ; ret
0x000000000017165a : clc ; lcall ptr [rbp + rsi*8 - 0x63ffff] ; clc ; jmp rsp
0x0000000000171602 : clc ; lcall ptr [rdx + rsi*8 - 0x17c3ffff] ; clc ; jmp rsp
0x00000000000f40f4 : clc ; leave ; ret
0x00000000001715da : clc ; ljmp ptr [rcx + rsi*8 - 0x1c73ffff] ; clc ; call rsp
0x000000000015d398 : clc ; loope 0x15d39d ; jmp qword ptr [rdi]
0x000000000015d418 : clc ; loope 0x15d41d ; jmp qword ptr [rdi]
0x000000000015d498 : clc ; loope 0x15d49d ; jmp qword ptr [rdi]
0x000000000015d518 : clc ; loope 0x15d51d ; jmp qword ptr [rdi]
0x000000000015d598 : clc ; loope 0x15d59d ; jmp qword ptr [rdi]
0x000000000015d618 : clc ; loope 0x15d61d ; jmp qword ptr [rdi]
0x00000000000e1edd : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000008d058 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000015b1e2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000017f0c8 : clc ; mov cl, 0xf1 ; jmp qword ptr [rbx]
0x000000000012b4f7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012be67 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133767 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c067 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001336d7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c267 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133647 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012b513 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000008e1cc : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000043aa2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000020f3c : clc ; neg eax ; ret
0x000000000007df17 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x000000000007dec1 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x000000000008db56 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008997b : clc ; pop rbx ; ret
0x000000000006a1a4 : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x000000000006bfaa : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000065840 : clc ; push qword ptr [rbp + rbp*4 - 0x77] ; ret 0xe283
0x000000000011bc4f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000b39fd : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000042235 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x0000000000072bd0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000000f4771 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x000000000006a69b : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000170eaa : clc ; push qword ptr [rbx + rax*8 + 0x64c0001] ; clc ; jmp rsp
0x000000000017142a : clc ; push qword ptr [rbx - 0x5c13ffff] ; clc ; call rsp
0x00000000000725b5 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000001714ca : clc ; push qword ptr [rsi - 0x5263ffff] ; clc ; jmp rsp
0x0000000000002bd1 : clc ; ret
0x000000000016b192 : clc ; ret 0x6e1f
0x000000000018b7e8 : clc ; ret 0xfff6
0x00000000000f7d91 : clc ; ror ax, 8 ; ret
0x00000000000038ec : clc ; salc ; jb 0x3970 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000036123 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f7aab : clc ; sar rax, 6 ; ret
0x00000000000bf642 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x000000000004275a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000f7e27 : clc ; shr eax, 0x18 ; ret
0x000000000016bec5 : clc ; sti ; call qword ptr [rax]
0x000000000016bee5 : clc ; sti ; jmp rax
0x000000000016bea5 : clc ; sti ; push qword ptr [rax] ; cli ; sti ; call qword ptr [rax]
0x0000000000180328 : clc ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rbx]
0x00000000001634ec : clc ; sub ebx, edi ; dec dword ptr [rax] ; sub bh, bl ; call qword ptr [rax]
0x0000000000079373 : clc ; sub rax, 0x10 ; add rsp, 8 ; ret
0x000000000012313c : clc ; sub rax, r8 ; ret
0x0000000000123391 : clc ; sub rax, rdx ; ret
0x000000000015edfc : clc ; test edx, esi ; dec dword ptr [rax] ; xchg dl, dh ; jmp qword ptr [rax]
0x0000000000029eb3 : clc ; test rcx, rcx ; je 0x29ec1 ; call rcx
0x00000000001862a8 : clc ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x0000000000187808 : clc ; xlatb ; cmc ; call qword ptr [rax]
0x00000000000b8942 : cld ; add byte ptr [rax], al ; ret
0x0000000000192815 : cld ; add dword ptr [rax], eax ; cwde ; cdq ; sti ; jmp qword ptr [rdx]
0x000000000009925f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009927f : cld ; add eax, dword ptr [rax] ; ret
0x000000000018925c : cld ; add word ptr [rax], ax ; sal byte ptr [rax], 0xf6 ; call rsi
0x000000000016e738 : cld ; and al, dh ; call rsp
0x000000000018515c : cld ; and eax, 0x4ef00001 ; cmc ; jmp qword ptr [rsi]
0x000000000016c60a : cld ; call qword ptr [rax + 0x10fffc72]
0x000000000016c602 : cld ; call qword ptr [rax + 0x10fffc73]
0x000000000016c5fa : cld ; call qword ptr [rax + 0x10fffc74]
0x000000000016c5f2 : cld ; call qword ptr [rax + 0x10fffc75]
0x000000000016c5ea : cld ; call qword ptr [rax + 0x10fffc76]
0x000000000016d206 : cld ; call qword ptr [rax + 0x10fffcbe]
0x000000000016d1fe : cld ; call qword ptr [rax + 0x10fffcbf]
0x000000000016d1f6 : cld ; call qword ptr [rax + 0x10fffcc0]
0x000000000016d1ee : cld ; call qword ptr [rax + 0x10fffcc1]
0x000000000016cfe2 : cld ; call qword ptr [rax + 0x10fffcc3]
0x000000000016c13a : cld ; call qword ptr [rax + 0x20fffc2a]
0x000000000016c0ba : cld ; call qword ptr [rax + 0x20fffc2b]
0x000000000016c5ce : cld ; call qword ptr [rax + 0x20fffc7b]
0x000000000016c3b6 : cld ; call qword ptr [rax + 0x20fffc7e]
0x000000000016caba : cld ; call qword ptr [rax + 0x20fffca3]
0x000000000016c8a2 : cld ; call qword ptr [rax + 0x20fffca6]
0x000000000016cfb2 : cld ; call qword ptr [rax + 0x20fffcca]
0x000000000016cdda : cld ; call qword ptr [rax + 0x26fffcc6]
0x000000000016c37a : cld ; call qword ptr [rax - 0x1f0003c8]
0x000000000016c326 : cld ; call qword ptr [rax - 0x1f0003cf]
0x000000000016c1ae : cld ; call qword ptr [rax - 0x1f0003f4]
0x000000000016c19a : cld ; call qword ptr [rax - 0x2f0003e6]
0x000000000016befe : cld ; call qword ptr [rax]
0x000000000016d15e : cld ; call qword ptr [rbx + rdi*4 - 0x3cc50004]
0x000000000016c462 : cld ; call qword ptr [rdx + 0x22fffc80]
0x000000000016c98e : cld ; call qword ptr [rdx + 0x22fffca1]
0x000000000016ce86 : cld ; call qword ptr [rdx + 0x22fffcc8]
0x000000000016c482 : cld ; call qword ptr [rdx]
0x000000000016c3fe : cld ; call qword ptr [rsi + 0x26fffc7d]
0x000000000016c8ea : cld ; call qword ptr [rsi + 0x26fffca5]
0x000000000016cde2 : cld ; call qword ptr [rsi + 0x26fffccc]
0x000000000016c90a : cld ; call qword ptr [rsi]
0x000000000016c38a : cld ; call rax
0x000000000016c472 : cld ; call rdx
0x000000000016c40e : cld ; call rsi
0x000000000016c53a : cld ; call rsp
0x000000000018245c : cld ; clc ; add byte ptr [rax], al ; mov al, 0x66 ; jmp qword ptr [rdi]
0x0000000000171fb8 : cld ; cli ; call rsp
0x000000000015e250 : cld ; cli ; out dx, eax ; jmp rsp
0x00000000001881d9 : cld ; cmc ; jmp qword ptr [rcx]
0x000000000014b412 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x14b428 ; xor eax, eax ; ret
0x000000000014b411 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x14b429 ; xor eax, eax ; ret
0x00000000000c1cbc : cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xc1cb7 ; ret
0x00000000000b8de0 : cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bab0a : cld ; dec dword ptr [rax - 0x77] ; ret 0x1deb
0x00000000001190df : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016d19e : cld ; dec dword ptr [rdx + 0x30fffcbb] ; ret
0x000000000016d0e2 : cld ; dec dword ptr [rsi - 0x3d] ; cld ; dec esi ; ret 0xfffc
0x000000000016d0e6 : cld ; dec esi ; ret 0xfffc
0x0000000000032e37 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000015fd0c : cld ; hlt ; call rsp
0x000000000016befa : cld ; inc dword ptr [rax + 0x10fffc03] ; idiv bl ; call rax
0x000000000016c196 : cld ; inc dword ptr [rax + 0x19] ; cld ; call qword ptr [rax - 0x2f0003e6]
0x000000000016c082 : cld ; inc dword ptr [rax + 0x20] ; cld ; jmp qword ptr [rax]
0x000000000016d1de : cld ; inc dword ptr [rax + 0x20fffcbb] ; ret
0x000000000016c106 : cld ; inc dword ptr [rax + 0x21] ; cld ; jmp qword ptr [rax]
0x000000000016c066 : cld ; inc dword ptr [rax + 0x22] ; cld ; jmp qword ptr [rax]
0x000000000016c04a : cld ; inc dword ptr [rax + 0x24] ; cld ; jmp qword ptr [rax]
0x000000000016c0ee : cld ; inc dword ptr [rax + 0x25] ; cld ; call qword ptr [rax]
0x000000000016c322 : cld ; inc dword ptr [rax + 0x30] ; cld ; call qword ptr [rax - 0x1f0003cf]
0x000000000016c376 : cld ; inc dword ptr [rax + 0x37] ; cld ; call qword ptr [rax - 0x1f0003c8]
0x000000000016c07e : cld ; inc dword ptr [rax + 0x40fffc1e] ; and ah, bh ; jmp qword ptr [rax]
0x000000000016c1f6 : cld ; inc dword ptr [rax + 0x52] ; cld ; inc dword ptr [rax + 0x54] ; cld ; call rax
0x000000000016c1fa : cld ; inc dword ptr [rax + 0x54] ; cld ; call rax
0x000000000016c5da : cld ; inc dword ptr [rax + 0x7a] ; cld ; jmp rax
0x000000000016c3c2 : cld ; inc dword ptr [rax + 0x7d] ; cld ; call rax
0x000000000016c1aa : cld ; inc dword ptr [rax + 0xb] ; cld ; call qword ptr [rax - 0x1f0003f4]
0x000000000016cfea : cld ; inc dword ptr [rax + 0xfffcc2] ; ret 0xfffc
0x000000000016bf1a : cld ; inc dword ptr [rax + 3] ; cld ; call rax
0x000000000016c332 : cld ; inc dword ptr [rax - 0x2f0003cb] ; cld ; jmp qword ptr [rax]
0x000000000016c1ba : cld ; inc dword ptr [rax - 0x2f0003f0] ; adc esp, edi ; jmp qword ptr [rax]
0x000000000016c166 : cld ; inc dword ptr [rax - 0x2f0003f7] ; or bh, ah ; jmp qword ptr [rax]
0x000000000016cda6 : cld ; inc dword ptr [rax - 0x34] ; cld ; call rax
0x000000000016cfbe : cld ; inc dword ptr [rax - 0x37] ; cld ; call rax
0x000000000016c8ae : cld ; inc dword ptr [rax - 0x5b] ; cld ; call rax
0x000000000016cac6 : cld ; inc dword ptr [rax - 0x5e] ; cld ; call rax
0x000000000016bede : cld ; inc dword ptr [rax - 0xa] ; sti ; inc dword ptr [rax] ; clc ; sti ; jmp rax
0x000000000016c08a : cld ; inc dword ptr [rax] ; and al, 0xfc ; jmp rax
0x000000000016c10e : cld ; inc dword ptr [rax] ; and eax, 0x26d0fffc ; cld ; call rax
0x000000000016c266 : cld ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000016c3b2 : cld ; inc dword ptr [rax] ; jg 0x16c3bc ; call qword ptr [rax + 0x20fffc7e]
0x000000000016c5ca : cld ; inc dword ptr [rax] ; jl 0x16c5d4 ; call qword ptr [rax + 0x20fffc7b]
0x000000000016d212 : cld ; inc dword ptr [rax] ; mov ebp, 0xbc70fffc ; cld ; jmp rax
0x000000000016d00e : cld ; inc dword ptr [rax] ; mov esi, 0xbd70fffc ; cld ; jmp rax
0x000000000016cab6 : cld ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffca3]
0x000000000016cfee : cld ; inc dword ptr [rax] ; ret 0xfffc
0x000000000016cfae : cld ; inc dword ptr [rax] ; retf ; cld ; call qword ptr [rax + 0x20fffcca]
0x000000000016d122 : cld ; inc dword ptr [rbx + rax*8 - 4] ; inc esp ; ret 0xfffc
0x0000000000099317 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009923e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000101021 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001002a5 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000016cc52 : cld ; inc dword ptr [rdi + rdx*4] ; cld ; push qword ptr [rsi + rdx*4 - 4] ; jmp rsp
0x000000000016c46e : cld ; inc dword ptr [rdx + 0x7f] ; cld ; call rdx
0x000000000016ce92 : cld ; inc dword ptr [rdx - 0x39] ; cld ; call rdx
0x000000000016ce82 : cld ; inc dword ptr [rdx] ; leave ; cld ; call qword ptr [rdx + 0x22fffcc8]
0x000000000016c40a : cld ; inc dword ptr [rsi + 0x7c] ; cld ; call rsi
0x000000000016c536 : cld ; inc dword ptr [rsi + rdi*2 - 4] ; call rsp
0x000000000016cdee : cld ; inc dword ptr [rsi - 0x35] ; cld ; call rsi
0x000000000016c8f6 : cld ; inc dword ptr [rsi - 0x5c] ; cld ; call rsi
0x000000000016ca22 : cld ; inc dword ptr [rsi - 4] ; call rsp
0x000000000016c8e6 : cld ; inc dword ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffca5]
0x000000000016c3fa : cld ; inc dword ptr [rsi] ; jle 0x16c404 ; call qword ptr [rsi + 0x26fffc7d]
0x000000000016c396 : cld ; inc eax ; cld ; call qword ptr [rax]
0x000000000016c342 : cld ; inc eax ; cmp bh, ah ; call qword ptr [rax]
0x000000000016d126 : cld ; inc esp ; ret 0xfffc
0x000000000016d741 : cld ; jmp 0x16d745
0x000000000016c80e : cld ; jmp qword ptr [rax + 0x10fffc71]
0x000000000016d1ce : cld ; jmp qword ptr [rax + 0x10fffcbd]
0x000000000016d1e6 : cld ; jmp qword ptr [rax + 0x10fffcc2]
0x000000000016c806 : cld ; jmp qword ptr [rax + 0x20fffc72]
0x000000000016c7fe : cld ; jmp qword ptr [rax + 0x20fffc73]
0x000000000016c7f6 : cld ; jmp qword ptr [rax + 0x20fffc74]
0x000000000016c7ee : cld ; jmp qword ptr [rax + 0x20fffc75]
0x000000000016c5e2 : cld ; jmp qword ptr [rax + 0x20fffc77]
0x000000000016d1c6 : cld ; jmp qword ptr [rax + 0x20fffcbe]
0x000000000016d1be : cld ; jmp qword ptr [rax + 0x20fffcbf]
0x000000000016d1b6 : cld ; jmp qword ptr [rax + 0x20fffcc0]
0x000000000016d1ae : cld ; jmp qword ptr [rax + 0x20fffcc1]
0x000000000016cfd6 : cld ; jmp qword ptr [rax + 0x30fffcc6]
0x000000000016d25e : cld ; jmp qword ptr [rax - 0x1f000362]
0x000000000016c35a : cld ; jmp qword ptr [rax - 0x1f0003be]
0x000000000016be76 : cld ; jmp qword ptr [rax]
0x000000000018032a : cld ; jmp qword ptr [rbx]
0x000000000016d062 : cld ; jmp qword ptr [rdx - 0x3d]
0x000000000016c45e : cld ; jmp qword ptr [rdx]
0x000000000016c402 : cld ; jmp qword ptr [rsi]
0x000000000016bf9e : cld ; jmp rax
0x000000000016c496 : cld ; jmp rdx
0x000000000016c3f2 : cld ; jmp rsi
0x000000000016ca4a : cld ; jmp rsp
0x0000000000149146 : cld ; jne 0x14937f ; xor eax, eax ; ret
0x000000000014b415 : cld ; jne 0x14b425 ; xor eax, eax ; ret
0x000000000014b414 : cld ; jne 0x14b426 ; xor eax, eax ; ret
0x000000000014b335 : cld ; jne 0x14b427 ; ret
0x000000000014b334 : cld ; jne 0x14b428 ; ret
0x00000000000c27b4 : cld ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000016d11e : cld ; lcall ptr [rsi + 0x44fffcbb] ; ret
0x000000000016d0de : cld ; ljmp ptr [rax + 0x4efffcbb] ; ret
0x000000000016cc9e : cld ; ljmp ptr [rdx - 0x6b] ; cld ; call qword ptr [rax]
0x000000000016d16a : cld ; ljmp ptr [rdx] ; ret 0xfffc
0x000000000016c71e : cld ; ljmp ptr [rsi + 0x54fffc6f] ; ja 0x16c72c ; call rsp
0x000000000016ce5a : cld ; ljmp ptr [rsi + rax*8 - 4] ; call qword ptr [rdx]
0x000000000012bc82 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012be85 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c085 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c285 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008e1de : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000126648 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012b8b6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001338f6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012ba96 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133876 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bc76 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001337f6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012b6d6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133976 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008cf41 : cld ; mov rax, rdi ; ret
0x0000000000043a5c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000015e0d1 : cld ; out dx, eax ; jmp qword ptr [rsi]
0x000000000016d1a6 : cld ; push qword ptr [rax + 0x20fffcc2] ; ret 0xfffc
0x000000000016c33e : cld ; push qword ptr [rax + 0x39] ; cld ; inc eax ; cmp bh, ah ; call qword ptr [rax]
0x000000000016c392 : cld ; push qword ptr [rax + 0x40] ; cld ; inc eax ; cld ; call qword ptr [rax]
0x000000000016c5d6 : cld ; push qword ptr [rax + 0x40fffc7a] ; jp 0x16c5e4 ; jmp rax
0x000000000016c3be : cld ; push qword ptr [rax + 0x40fffc7d] ; jge 0x16c3cc ; call rax
0x000000000016c8aa : cld ; push qword ptr [rax + 0x40fffca5] ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x000000000016cfba : cld ; push qword ptr [rax + 0x40fffcc9] ; leave ; cld ; call rax
0x000000000016d012 : cld ; push qword ptr [rax - 0x43] ; cld ; jmp rax
0x000000000016d216 : cld ; push qword ptr [rax - 0x44] ; cld ; jmp rax
0x000000000016cd0e : cld ; push qword ptr [rax - 0x69] ; cld ; jmp rax
0x000000000016bebe : cld ; push qword ptr [rax - 0xa] ; sti ; push qword ptr [rax] ; clc ; sti ; call qword ptr [rax]
0x000000000016bf9a : cld ; push qword ptr [rax] ; add bh, ah ; jmp rax
0x000000000016c22a : cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000016c2e2 : cld ; push qword ptr [rax] ; cld ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000016c20e : cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x000000000016c2fe : cld ; push qword ptr [rax] ; cld ; jmp rax
0x000000000016c27e : cld ; push qword ptr [rax] ; cld ; push rax ; cld ; call rax
0x000000000016c1b6 : cld ; push qword ptr [rax] ; paddb mm7, mm7 ; adc byte ptr [rax], 0xfc ; call rax
0x000000000016d1a2 : cld ; push qword ptr [rax] ; ret
0x00000000000c272b : cld ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000016c46a : cld ; push qword ptr [rdx + 0x42fffc7f] ; jg 0x16c478 ; call rdx
0x000000000016d09e : cld ; push qword ptr [rdx + 0x58fffcbb] ; ret
0x000000000016c406 : cld ; push qword ptr [rsi + 0x46fffc7c] ; jl 0x16c414 ; call rsi
0x000000000016c8f2 : cld ; push qword ptr [rsi + 0x46fffca4] ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call rsi
0x000000000016cdea : cld ; push qword ptr [rsi + 0x46fffccb] ; retf ; cld ; call rsi
0x000000000016c532 : cld ; push qword ptr [rsi + rdi*2 + 0x7e44fffc] ; cld ; call rsp
0x000000000016cc56 : cld ; push qword ptr [rsi + rdx*4 - 4] ; jmp rsp
0x000000000016c126 : cld ; push rax ; and ah, bh ; call rax
0x000000000016c0a6 : cld ; push rax ; and esp, edi ; call rax
0x000000000016c24e : cld ; push rax ; cld ; call rax
0x000000000016d1da : cld ; push rax ; mov ebx, 0xbb80fffc ; cld ; jmp qword ptr [rax]
0x000000000016cdb2 : cld ; push rax ; retf 0xfffc ; or dl, 0xfc ; call qword ptr [rax]
0x000000000016cd0a : cld ; push rax ; xchg eax, edi ; cld ; push qword ptr [rax - 0x69] ; cld ; jmp rax
0x000000000018815c : cld ; push rbp ; add dword ptr [rax], eax ; mov al, 0xfb ; cmc ; jmp qword ptr [rcx]
0x000000000016ef40 : cld ; push rcx ; int1 ; jmp rsp
0x000000000017825c : cld ; push rsi ; add byte ptr [rax], al ; loopne 0x17821e ; out dx, al ; jmp qword ptr [rcx]
0x0000000000043a62 : cld ; ret
0x000000000016e3f4 : cld ; ret 0
0x000000000016dfb8 : cld ; ret 0xffed
0x000000000016fa68 : cld ; ret 0xfff4
0x000000000017ec5c : cld ; rol byte ptr [rax], 0 ; push rax ; iretd ; sti ; call qword ptr [rax]
0x000000000016be8d : cld ; sti ; call qword ptr [rax]
0x000000000016be6d : cld ; sti ; jmp qword ptr [rax]
0x000000000016bead : cld ; sti ; push rax ; std ; sti ; jmp rax
0x000000000015a696 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000a768e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xa7691 ; ret
0x00000000000a6488 : cld ; xchg eax, ebx ; idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000003683d : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000a866d : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000a85ee : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000cbf68 : cli ; add al, 0x75 ; ret 0x8b48
0x00000000000b8119 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000000a88e8 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000a7d5f : cli ; add ch, byte ptr [rcx] ; ret 0x8d41
0x000000000003842e : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000038458 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000006b988 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000102a1e : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x0000000000098fa2 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000001022a1 : cli ; add dword ptr [rbp - 0x55], esi ; mov eax, 0xffffffff ; ret
0x0000000000098c4b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000008e1fc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a7d47 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000e1f30 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x0000000000161f9e : cli ; call qword ptr [rax]
0x000000000017ee2a : cli ; call qword ptr [rdi]
0x0000000000171e2a : cli ; call rsp
0x0000000000188071 : cli ; cmc ; jmp qword ptr [rcx]
0x00000000000dc53f : cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000364f1 : cli ; dec dword ptr [rax + 0xf] ; ret
0x000000000007b396 : cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dca92 : cli ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000016304e : cli ; dec eax ; lodsb al, byte ptr [rsi] ; cli ; dec eax ; lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x0000000000163052 : cli ; dec eax ; lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x00000000001720d2 : cli ; dec esp ; add al, byte ptr ds:[rax] ; pop rsp ; pop rdx ; cli ; jmp rsp
0x000000000017239a : cli ; dec esp ; add r8b, byte ptr [rax] ; in al, dx ; test edx, edi ; jmp rsp
0x000000000016348e : cli ; dec esp ; iretd ; cli ; jmp rsp
0x0000000000172202 : cli ; inc dword ptr [rbp + rax*2 + 0x72dc0002] ; cli ; jmp rsp
0x000000000017216a : cli ; inc dword ptr [rcx + rax*2 + 0x62dc0002] ; cli ; call rsp
0x0000000000171fb2 : cli ; inc dword ptr [rdi + rsi + 0x44fc0002] ; cli ; call rsp
0x000000000012660b : cli ; jg 0x12661e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000126afb : cli ; jg 0x126b0e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000126e9b : cli ; jg 0x126eae ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014b531 : cli ; jg 0x14b543 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000008e1b7 : cli ; jg 0x8e1ca ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000008e90a : cli ; jg 0x8e91d ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000008f057 : cli ; jg 0x8f06a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000098c16 : cli ; jg 0x98c28 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000161f9a : cli ; jmp qword ptr [rax]
0x0000000000176bf2 : cli ; jmp qword ptr [rcx]
0x000000000017ee12 : cli ; jmp qword ptr [rdi]
0x0000000000171db2 : cli ; jmp qword ptr [rdx + rbp + 2]
0x00000000000ab96d : cli ; jmp rdx
0x0000000000163492 : cli ; jmp rsp
0x00000000000b9850 : cli ; jnp 0xb9866 ; xchg eax, esp ; ret 0xb60f
0x0000000000172192 : cli ; lcall ptr [rdx + rax*2 + 0x64bc0002] ; cli ; jmp rsp
0x0000000000171ee2 : cli ; lcall ptr [rdx + rsi + 0x257c0002] ; cli ; jmp rsp
0x00000000001727ba : cli ; lcall ptr [rsp + rdi*2 - 0x1e3ffff] ; cli ; jmp rsp
0x000000000017272a : cli ; ljmp ptr [rbx - 0xa53fffe] ; cli ; call rsp
0x00000000000266c8 : cli ; loopne 0x266e3 ; test byte ptr [rax - 0x77000000], dh ; ret 0xe283
0x000000000012c088 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016d19c : cli ; mov ebx, 0xbb8afffc ; cld ; push qword ptr [rax] ; ret
0x000000000008cf27 : cli ; mov rax, rdi ; ret
0x000000000005c6e0 : cli ; mov rsi, qword ptr [rip + 0x33e888] ; call rax
0x00000000000eedad : cli ; mov rsi, r13 ; call r14
0x00000000000fb8a0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000081738 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000011ea46 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a7706 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000038e98 : cli ; or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x000000000015e239 : cli ; out dx, eax ; dec dword ptr [rbx] ; out dx, al ; out dx, eax ; jmp rsp
0x000000000015e2b9 : cli ; out dx, eax ; dec dword ptr [rdi - 9] ; out dx, eax ; jmp rsp
0x000000000015e291 : cli ; out dx, eax ; jmp qword ptr [rdx - 0x1b001018]
0x000000000015e259 : cli ; out dx, eax ; jmp qword ptr [rsi - 0x1b001010]
0x000000000015e189 : cli ; out dx, eax ; jmp rsp
0x000000000015cb01 : cli ; push 0x6e ; ja 0x15ca8e ; ret 0x48f
0x0000000000163076 : cli ; push qword ptr [rax + 0x50fffaac] ; stosd dword ptr [rdi], eax ; cli ; call qword ptr [rax]
0x00000000001630a2 : cli ; push qword ptr [rax] ; iretd ; cli ; call qword ptr [rax]
0x0000000000161f92 : cli ; push qword ptr [rax] ; jl 0x161f9a ; push rax ; jnp 0x161f9e ; jmp qword ptr [rax]
0x000000000016308e : cli ; push qword ptr [rax] ; sar dl, 1 ; call qword ptr [rax]
0x000000000016308a : cli ; push qword ptr [rax] ; sar dl, 1 ; push qword ptr [rax] ; sar dl, 1 ; call qword ptr [rax]
0x00000000001724da : cli ; push qword ptr [rsi + rdx*2 - 0x45d3fffe] ; cli ; jmp rsp
0x000000000017274a : cli ; push qword ptr [rsp - 0x933fffe] ; cli ; call rsp
0x0000000000161f96 : cli ; push rax ; jnp 0x161f9a ; jmp qword ptr [rax]
0x000000000017250a : cli ; push rsp ; push rdi ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x000000000002b51f : cli ; ret
0x00000000000a860c : cli ; ret 0x10
0x000000000015b5a5 : cli ; ret 0xac65
0x00000000000bf63f : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000f37bb : cli ; setae al ; ret
0x00000000000fdf8a : cli ; std ; jbe 0xfdf94 ; ret
0x000000000016bea9 : cli ; sti ; call qword ptr [rax]
0x000000000016be69 : cli ; sti ; inc dword ptr [rax - 4] ; sti ; jmp qword ptr [rax]
0x000000000016be89 : cli ; sti ; push qword ptr [rax] ; cld ; sti ; call qword ptr [rax]
0x000000000016bec9 : cli ; sti ; push rax ; sti ; sti ; call rax
0x000000000007e369 : cli ; test rdx, rdx ; je 0x7e389 ; bsf rax, rdx ; ret
0x000000000007e538 : cli ; test rdx, rdx ; je 0x7e569 ; bsf rax, rdx ; ret
0x000000000015a1ea : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000400ad : cmc ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x0000000000193966 : cmc ; add al, byte ptr [rax] ; ret
0x0000000000193986 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x00000000000cd8ef : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x11e9
0x0000000000122fb8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c51a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016017e : cmc ; call qword ptr [rax]
0x00000000001860da : cmc ; call qword ptr [rbx]
0x0000000000160426 : cmc ; call qword ptr [rcx]
0x0000000000187092 : cmc ; call qword ptr [rdx]
0x000000000016010a : cmc ; call qword ptr [rsi + 0x3bfff51f]
0x00000000001600da : cmc ; call qword ptr [rsi - 0x2e000ae1]
0x0000000000160a0a : cmc ; call qword ptr [rsi]
0x00000000001603a2 : cmc ; call rax
0x0000000000160656 : cmc ; call rbx
0x00000000001600de : cmc ; call rcx
0x000000000018486a : cmc ; call rdi
0x000000000018615a : cmc ; call rdx
0x0000000000160112 : cmc ; call rsi
0x000000000016fbaa : cmc ; call rsp
0x0000000000172731 : cmc ; cli ; call rsp
0x00000000001603de : cmc ; dec dword ptr [rax + 0x10fff589] ; mov ebp, esi ; call qword ptr [rax]
0x00000000001134e0 : cmc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; sahf ; ret
0x00000000000c2775 : cmc ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000f5434 : cmc ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000160176 : cmc ; dec dword ptr [rsi - 0x52000ae4] ; sbb al, 0xf5 ; call qword ptr [rax]
0x0000000000160a06 : cmc ; dec esp ; fcomi st(5) ; call qword ptr [rsi]
0x0000000000160a02 : cmc ; dec esp ; fcomi st(5) ; dec esp ; fcomi st(5) ; call qword ptr [rsi]
0x00000000000c1864 : cmc ; inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x00000000001603ae : cmc ; inc dword ptr [rax] ; mov ebp, esi ; inc dword ptr [rax] ; mov ebp, esi ; jmp rax
0x00000000001603b2 : cmc ; inc dword ptr [rax] ; mov ebp, esi ; jmp rax
0x0000000000160546 : cmc ; inc dword ptr [rdi] ; nop ; cmc ; call qword ptr [rcx]
0x000000000016035e : cmc ; inc dword ptr [rdx] ; sbb esi, ebp ; push rbx ; sbb dh, ch ; jmp qword ptr [rax]
0x0000000000160592 : cmc ; inc edi ; nop ; cmc ; call rcx
0x0000000000101532 : cmc ; je 0x10152c ; pop rbx ; ret
0x0000000000160366 : cmc ; jmp qword ptr [rax]
0x000000000016030a : cmc ; jmp qword ptr [rbx - 0x1e000ae5]
0x00000000001865ca : cmc ; jmp qword ptr [rbx]
0x000000000016036a : cmc ; jmp qword ptr [rcx]
0x000000000016048a : cmc ; jmp qword ptr [rdx]
0x000000000016038e : cmc ; jmp qword ptr [rsi]
0x0000000000160196 : cmc ; jmp rax
0x000000000016030e : cmc ; jmp rcx
0x000000000016059e : cmc ; jmp rdi
0x00000000001867ea : cmc ; jmp rdx
0x0000000000160afe : cmc ; jmp rsp
0x00000000000f7e95 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000016fba2 : cmc ; lcall ptr [rbx + rbx*2 + 1] ; add byte ptr [rax + rcx*2], bl ; cmc ; call rsp
0x0000000000160af6 : cmc ; ljmp ptr [rax] ; cmc ; push qword ptr [rsi + rbx*8] ; cmc ; jmp rsp
0x000000000015cf29 : cmc ; mov ch, 0xab ; ret
0x000000000013387a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012b90e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000cb02b : cmc ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x000000000014a923 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000015e0dd : cmc ; out dx, eax ; call qword ptr [rax]
0x000000000015e0e5 : cmc ; out dx, eax ; jmp rax
0x000000000016e581 : cmc ; out dx, eax ; jmp rsp
0x0000000000066461 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000159dd7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006f96d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016039e : cmc ; push qword ptr [rax] ; mov ebp, esi ; call rax
0x000000000016fcd2 : cmc ; push qword ptr [rdi + 1] ; add ah, cl ; lodsd eax, dword ptr [rsi] ; cmc ; call rsp
0x0000000000160652 : cmc ; push qword ptr [rdx - 0x74] ; cmc ; call rbx
0x000000000016064e : cmc ; push qword ptr [rdx - 0x74] ; cmc ; push qword ptr [rdx - 0x74] ; cmc ; call rbx
0x0000000000160306 : cmc ; push qword ptr [rdx] ; sbb eax, 0x1ba3fff5 ; cmc ; jmp rcx
0x0000000000160afa : cmc ; push qword ptr [rsi + rbx*8] ; cmc ; jmp rsp
0x00000000001603ba : cmc ; push rax ; mov ch, dh ; jmp rax
0x0000000000160362 : cmc ; push rbx ; sbb dh, ch ; jmp qword ptr [rax]
0x00000000000e1197 : cmc ; sar cl, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000016bf61 : cmc ; sti ; call qword ptr [rax]
0x000000000014a927 : cmc ; sub eax, edx ; ret
0x000000000015c565 : cmc ; xlatb ; ret 0x4e27
0x00000000000d0a01 : cmova eax, edx ; ret
0x00000000000a8741 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000073c29 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000007dfa7 : cmovae eax, ecx ; ret
0x0000000000043ebd : cmovae eax, edi ; ret
0x00000000000e8e6c : cmovae eax, esi ; ret
0x00000000000038a7 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x0000000000073c28 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000043ebc : cmovae rax, rdi ; ret
0x00000000000e8e6b : cmovae rax, rsi ; ret
0x000000000003677f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000637c4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000d9e1b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000089c99 : cmove eax, ebx ; pop rbx ; ret
0x000000000006c721 : cmove eax, ecx ; ret
0x0000000000115a4a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000082278 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000a8482 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000378fa : cmove eax, edx ; add rsp, 8 ; ret
0x000000000002befb : cmove eax, edx ; ret
0x00000000000c1b71 : cmove eax, esi ; ret
0x000000000008cff1 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x000000000006c720 : cmove r8, rcx ; ret
0x00000000000d9e1a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000089c98 : cmove rax, rbx ; pop rbx ; ret
0x000000000009ae54 : cmove rax, rcx ; ret
0x0000000000115a49 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000082289 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000a8481 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x000000000007ac52 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002befa : cmove rax, rdx ; ret
0x0000000000069cab : cmovg eax, ecx ; test rdx, rdx ; jne 0x69ca9 ; ret
0x000000000007207b : cmovg eax, ecx ; test rdx, rdx ; jne 0x72079 ; ret
0x00000000000a7f18 : cmovge eax, edx ; pop rbx ; ret
0x00000000000a7f17 : cmovge rax, rdx ; pop rbx ; ret
0x00000000000b5d84 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a7ef7 : cmovle eax, edx ; pop rbx ; ret
0x00000000000a7ef6 : cmovle rax, rdx ; pop rbx ; ret
0x00000000001035e3 : cmovne eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000070e73 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000364f4 : cmovne eax, ebx ; pop rbx ; ret
0x0000000000037918 : cmovne eax, ecx ; add rsp, 8 ; ret
0x00000000000eef76 : cmovne eax, ecx ; ret
0x00000000000f7dc5 : cmovne eax, edi ; ret
0x0000000000037932 : cmovne eax, edx ; add rsp, 8 ; ret
0x000000000007c653 : cmovne eax, edx ; ret
0x00000000000eefac : cmovne eax, esi ; ret
0x00000000000364f3 : cmovne rax, rbx ; pop rbx ; ret
0x0000000000079361 : cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000119b85 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000007c652 : cmovne rax, rdx ; ret
0x000000000010bc47 : cmovno eax, dword ptr [rbx - 0x76b3c01c] ; ret 0x894c
0x00000000000eece2 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000eece1 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000105a40 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x00000000000484bb : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x00000000000525c4 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret 0x8b48
0x000000000008cf63 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x00000000000361e6 : cmovs eax, edx ; pop rbx ; ret
0x000000000002369c : cmovs eax, edx ; ret
0x00000000000753f6 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000010bc6a : cmovs ecx, dword ptr [rcx] ; ret 0x894c
0x0000000000099296 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x000000000016c37d : cmp ah, bh ; jmp rax
0x00000000001232b3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000123128 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000012318f : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000c7393 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x3c], cl ; ret 0x448b
0x000000000018eea0 : cmp al, 0 ; add byte ptr [rax], al ; ret
0x00000000000c1cd8 : cmp al, 0x11 ; je 0xc1ce6 ; xor eax, eax ; ret
0x000000000018449c : cmp al, 0x19 ; add dword ptr [rax], eax ; rol bl, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000000e249a : cmp al, 0x23 ; jne 0xe24b3 ; jmp 0xe24c8
0x0000000000034d87 : cmp al, 0x24 ; call r14
0x000000000011c7cc : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x0000000000106065 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000089975 : cmp al, 0x3d ; jne 0x899af ; mov rax, rdi ; pop rbx ; ret
0x000000000018719c : cmp al, 0x46 ; add dword ptr [rax], eax ; add ch, al ; cmc ; jmp qword ptr [rcx]
0x000000000015b1e0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000018809c : cmp al, 0x55 ; add dword ptr [rax], eax ; adc bl, bh ; cmc ; jmp qword ptr [rcx]
0x000000000016e168 : cmp al, 0x66 ; out dx, eax ; jmp rsp
0x00000000001710b0 : cmp al, 0x67 ; clc ; jmp rsp
0x000000000017b09c : cmp al, 0x85 ; add byte ptr [rax], al ; nop ; push rbp ; out dx, eax ; call qword ptr [rax]
0x0000000000117abf : cmp al, 0x8b ; or byte ptr [rcx], dil ; ret 0x2175
0x00000000001719b0 : cmp al, 0x92 ; stc ; jmp rsp
0x000000000016f5a8 : cmp al, 0xb1 ; call rsp
0x0000000000171b68 : cmp al, 0xbd ; stc ; jmp rsp
0x000000000016e3a8 : cmp al, 0xc0 ; out dx, eax ; call rsp
0x000000000016fa98 : cmp al, 0xc8 ; hlt ; call rsp
0x000000000018399c : cmp al, 0xe ; add dword ptr [rax], eax ; ret 0xffe9
0x0000000000172a10 : cmp al, 0xe3 ; std ; call rsp
0x0000000000171608 : cmp al, 0xe8 ; clc ; jmp rsp
0x000000000016d3a9 : cmp al, 0xeb ; call rsp
0x00000000001590b5 : cmp al, 0xed ; call rcx
0x0000000000172af8 : cmp al, 0xee ; std ; jmp rsp
0x000000000015e1f4 : cmp al, 0xfb ; out dx, eax ; jmp rsp
0x000000000016c389 : cmp al, 0xfc ; call rax
0x000000000018682d : cmp al, 1 ; add byte ptr [rax - 0x5e], al ; cmc ; jmp qword ptr [rcx]
0x0000000000186845 : cmp al, 1 ; add byte ptr [rax - 0x5e], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001867e5 : cmp al, 1 ; add byte ptr [rax - 0x5f], cl ; cmc ; jmp rdx
0x000000000018677d : cmp al, 1 ; add byte ptr [rax - 0x61], dl ; cmc ; jmp qword ptr [rcx]
0x000000000009c99e : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000149123 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000094f30 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x0000000000192349 : cmp al, bh ; call qword ptr [rdx]
0x0000000000192391 : cmp al, bh ; jmp qword ptr [rcx]
0x00000000000694ab : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000001865c5 : cmp al, byte ptr [rcx] ; add al, cl ; pushfq ; cmc ; jmp qword ptr [rbx]
0x0000000000186625 : cmp al, byte ptr [rcx] ; add byte ptr [rax], ch ; popfq ; cmc ; jmp qword ptr [rcx]
0x00000000000d58a9 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rdi - 0x76000003], bl ; ret 0xdb31
0x000000000014ade6 : cmp al, byte ptr [rsi - 1] ; jne 0x14ae0c ; xor eax, eax ; ret
0x00000000001865c4 : cmp al, byte ptr fs:[rcx] ; add al, cl ; pushfq ; cmc ; jmp qword ptr [rbx]
0x00000000000e571d : cmp al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x000000000016cf9c : cmp al, dh ; cld ; jmp rax
0x000000000017d871 : cmp al, dh ; jmp qword ptr [rcx]
0x0000000000081576 : cmp al, dh ; ret
0x0000000000081575 : cmp al, r14b ; ret
0x0000000000032cf6 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x000000000016c345 : cmp bh, ah ; call qword ptr [rax]
0x00000000000f04ee : cmp bh, byte ptr [rax] ; je 0xf051e ; mov rdx, rax ; jmp 0xf050b
0x00000000000eefaa : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000000eef74 : cmp bh, dl ; cmovne eax, ecx ; ret
0x0000000000188130 : cmp bl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001880e8 : cmp bl, bh ; cmc ; jmp qword ptr [rcx]
0x000000000016d391 : cmp bl, ch ; call rsp
0x0000000000087733 : cmp bl, dh ; ret
0x000000000016d390 : cmp bl, r13b ; call rsp
0x000000000009a286 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000006b62b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000efcaa : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x00000000000f1b22 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000cdb13 : cmp byte ptr [r8 - 0x77], r9b ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000ce189 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000458de : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000821af : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000110c06 : cmp byte ptr [rax + 1], bh ; ret
0x00000000000815b7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000ca6f1 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000ca6f0 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000cf8f3 : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000006b62c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000f1b23 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000cdb14 : cmp byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000108550 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000010a06e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000010f7bc : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000000312ee : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000cd813 : cmp byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x00000000000e24f0 : cmp byte ptr [rax - 0x80], al ; jmp qword ptr [rbx]
0x00000000001456f8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000815a6 : cmp byte ptr [rax], ah ; ret
0x000000000017637d : cmp byte ptr [rax], al ; add byte ptr [rax + 0xb], al ; in al, dx ; call qword ptr [rdx]
0x0000000000176365 : cmp byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; in al, dx ; call qword ptr [rax]
0x0000000000072583 : cmp byte ptr [rax], al ; je 0x72594 ; ret
0x000000000001f90c : cmp byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000001132f9 : cmp byte ptr [rax], bl ; je 0x113304 ; ret
0x00000000000ce18a : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c650 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000008d746 : cmp byte ptr [rax], dh ; ret
0x0000000000081596 : cmp byte ptr [rax], dl ; ret
0x0000000000081595 : cmp byte ptr [rax], r10b ; ret
0x00000000000815a5 : cmp byte ptr [rax], r12b ; ret
0x000000000008d745 : cmp byte ptr [rax], r14b ; ret
0x00000000001763ac : cmp byte ptr [rax], r8b ; add byte ptr [rax + 0xb], al ; in al, dx ; call qword ptr [rdx]
0x000000000007c64f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000009a28a : cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000009a289 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000e639e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000002b519 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000b8fba : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c1866 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xc1877 ; pop rbx ; ret
0x00000000000cc6dc : cmp byte ptr [rbx - 0x6bf00003], al ; ret 0xb60f
0x000000000009a287 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000160398 : cmp byte ptr [rbx], bl ; cmc ; jmp rcx
0x00000000000e0bd6 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x0000000000038954 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00000000001863b5 : cmp byte ptr [rcx], al ; add byte ptr [rax], ch ; cwde ; cmc ; jmp qword ptr [rcx]
0x00000000001456f9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x0000000000096344 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002054 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000182268 : cmp byte ptr [rdi - 0xd], bl ; jmp qword ptr [rcx]
0x00000000000361b8 : cmp byte ptr [rdi], 0 ; jne 0x361c6 ; pop rbx ; ret
0x000000000003d6ae : cmp byte ptr [rdi], cl ; test byte ptr [rax], dh ; or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x00000000000c2f84 : cmp byte ptr [rdi], cl ; test byte ptr [rip - 0x9ffffff], dl ; ret
0x00000000001479cd : cmp byte ptr [rdi], dl ; ret
0x00000000001484e0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000001484c9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001484b2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000146f6e : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000181f38 : cmp byte ptr [rdx - 0xd], dl ; jmp qword ptr [rcx]
0x0000000000171fdd : cmp byte ptr [rdx], al ; add byte ptr [rcx + rcx*2], cl ; cli ; call rsp
0x00000000000c5e86 : cmp byte ptr [rdx], cl ; call 0xc20a4
0x00000000000c01b0 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xc01c8 ; xor eax, eax ; ret
0x00000000000df612 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x00000000000f04ef : cmp byte ptr [rsi + 0x48], dh ; mov edx, eax ; jmp 0xf050a
0x0000000000123192 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000010f418 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000107253 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000001f90a : cmp cl, byte ptr [rdx] ; cmp byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000c4b9e : cmp cl, byte ptr [rsi] ; je 0xc4b3b ; pop rbx ; ret
0x00000000000efb72 : cmp cl, ch ; ret
0x0000000000081da2 : cmp cl, dl ; add byte ptr [rax], al ; ret
0x00000000000d0a39 : cmp cx, 0xa ; mov eax, edx ; je 0xd0a9a ; ret
0x00000000000efcfd : cmp dh, al ; add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000efcde : cmp dh, al ; add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000eefe3 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000361b5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000008f8d5 : cmp dh, dh ; ret 0x7501
0x00000000000ef00b : cmp dh, dl ; cmovne eax, ecx ; ret
0x00000000000f04ed : cmp dil, byte ptr [rax] ; je 0xf051f ; mov rdx, rax ; jmp 0xf050c
0x00000000000eefa9 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000eef73 : cmp dil, dl ; cmovne eax, ecx ; ret
0x000000000014b570 : cmp dl, 1 ; jb 0x14b57e ; mov byte ptr [rdi], cl ; ret
0x000000000008e1fb : cmp dl, 1 ; jb 0x8e20d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008e94e : cmp dl, 1 ; jb 0x8e960 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008f09b : cmp dl, 1 ; jb 0x8f0ad ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000098c4a : cmp dl, 1 ; jb 0x98c58 ; mov byte ptr [rdi], cl ; ret
0x000000000007df62 : cmp dl, 3 ; je 0x7df8f ; movsx eax, dl ; ret
0x000000000007df62 : cmp dl, 3 ; je 0x7df90 ; movsx eax, dl ; ret
0x000000000007df61 : cmp dl, 3 ; je 0x7df91 ; movsx eax, dl ; ret
0x0000000000002b86 : cmp dl, byte ptr [rdi] ; ret
0x000000000001ead9 : cmp dl, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x000000000001eac1 : cmp dl, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x00000000001132f8 : cmp dword ptr [rax], 0x18 ; je 0x113305 ; ret
0x00000000001764f5 : cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], cl ; in al, dx ; call qword ptr [rdx]
0x00000000001764dd : cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], dl ; in al, dx ; call qword ptr [rax]
0x00000000000c0882 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xc0819
0x00000000001333b8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000186485 : cmp dword ptr [rcx], eax ; add byte ptr [rax], bh ; cdq ; cmc ; jmp qword ptr [rcx]
0x000000000018646d : cmp dword ptr [rcx], eax ; add byte ptr [rax], dh ; cdq ; cmc ; call qword ptr [rsi]
0x00000000000f0071 : cmp dword ptr [rdi + 0x10], 0 ; je 0xf0088 ; xor eax, eax ; ret
0x000000000010551d : cmp dword ptr [rdi + 0x10], 2 ; je 0x10552e ; ret
0x000000000006ebc4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000072581 : cmp dword ptr [rdi + 0x38], 0 ; je 0x72596 ; ret
0x00000000000a7660 : cmp dword ptr [rdi + 8], edx ; jne 0xa7643 ; ret
0x00000000000f3758 : cmp dword ptr [rdi], 0 ; je 0xf376e ; ret
0x00000000000f475f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000007bbd1 : cmp dword ptr [rip + 0x321ce0], 0 ; je 0x7bbe9 ; ret
0x000000000010ef90 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x10efa8 ; xor eax, eax ; ret
0x000000000006a188 : cmp dword ptr [rsi + 0x30], 0 ; je 0x6a196 ; ret
0x00000000000e435d : cmp dword ptr [rsi], 0 ; je 0xe436e ; pop rbx ; ret
0x0000000000003836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000dab33 : cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x00000000001132f7 : cmp dword ptr fs:[rax], 0x18 ; je 0x113306 ; ret
0x00000000000dea9d : cmp eax, -0x5f ; je 0xdeac0 ; neg eax ; pop rbx ; ret
0x0000000000033e54 : cmp eax, -0x80 ; jne 0x33e47 ; xor eax, eax ; ret
0x0000000000033ea4 : cmp eax, -0x80 ; jne 0x33e97 ; xor eax, eax ; ret
0x0000000000101530 : cmp eax, -0xb ; je 0x10152e ; pop rbx ; ret
0x000000000011bc4e : cmp eax, -1 ; je 0x11bc69 ; add rsp, 8 ; ret
0x000000000006a1a3 : cmp eax, -1 ; je 0x6a1b6 ; pop rbx ; ret
0x000000000006a69a : cmp eax, -1 ; je 0x6a6ab ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006a6de : cmp eax, -1 ; je 0x6a6ef ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000725b4 : cmp eax, -1 ; je 0x725c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072b77 : cmp eax, -1 ; je 0x72b88 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000042234 : cmp eax, -1 ; jne 0x42229 ; mov rax, rdx ; ret
0x000000000006bfa9 : cmp eax, -1 ; jne 0x6bfb6 ; pop rbx ; ret
0x0000000000072bcf : cmp eax, -1 ; jne 0x72bc0 ; pop rbx ; ret
0x00000000000f4770 : cmp eax, -1 ; jne 0xf476f ; xor eax, eax ; leave ; ret
0x000000000007425d : cmp eax, 0x1000 ; je 0x74279 ; xor eax, eax ; ret
0x0000000000003ba7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000fec32 : cmp eax, 0x2a0b25 ; call rax
0x00000000000e331b : cmp eax, 0x2b7ef0 ; ret
0x0000000000078818 : cmp eax, 0x323303 ; call 0x74ac7
0x00000000000b8abb : cmp eax, 0x7275 ; jne 0xb8aa4 ; xor eax, eax ; ret
0x0000000000089976 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00000000000b3a0a : cmp eax, 0x89e18948 ; ret 0xf631
0x00000000001101df : cmp eax, 0x8b000026 ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000378e2 : cmp eax, 0x8c48348 ; ret
0x00000000000c61a8 : cmp eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000042962 : cmp eax, 0xc5834900 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000a3c8a : cmp eax, 0xff ; cmove eax, edx ; ret
0x00000000000331f9 : cmp eax, 0xfffff000 ; ja 0x33228 ; ret
0x0000000000033501 : cmp eax, 0xfffff000 ; ja 0x33518 ; ret
0x000000000003356d : cmp eax, 0xfffff000 ; ja 0x33588 ; ret
0x00000000000335b7 : cmp eax, 0xfffff000 ; ja 0x335c7 ; ret
0x00000000000a84b8 : cmp eax, 0xfffff000 ; ja 0xa84d0 ; ret
0x00000000000b3418 : cmp eax, 0xfffff000 ; ja 0xb3430 ; pop rbx ; ret
0x00000000000b4602 : cmp eax, 0xfffff000 ; ja 0xb4617 ; ret
0x00000000000b6f51 : cmp eax, 0xfffff000 ; ja 0xb6f67 ; ret
0x00000000000b6feb : cmp eax, 0xfffff000 ; ja 0xb6fff ; ret
0x00000000000b70dc : cmp eax, 0xfffff000 ; ja 0xb70ef ; ret
0x00000000000b81e4 : cmp eax, 0xfffff000 ; ja 0xb81f7 ; ret
0x00000000000b8254 : cmp eax, 0xfffff000 ; ja 0xb8267 ; ret
0x00000000000b84a8 : cmp eax, 0xfffff000 ; ja 0xb84b7 ; ret
0x00000000000b8528 : cmp eax, 0xfffff000 ; ja 0xb8537 ; ret
0x00000000000da0c6 : cmp eax, 0xfffff000 ; ja 0xda0d8 ; ret
0x00000000000da115 : cmp eax, 0xfffff000 ; ja 0xda128 ; ret
0x00000000000da166 : cmp eax, 0xfffff000 ; ja 0xda178 ; ret
0x00000000000da1be : cmp eax, 0xfffff000 ; ja 0xda1d8 ; ret
0x00000000000da222 : cmp eax, 0xfffff000 ; ja 0xda238 ; ret
0x00000000000da27b : cmp eax, 0xfffff000 ; ja 0xda290 ; ret
0x00000000000da45a : cmp eax, 0xfffff000 ; ja 0xda470 ; ret
0x00000000000dab03 : cmp eax, 0xfffff000 ; ja 0xdab48 ; ret
0x00000000000deb13 : cmp eax, 0xfffff000 ; ja 0xdeb28 ; ret
0x00000000000deb67 : cmp eax, 0xfffff000 ; ja 0xdeb78 ; ret
0x00000000000df2bb : cmp eax, 0xfffff000 ; ja 0xdf2cf ; ret
0x00000000000df537 : cmp eax, 0xfffff000 ; ja 0xdf568 ; ret
0x00000000000df6af : cmp eax, 0xfffff000 ; ja 0xdf6c7 ; ret
0x00000000000dfecb : cmp eax, 0xfffff000 ; ja 0xdfedf ; ret
0x00000000000dff7b : cmp eax, 0xfffff000 ; ja 0xdff8f ; ret
0x00000000000e0026 : cmp eax, 0xfffff000 ; ja 0xe0037 ; ret
0x00000000000e0096 : cmp eax, 0xfffff000 ; ja 0xe00a7 ; ret
0x00000000000e0117 : cmp eax, 0xfffff000 ; ja 0xe0127 ; ret
0x00000000000e01c7 : cmp eax, 0xfffff000 ; ja 0xe01d7 ; ret
0x00000000000e0717 : cmp eax, 0xfffff000 ; ja 0xe0728 ; ret
0x00000000000e1ba8 : cmp eax, 0xfffff000 ; ja 0xe1bc0 ; ret
0x00000000000e1c3c : cmp eax, 0xfffff000 ; ja 0xe1c50 ; ret
0x00000000000e1cdc : cmp eax, 0xfffff000 ; ja 0xe1cf0 ; ret
0x00000000000e1d30 : cmp eax, 0xfffff000 ; ja 0xe1d48 ; ret
0x00000000000e5abf : cmp eax, 0xfffff000 ; ja 0xe5ad8 ; ret
0x00000000000e776f : cmp eax, 0xfffff000 ; ja 0xe7788 ; ret
0x00000000000e79b1 : cmp eax, 0xfffff000 ; ja 0xe79c7 ; ret
0x00000000000e7a63 : cmp eax, 0xfffff000 ; ja 0xe7a78 ; ret
0x00000000000e7a9d : cmp eax, 0xfffff000 ; ja 0xe7ab8 ; ret
0x00000000000e864e : cmp eax, 0xfffff000 ; ja 0xe8667 ; ret
0x00000000000e87ce : cmp eax, 0xfffff000 ; ja 0xe87e7 ; ret
0x00000000000e8c28 : cmp eax, 0xfffff000 ; ja 0xe8c37 ; ret
0x00000000000e8cca : cmp eax, 0xfffff000 ; ja 0xe8cdf ; ret
0x00000000000e8d7a : cmp eax, 0xfffff000 ; ja 0xe8d8f ; ret
0x00000000000f442b : cmp eax, 0xfffff000 ; ja 0xf4440 ; ret
0x00000000000f44d8 : cmp eax, 0xfffff000 ; ja 0xf4502 ; ret
0x00000000000f613d : cmp eax, 0xfffff000 ; ja 0xf6158 ; ret
0x00000000000f61ed : cmp eax, 0xfffff000 ; ja 0xf6208 ; ret
0x00000000001199cb : cmp eax, 0xfffff001 ; jae 0x1199da ; ret
0x0000000000119a1b : cmp eax, 0xfffff001 ; jae 0x119a2a ; ret
0x0000000000033538 : cmp eax, 0xfffff001 ; jae 0x33547 ; ret
0x0000000000033a18 : cmp eax, 0xfffff001 ; jae 0x33a27 ; ret
0x0000000000041a12 : cmp eax, 0xfffff001 ; jae 0x41a25 ; xor eax, eax ; ret
0x0000000000063848 : cmp eax, 0xfffff001 ; jae 0x63857 ; ret
0x000000000006387b : cmp eax, 0xfffff001 ; jae 0x6388a ; ret
0x00000000000a8598 : cmp eax, 0xfffff001 ; jae 0xa85a7 ; ret
0x00000000000aae08 : cmp eax, 0xfffff001 ; jae 0xaae17 ; ret
0x00000000000aae38 : cmp eax, 0xfffff001 ; jae 0xaae47 ; ret
0x00000000000b6ea8 : cmp eax, 0xfffff001 ; jae 0xb6eb7 ; ret
0x00000000000b709b : cmp eax, 0xfffff001 ; jae 0xb70aa ; ret
0x00000000000b7178 : cmp eax, 0xfffff001 ; jae 0xb7187 ; ret
0x00000000000b7201 : cmp eax, 0xfffff001 ; jae 0xb7240 ; ret
0x00000000000b7261 : cmp eax, 0xfffff001 ; jae 0xb72a0 ; ret
0x00000000000b7612 : cmp eax, 0xfffff001 ; jae 0xb7621 ; ret
0x00000000000b7698 : cmp eax, 0xfffff001 ; jae 0xb76a7 ; ret
0x00000000000b81a8 : cmp eax, 0xfffff001 ; jae 0xb81b7 ; ret
0x00000000000b8348 : cmp eax, 0xfffff001 ; jae 0xb8357 ; ret
0x00000000000b8378 : cmp eax, 0xfffff001 ; jae 0xb8387 ; ret
0x00000000000b83d8 : cmp eax, 0xfffff001 ; jae 0xb83e7 ; ret
0x00000000000b8408 : cmp eax, 0xfffff001 ; jae 0xb8417 ; ret
0x00000000000b8438 : cmp eax, 0xfffff001 ; jae 0xb8447 ; ret
0x00000000000b8468 : cmp eax, 0xfffff001 ; jae 0xb8477 ; ret
0x00000000000d0788 : cmp eax, 0xfffff001 ; jae 0xd0797 ; ret
0x00000000000d07b8 : cmp eax, 0xfffff001 ; jae 0xd07c7 ; ret
0x00000000000d07e8 : cmp eax, 0xfffff001 ; jae 0xd07f7 ; ret
0x00000000000d0818 : cmp eax, 0xfffff001 ; jae 0xd0827 ; ret
0x00000000000d0848 : cmp eax, 0xfffff001 ; jae 0xd0857 ; ret
0x00000000000d0878 : cmp eax, 0xfffff001 ; jae 0xd0887 ; ret
0x00000000000d08a8 : cmp eax, 0xfffff001 ; jae 0xd08b7 ; ret
0x00000000000d08d8 : cmp eax, 0xfffff001 ; jae 0xd08e7 ; ret
0x00000000000d9034 : cmp eax, 0xfffff001 ; jae 0xd9076 ; ret
0x00000000000d9094 : cmp eax, 0xfffff001 ; jae 0xd90d6 ; ret
0x00000000000da028 : cmp eax, 0xfffff001 ; jae 0xda037 ; ret
0x00000000000da2c8 : cmp eax, 0xfffff001 ; jae 0xda2d7 ; ret
0x00000000000da2f8 : cmp eax, 0xfffff001 ; jae 0xda307 ; ret
0x00000000000da3c8 : cmp eax, 0xfffff001 ; jae 0xda3d7 ; ret
0x00000000000da3f8 : cmp eax, 0xfffff001 ; jae 0xda407 ; ret
0x00000000000da4b8 : cmp eax, 0xfffff001 ; jae 0xda4c7 ; ret
0x00000000000da4e8 : cmp eax, 0xfffff001 ; jae 0xda4f7 ; ret
0x00000000000da521 : cmp eax, 0xfffff001 ; jae 0xda560 ; ret
0x00000000000da741 : cmp eax, 0xfffff001 ; jae 0xda780 ; ret
0x00000000000da7a1 : cmp eax, 0xfffff001 ; jae 0xda7e0 ; ret
0x00000000000da7f8 : cmp eax, 0xfffff001 ; jae 0xda807 ; ret
0x00000000000dac08 : cmp eax, 0xfffff001 ; jae 0xdac17 ; ret
0x00000000000dad51 : cmp eax, 0xfffff001 ; jae 0xdad90 ; ret
0x00000000000dada8 : cmp eax, 0xfffff001 ; jae 0xdadb7 ; ret
0x00000000000dadd8 : cmp eax, 0xfffff001 ; jae 0xdade7 ; ret
0x00000000000dae08 : cmp eax, 0xfffff001 ; jae 0xdae17 ; ret
0x00000000000dae38 : cmp eax, 0xfffff001 ; jae 0xdae47 ; ret
0x00000000000dae68 : cmp eax, 0xfffff001 ; jae 0xdae77 ; ret
0x00000000000daea1 : cmp eax, 0xfffff001 ; jae 0xdaee0 ; ret
0x00000000000daef8 : cmp eax, 0xfffff001 ; jae 0xdaf07 ; ret
0x00000000000daf28 : cmp eax, 0xfffff001 ; jae 0xdaf37 ; ret
0x00000000000db748 : cmp eax, 0xfffff001 ; jae 0xdb757 ; ret
0x00000000000db778 : cmp eax, 0xfffff001 ; jae 0xdb787 ; ret
0x00000000000db7a8 : cmp eax, 0xfffff001 ; jae 0xdb7b7 ; ret
0x00000000000db7db : cmp eax, 0xfffff001 ; jae 0xdb7ea ; ret
0x00000000000dbdb8 : cmp eax, 0xfffff001 ; jae 0xdbdc7 ; ret
0x00000000000dbdeb : cmp eax, 0xfffff001 ; jae 0xdbdfa ; ret
0x00000000000dbe18 : cmp eax, 0xfffff001 ; jae 0xdbe27 ; ret
0x00000000000dbe48 : cmp eax, 0xfffff001 ; jae 0xdbe57 ; ret
0x00000000000dbe78 : cmp eax, 0xfffff001 ; jae 0xdbe87 ; ret
0x00000000000dbeab : cmp eax, 0xfffff001 ; jae 0xdbeba ; ret
0x00000000000dbed8 : cmp eax, 0xfffff001 ; jae 0xdbee7 ; ret
0x00000000000dbf08 : cmp eax, 0xfffff001 ; jae 0xdbf17 ; ret
0x00000000000dbf38 : cmp eax, 0xfffff001 ; jae 0xdbf47 ; ret
0x00000000000de771 : cmp eax, 0xfffff001 ; jae 0xde7b0 ; ret
0x00000000000deadb : cmp eax, 0xfffff001 ; jae 0xdeaea ; ret
0x00000000000df254 : cmp eax, 0xfffff001 ; jae 0xdf296 ; ret
0x00000000000df878 : cmp eax, 0xfffff001 ; jae 0xdf887 ; ret
0x00000000000df8a8 : cmp eax, 0xfffff001 ; jae 0xdf8b7 ; ret
0x00000000000df8d8 : cmp eax, 0xfffff001 ; jae 0xdf8e7 ; ret
0x00000000000dfbe8 : cmp eax, 0xfffff001 ; jae 0xdfbf7 ; ret
0x00000000000dfdc8 : cmp eax, 0xfffff001 ; jae 0xdfdd7 ; ret
0x00000000000dfe01 : cmp eax, 0xfffff001 ; jae 0xdfe40 ; ret
0x00000000000dfe61 : cmp eax, 0xfffff001 ; jae 0xdfea0 ; ret
0x00000000000e0358 : cmp eax, 0xfffff001 ; jae 0xe0367 ; ret
0x00000000000e03f8 : cmp eax, 0xfffff001 ; jae 0xe0407 ; ret
0x00000000000e0434 : cmp eax, 0xfffff001 ; jae 0xe0476 ; ret
0x00000000000e0588 : cmp eax, 0xfffff001 ; jae 0xe0597 ; ret
0x00000000000e05b8 : cmp eax, 0xfffff001 ; jae 0xe05c7 ; ret
0x00000000000e05f1 : cmp eax, 0xfffff001 ; jae 0xe0630 ; ret
0x00000000000e0648 : cmp eax, 0xfffff001 ; jae 0xe0657 ; ret
0x00000000000e0681 : cmp eax, 0xfffff001 ; jae 0xe06c0 ; ret
0x00000000000e06d8 : cmp eax, 0xfffff001 ; jae 0xe06e7 ; ret
0x00000000000e0a48 : cmp eax, 0xfffff001 ; jae 0xe0a57 ; ret
0x00000000000e0a78 : cmp eax, 0xfffff001 ; jae 0xe0a87 ; ret
0x00000000000e0aa8 : cmp eax, 0xfffff001 ; jae 0xe0ab7 ; ret
0x00000000000e1d68 : cmp eax, 0xfffff001 ; jae 0xe1d77 ; ret
0x00000000000e1d98 : cmp eax, 0xfffff001 ; jae 0xe1da7 ; ret
0x00000000000e334a : cmp eax, 0xfffff001 ; jae 0xe3359 ; ret
0x00000000000e35b8 : cmp eax, 0xfffff001 ; jae 0xe35c7 ; ret
0x00000000000e35e8 : cmp eax, 0xfffff001 ; jae 0xe35f7 ; ret
0x00000000000e3621 : cmp eax, 0xfffff001 ; jae 0xe3660 ; ret
0x00000000000e3678 : cmp eax, 0xfffff001 ; jae 0xe3687 ; ret
0x00000000000e36a8 : cmp eax, 0xfffff001 ; jae 0xe36b7 ; ret
0x00000000000e36db : cmp eax, 0xfffff001 ; jae 0xe36ea ; ret
0x00000000000e3708 : cmp eax, 0xfffff001 ; jae 0xe3717 ; ret
0x00000000000e3738 : cmp eax, 0xfffff001 ; jae 0xe3747 ; ret
0x00000000000e3768 : cmp eax, 0xfffff001 ; jae 0xe3777 ; ret
0x00000000000e3798 : cmp eax, 0xfffff001 ; jae 0xe37a7 ; ret
0x00000000000e63bb : cmp eax, 0xfffff001 ; jae 0xe63ca ; ret
0x00000000000e63e8 : cmp eax, 0xfffff001 ; jae 0xe63f7 ; ret
0x00000000000e6418 : cmp eax, 0xfffff001 ; jae 0xe6427 ; ret
0x00000000000e644b : cmp eax, 0xfffff001 ; jae 0xe645a ; ret
0x00000000000e647b : cmp eax, 0xfffff001 ; jae 0xe648a ; ret
0x00000000000e64a8 : cmp eax, 0xfffff001 ; jae 0xe64b7 ; ret
0x00000000000e64db : cmp eax, 0xfffff001 ; jae 0xe64ea ; ret
0x00000000000e6508 : cmp eax, 0xfffff001 ; jae 0xe6517 ; ret
0x00000000000e6538 : cmp eax, 0xfffff001 ; jae 0xe6547 ; ret
0x00000000000e656b : cmp eax, 0xfffff001 ; jae 0xe657a ; ret
0x00000000000e6598 : cmp eax, 0xfffff001 ; jae 0xe65a7 ; ret
0x00000000000e65cb : cmp eax, 0xfffff001 ; jae 0xe65da ; ret
0x00000000000e76d8 : cmp eax, 0xfffff001 ; jae 0xe76e7 ; ret
0x00000000000e7708 : cmp eax, 0xfffff001 ; jae 0xe7717 ; ret
0x00000000000e7838 : cmp eax, 0xfffff001 ; jae 0xe7847 ; ret
0x00000000000e7878 : cmp eax, 0xfffff001 ; jae 0xe7887 ; ret
0x00000000000e78a8 : cmp eax, 0xfffff001 ; jae 0xe78b7 ; ret
0x00000000000e78d8 : cmp eax, 0xfffff001 ; jae 0xe78e7 ; ret
0x00000000000e7908 : cmp eax, 0xfffff001 ; jae 0xe7917 ; ret
0x00000000000e7b2b : cmp eax, 0xfffff001 ; jae 0xe7b3a ; ret
0x00000000000e7b58 : cmp eax, 0xfffff001 ; jae 0xe7b67 ; ret
0x00000000000e7b88 : cmp eax, 0xfffff001 ; jae 0xe7b97 ; ret
0x00000000000e7bb8 : cmp eax, 0xfffff001 ; jae 0xe7bc7 ; ret
0x00000000000e7bfb : cmp eax, 0xfffff001 ; jae 0xe7c0a ; ret
0x00000000000e7c28 : cmp eax, 0xfffff001 ; jae 0xe7c37 ; ret
0x00000000000e7c58 : cmp eax, 0xfffff001 ; jae 0xe7c67 ; ret
0x00000000000e7c88 : cmp eax, 0xfffff001 ; jae 0xe7c97 ; ret
0x00000000000e7cb8 : cmp eax, 0xfffff001 ; jae 0xe7cc7 ; ret
0x00000000000e7ce8 : cmp eax, 0xfffff001 ; jae 0xe7cf7 ; ret
0x00000000000e7d18 : cmp eax, 0xfffff001 ; jae 0xe7d27 ; ret
0x00000000000e7d48 : cmp eax, 0xfffff001 ; jae 0xe7d57 ; ret
0x00000000000e7d78 : cmp eax, 0xfffff001 ; jae 0xe7d87 ; ret
0x00000000000e7dab : cmp eax, 0xfffff001 ; jae 0xe7dba ; ret
0x00000000000e7de4 : cmp eax, 0xfffff001 ; jae 0xe7e26 ; ret
0x00000000000e7e38 : cmp eax, 0xfffff001 ; jae 0xe7e47 ; ret
0x00000000000e7e6b : cmp eax, 0xfffff001 ; jae 0xe7e7a ; ret
0x00000000000e7e98 : cmp eax, 0xfffff001 ; jae 0xe7ea7 ; ret
0x00000000000e7ec8 : cmp eax, 0xfffff001 ; jae 0xe7ed7 ; ret
0x00000000000e7ef8 : cmp eax, 0xfffff001 ; jae 0xe7f07 ; ret
0x00000000000e7f28 : cmp eax, 0xfffff001 ; jae 0xe7f37 ; ret
0x00000000000e7f58 : cmp eax, 0xfffff001 ; jae 0xe7f67 ; ret
0x00000000000e7f8b : cmp eax, 0xfffff001 ; jae 0xe7f9a ; ret
0x00000000000e7fbb : cmp eax, 0xfffff001 ; jae 0xe7fca ; ret
0x00000000000e7fe8 : cmp eax, 0xfffff001 ; jae 0xe7ff7 ; ret
0x00000000000e8018 : cmp eax, 0xfffff001 ; jae 0xe8027 ; ret
0x00000000000e804b : cmp eax, 0xfffff001 ; jae 0xe805a ; ret
0x00000000000e807b : cmp eax, 0xfffff001 ; jae 0xe808a ; ret
0x00000000000e80ab : cmp eax, 0xfffff001 ; jae 0xe80ba ; ret
0x00000000000e80e4 : cmp eax, 0xfffff001 ; jae 0xe8126 ; ret
0x00000000000e8138 : cmp eax, 0xfffff001 ; jae 0xe8147 ; ret
0x00000000000e8174 : cmp eax, 0xfffff001 ; jae 0xe81b6 ; ret
0x00000000000e81c8 : cmp eax, 0xfffff001 ; jae 0xe81d7 ; ret
0x00000000000e81f8 : cmp eax, 0xfffff001 ; jae 0xe8207 ; ret
0x00000000000e8234 : cmp eax, 0xfffff001 ; jae 0xe8276 ; ret
0x00000000000e8288 : cmp eax, 0xfffff001 ; jae 0xe8297 ; ret
0x00000000000e82bb : cmp eax, 0xfffff001 ; jae 0xe82ca ; ret
0x00000000000e82e8 : cmp eax, 0xfffff001 ; jae 0xe82f7 ; ret
0x00000000000e8318 : cmp eax, 0xfffff001 ; jae 0xe8327 ; ret
0x00000000000e834b : cmp eax, 0xfffff001 ; jae 0xe835a ; ret
0x00000000000e8381 : cmp eax, 0xfffff001 ; jae 0xe83c0 ; ret
0x00000000000e83d8 : cmp eax, 0xfffff001 ; jae 0xe83e7 ; ret
0x00000000000e840b : cmp eax, 0xfffff001 ; jae 0xe841a ; ret
0x00000000000e843b : cmp eax, 0xfffff001 ; jae 0xe844a ; ret
0x00000000000e8491 : cmp eax, 0xfffff001 ; jae 0xe84d0 ; ret
0x00000000000e84e8 : cmp eax, 0xfffff001 ; jae 0xe84f7 ; ret
0x00000000000e8521 : cmp eax, 0xfffff001 ; jae 0xe8560 ; ret
0x00000000000e8578 : cmp eax, 0xfffff001 ; jae 0xe8587 ; ret
0x00000000000e85a8 : cmp eax, 0xfffff001 ; jae 0xe85b7 ; ret
0x00000000000e85db : cmp eax, 0xfffff001 ; jae 0xe85ea ; ret
0x00000000000e8608 : cmp eax, 0xfffff001 ; jae 0xe8617 ; ret
0x00000000000e8704 : cmp eax, 0xfffff001 ; jae 0xe8746 ; ret
0x00000000000e8761 : cmp eax, 0xfffff001 ; jae 0xe87a0 ; ret
0x00000000000e8881 : cmp eax, 0xfffff001 ; jae 0xe88c0 ; ret
0x00000000000e88e4 : cmp eax, 0xfffff001 ; jae 0xe8926 ; ret
0x00000000000e893b : cmp eax, 0xfffff001 ; jae 0xe894a ; ret
0x00000000000e8968 : cmp eax, 0xfffff001 ; jae 0xe8977 ; ret
0x00000000000e8998 : cmp eax, 0xfffff001 ; jae 0xe89a7 ; ret
0x00000000000e89cb : cmp eax, 0xfffff001 ; jae 0xe89da ; ret
0x00000000000e8ee4 : cmp eax, 0xfffff001 ; jae 0xe8f26 ; ret
0x00000000000e8f44 : cmp eax, 0xfffff001 ; jae 0xe8f86 ; ret
0x00000000000e8f98 : cmp eax, 0xfffff001 ; jae 0xe8fa7 ; ret
0x00000000000e8fc8 : cmp eax, 0xfffff001 ; jae 0xe8fd7 ; ret
0x00000000000e8ff8 : cmp eax, 0xfffff001 ; jae 0xe9007 ; ret
0x00000000000e9028 : cmp eax, 0xfffff001 ; jae 0xe9037 ; ret
0x00000000000e905b : cmp eax, 0xfffff001 ; jae 0xe906a ; ret
0x00000000000e908b : cmp eax, 0xfffff001 ; jae 0xe909a ; ret
0x00000000000e90b8 : cmp eax, 0xfffff001 ; jae 0xe90c7 ; ret
0x00000000000e90e8 : cmp eax, 0xfffff001 ; jae 0xe90f7 ; ret
0x00000000000e9118 : cmp eax, 0xfffff001 ; jae 0xe9127 ; ret
0x00000000000e9148 : cmp eax, 0xfffff001 ; jae 0xe9157 ; ret
0x00000000000f4748 : cmp eax, 0xfffffe93 ; call rax
0x00000000000bbf85 : cmp eax, 1 ; sete al ; movzx eax, al ; ret
0x000000000009936f : cmp eax, 2 ; je 0x99387 ; xor eax, eax ; ret
0x0000000000114a01 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000c17ad : cmp eax, 3 ; je 0xc17be ; ret
0x00000000000f3e6a : cmp eax, 4 ; je 0xf3e75 ; ret
0x0000000000010300 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xc
0x0000000000046b31 : cmp eax, dword ptr [rbp + rsi] ; call rax
0x0000000000070ad2 : cmp eax, dword ptr [rbx + 0x10] ; jae 0x70b01 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007240d : cmp eax, dword ptr [rbx + 0x10] ; jae 0x723cb ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000c2cac : cmp eax, dword ptr [rbx - 0x7cb7fe3d] ; ret 0x4104
0x0000000000105d9c : cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x000000000018674d : cmp eax, dword ptr [rcx] ; add al, dh ; sahf ; cmc ; jmp qword ptr [rcx]
0x0000000000186705 : cmp eax, dword ptr [rcx] ; add byte ptr [rax - 0x62], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000186675 : cmp eax, dword ptr [rcx] ; add byte ptr [rax - 0x63], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000c1f11 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000070ab5 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x70ac8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000160110 : cmp eax, dword ptr [rdi] ; cmc ; call rsi
0x0000000000194684 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x000000000009a1ae : cmp eax, dword ptr [rsi + 0x10] ; jne 0x9a2a9 ; ret
0x000000000009a1c3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0x9a2a9 ; ret
0x000000000009a1d8 : cmp eax, dword ptr [rsi + 0x18] ; jne 0x9a2a9 ; ret
0x000000000009a1f3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0x9a2a9 ; ret
0x000000000009a20e : cmp eax, dword ptr [rsi + 0x20] ; jne 0x9a2a9 ; ret
0x000000000009a223 : cmp eax, dword ptr [rsi + 0x24] ; jne 0x9a2a5 ; ret
0x000000000009a238 : cmp eax, dword ptr [rsi + 0x28] ; jne 0x9a2a5 ; ret
0x000000000009a243 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9a2a5 ; ret
0x000000000009a25e : cmp eax, dword ptr [rsi + 0x30] ; jne 0x9a2a5 ; ret
0x000000000009a273 : cmp eax, dword ptr [rsi + 0x34] ; jne 0x9a2a5 ; ret
0x000000000009a288 : cmp eax, dword ptr [rsi + 0x38] ; jne 0x9a2a5 ; ret
0x000000000009a293 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9a2a5 ; ret
0x000000000009a193 : cmp eax, dword ptr [rsi + 0xc] ; jne 0x9a2a9 ; ret
0x000000000009a163 : cmp eax, dword ptr [rsi + 4] ; jne 0x9a2a9 ; ret
0x000000000009a178 : cmp eax, dword ptr [rsi + 8] ; jne 0x9a2a9 ; ret
0x000000000014b2ea : cmp eax, dword ptr [rsi - 0x10] ; jne 0x14b429 ; ret
0x000000000014b303 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x14b429 ; ret
0x000000000014b413 : cmp eax, dword ptr [rsi - 4] ; jne 0x14b427 ; xor eax, eax ; ret
0x000000000014b333 : cmp eax, dword ptr [rsi - 4] ; jne 0x14b429 ; ret
0x000000000014b318 : cmp eax, dword ptr [rsi - 8] ; jne 0x14b429 ; ret
0x000000000009a14d : cmp eax, dword ptr [rsi] ; jne 0x9a2a8 ; ret
0x00000000000737b9 : cmp eax, ecx ; jae 0x737e7 ; movzx eax, byte ptr [rax] ; ret
0x000000000008d26d : cmp eax, ecx ; je 0x8d255 ; ret
0x0000000000003af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000014ae03 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000033df3 : cmp eax, edi ; jne 0x33df1 ; mov eax, 1 ; ret
0x00000000000f36db : cmp eax, edx ; jb 0xf36d6 ; xor eax, eax ; ret
0x0000000000112801 : cmp eax, edx ; je 0x112818 ; add rsp, 8 ; ret
0x0000000000041e8d : cmp eax, edx ; jne 0x41e86 ; xor eax, eax ; ret
0x0000000000041f6d : cmp eax, edx ; jne 0x41f66 ; xor eax, eax ; ret
0x000000000008ad53 : cmp eax, edx ; jne 0x8ad47 ; or byte ptr [rdi], sil ; ret
0x000000000009a7a7 : cmp eax, edx ; jne 0x9a797 ; xor eax, eax ; ret
0x000000000017d8c9 : cmp eax, esi ; call qword ptr [rax]
0x00000000000ee999 : cmp eax, esi ; jb 0xee9b1 ; mov eax, 1 ; ret
0x00000000000c4f08 : cmp eax, esi ; jge 0xc4ee5 ; mov edx, eax ; jmp 0xc4eee
0x000000000010aa45 : cmp ebp, eax ; in eax, 0xcd ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000f4cb8 : cmp ebp, eax ; ret 0x277
0x000000000014bd37 : cmp ebp, ebp ; push rbx ; ret
0x00000000000f3e06 : cmp ebx, 0xa ; je 0xf3e11 ; ret
0x0000000000074f15 : cmp ebx, eax ; je 0x74f26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014bdca : cmp ebx, ebp ; jae 0x14bddd ; call qword ptr [rbx]
0x000000000014bdca : cmp ebx, ebp ; jae 0x14bde1 ; call qword ptr [rbx]
0x000000000014bdf9 : cmp ebx, ebp ; jb 0x14bdf3 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000016bad9 : cmp ebx, edi ; jmp qword ptr [rax + 0x10fffb2b]
0x00000000000428ac : cmp ecx, -1 ; jne 0x428a9 ; mov rax, rdx ; ret
0x000000000009affc : cmp ecx, -1 ; jne 0x9aff9 ; sub rax, 4 ; ret
0x000000000003fb4b : cmp ecx, 0x24 ; jne 0x3fb2a ; ret
0x00000000000d0a3a : cmp ecx, 0xa ; mov eax, edx ; je 0xd0a99 ; ret
0x00000000000a6479 : cmp ecx, dword ptr [rax - 0x75] ; jae 0xa648d ; call 0x22767
0x00000000001087e5 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x000000000009d908 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000c337f : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000d3edc : cmp ecx, dword ptr [rax - 0xc] ; jne 0xd3ed8 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000014c54b : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x14c561 ; pop rbx ; ret
0x0000000000087e66 : cmp ecx, dword ptr [rcx + 0x39] ; ret
0x00000000001181f5 : cmp ecx, dword ptr [rcx + 0x39] ; ror byte ptr [rdi], 0x82 ; ret
0x00000000000b7414 : cmp ecx, dword ptr [rcx + rcx*4 - 0x19] ; call 0x736b6
0x00000000000a8740 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000006c71e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000001fae3 : cmp ecx, eax ; je 0x1fa88 ; jmp 0x1fab1
0x00000000001484fb : cmp ecx, eax ; jne 0x148529 ; xor eax, eax ; ret
0x000000000014933b : cmp ecx, eax ; jne 0x149369 ; xor eax, eax ; ret
0x000000000014936f : cmp ecx, eax ; jne 0x14937c ; xor eax, eax ; ret
0x0000000000115693 : cmp ecx, edx ; jae 0x1156a6 ; xor eax, eax ; ret
0x00000000001156d3 : cmp ecx, edx ; jae 0x1156e6 ; xor eax, eax ; ret
0x000000000008d218 : cmp ecx, edx ; je 0x8d219 ; cmp ecx, esi ; je 0x8d219 ; ret
0x00000000000884f9 : cmp ecx, edx ; jne 0x884f5 ; ret
0x000000000008d21c : cmp ecx, esi ; je 0x8d215 ; ret
0x000000000009b239 : cmp edi, 0x7f ; ja 0x9b24f ; mov eax, edi ; ret
0x0000000000037cc9 : cmp edi, 0xf41ffff ; xchg eax, ebp ; ret 0xb5e9
0x000000000014c008 : cmp edi, 1 ; ja 0x14c015 ; ret
0x00000000000ea79d : cmp edi, 9 ; setbe al ; ret
0x0000000000043d8a : cmp edi, eax ; jbe 0x43d88 ; nop ; pop rbx ; ret
0x000000000016bb1d : cmp edi, ebx ; call rax
0x0000000000049c15 : cmp edi, ecx ; ja 0x49c00 ; mov eax, r8d ; ret
0x000000000010c072 : cmp edi, ecx ; jne 0x10c065 ; ret
0x000000000002be96 : cmp edi, edi ; push rbx ; ret
0x00000000000dfcb1 : cmp edi, edx ; ja 0xdfce5 ; ret
0x0000000000074320 : cmp edi, edx ; je 0x7418c ; ret
0x00000000000e6625 : cmp edi, edx ; jne 0xe6620 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000d9ee8 : cmp edi, esi ; ja 0xd9e86 ; pop rbx ; pop rbp ; ret
0x00000000000d9f20 : cmp edi, esi ; ja 0xd9f15 ; ret
0x0000000000043eb7 : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00000000000364f0 : cmp edx, -1 ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000fdf89 : cmp edx, -3 ; jbe 0xfdf95 ; ret
0x00000000000b8118 : cmp edx, 0 ; mov eax, edx ; jle 0xb8130 ; ret
0x00000000000f7dbf : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x000000000010303d : cmp edx, 0xf410308 ; xchg eax, ebp ; ret 0xf45
0x000000000002c06b : cmp edx, dword ptr [rdi + 4] ; jb 0x2c07e ; ret
0x00000000000c1ae5 : cmp edx, dword ptr [rsi + 4] ; je 0xc1af6 ; ret
0x00000000001016ad : cmp edx, eax ; jb 0x1016d9 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000101c25 : cmp edx, eax ; jne 0x101c0e ; ret
0x00000000000f40b2 : cmp edx, eax ; jne 0xf4095 ; ret
0x000000000017c159 : cmp edx, ebp ; jmp qword ptr [rax]
0x000000000011557f : cmp edx, ecx ; je 0x115595 ; ret
0x0000000000081d38 : cmp edx, ecx ; jne 0x81d25 ; ret
0x00000000000b89b7 : cmp edx, ecx ; jne 0xb89e4 ; ret
0x00000000000f37ba : cmp edx, edi ; setae al ; ret
0x00000000001021f6 : cmp edx, esi ; jb 0x1021ed ; mov eax, 0xffffffff ; ret
0x000000000008d1f8 : cmp edx, esi ; je 0x8d1f5 ; ret
0x000000000009c0e6 : cmp edx, esi ; je 0x9c0f7 ; test edx, edx ; jne 0x9c0e9 ; ret
0x000000000006a979 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000000290e9 : cmp esi, 0x6349ffff ; ret
0x000000000006ecd8 : cmp esi, 2 ; je 0x6ecf0 ; mov dword ptr [rdi], edx ; ret
0x0000000000029395 : cmp esi, 3 ; je 0x293a6 ; pop rbx ; ret
0x00000000000c1cbd : cmp esi, dword ptr [rdi + 4] ; jl 0xc1cb6 ; ret
0x000000000009ae51 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000010a95a : cmp esi, dword ptr [rdx + 0x28] ; ja 0x10a951 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000015c564 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00000000000d3eac : cmp esi, ebx ; ret
0x000000000006a73a : cmp esi, ecx ; jb 0x6a737 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000740cf : cmp esi, ecx ; jb 0x740b8 ; mov byte ptr [rax + rsi], r10b ; ret
0x0000000000123448 : cmp esi, ecx ; jle 0x12338d ; ret
0x0000000000072c0a : cmp esi, ecx ; jne 0x72c07 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000c9018 : cmp esi, esi ; ret 0x7420
0x00000000000b7411 : cmp esp, eax ; je 0xb7459 ; mov rdi, r12 ; call 0x736b9
0x000000000016c341 : cmp esp, edi ; inc eax ; cmp bh, ah ; call qword ptr [rax]
0x00000000000f0070 : cmp qword ptr [rdi + 0x10], 0 ; je 0xf0089 ; xor eax, eax ; ret
0x000000000006ebc3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000072580 : cmp qword ptr [rdi + 0x38], 0 ; je 0x72597 ; ret
0x00000000000f3757 : cmp qword ptr [rdi], 0 ; je 0xf376f ; ret
0x000000000006a187 : cmp qword ptr [rsi + 0x30], 0 ; je 0x6a197 ; ret
0x00000000000e435c : cmp qword ptr [rsi], 0 ; je 0xe436f ; pop rbx ; ret
0x000000000010303c : cmp r10d, 0xf410308 ; xchg eax, ebp ; ret 0xf45
0x0000000000087732 : cmp r11b, r14b ; ret
0x00000000000f3e05 : cmp r11d, 0xa ; je 0xf3e12 ; ret
0x000000000014bd36 : cmp r13, rbp ; push rbx ; ret
0x000000000008ad52 : cmp r8, rdx ; jne 0x8ad48 ; or byte ptr [rdi], sil ; ret
0x000000000008d26c : cmp r8d, ecx ; je 0x8d256 ; ret
0x00000000000c4f07 : cmp r8d, esi ; jge 0xc4ee6 ; mov edx, eax ; jmp 0xc4eef
0x000000000001fae2 : cmp r9, rax ; je 0x1fa89 ; jmp 0x1fab2
0x00000000000efb71 : cmp r9b, r13b ; ret
0x00000000000331f8 : cmp rax, -0x1000 ; ja 0x33229 ; ret
0x0000000000033500 : cmp rax, -0x1000 ; ja 0x33519 ; ret
0x000000000003356c : cmp rax, -0x1000 ; ja 0x33589 ; ret
0x00000000000335b6 : cmp rax, -0x1000 ; ja 0x335c8 ; ret
0x00000000000a84b7 : cmp rax, -0x1000 ; ja 0xa84d1 ; ret
0x00000000000b3417 : cmp rax, -0x1000 ; ja 0xb3431 ; pop rbx ; ret
0x00000000000b4601 : cmp rax, -0x1000 ; ja 0xb4618 ; ret
0x00000000000b6f50 : cmp rax, -0x1000 ; ja 0xb6f68 ; ret
0x00000000000b6fea : cmp rax, -0x1000 ; ja 0xb7000 ; ret
0x00000000000b70db : cmp rax, -0x1000 ; ja 0xb70f0 ; ret
0x00000000000b81e3 : cmp rax, -0x1000 ; ja 0xb81f8 ; ret
0x00000000000b8253 : cmp rax, -0x1000 ; ja 0xb8268 ; ret
0x00000000000b84a7 : cmp rax, -0x1000 ; ja 0xb84b8 ; ret
0x00000000000b8527 : cmp rax, -0x1000 ; ja 0xb8538 ; ret
0x00000000000da0c5 : cmp rax, -0x1000 ; ja 0xda0d9 ; ret
0x00000000000da114 : cmp rax, -0x1000 ; ja 0xda129 ; ret
0x00000000000da165 : cmp rax, -0x1000 ; ja 0xda179 ; ret
0x00000000000da1bd : cmp rax, -0x1000 ; ja 0xda1d9 ; ret
0x00000000000da221 : cmp rax, -0x1000 ; ja 0xda239 ; ret
0x00000000000da27a : cmp rax, -0x1000 ; ja 0xda291 ; ret
0x00000000000da459 : cmp rax, -0x1000 ; ja 0xda471 ; ret
0x00000000000dab02 : cmp rax, -0x1000 ; ja 0xdab49 ; ret
0x00000000000deb12 : cmp rax, -0x1000 ; ja 0xdeb29 ; ret
0x00000000000deb66 : cmp rax, -0x1000 ; ja 0xdeb79 ; ret
0x00000000000df2ba : cmp rax, -0x1000 ; ja 0xdf2d0 ; ret
0x00000000000df536 : cmp rax, -0x1000 ; ja 0xdf569 ; ret
0x00000000000df6ae : cmp rax, -0x1000 ; ja 0xdf6c8 ; ret
0x00000000000dfeca : cmp rax, -0x1000 ; ja 0xdfee0 ; ret
0x00000000000dff7a : cmp rax, -0x1000 ; ja 0xdff90 ; ret
0x00000000000e0025 : cmp rax, -0x1000 ; ja 0xe0038 ; ret
0x00000000000e0095 : cmp rax, -0x1000 ; ja 0xe00a8 ; ret
0x00000000000e0116 : cmp rax, -0x1000 ; ja 0xe0128 ; ret
0x00000000000e01c6 : cmp rax, -0x1000 ; ja 0xe01d8 ; ret
0x00000000000e0716 : cmp rax, -0x1000 ; ja 0xe0729 ; ret
0x00000000000e1ba7 : cmp rax, -0x1000 ; ja 0xe1bc1 ; ret
0x00000000000e1c3b : cmp rax, -0x1000 ; ja 0xe1c51 ; ret
0x00000000000e1cdb : cmp rax, -0x1000 ; ja 0xe1cf1 ; ret
0x00000000000e1d2f : cmp rax, -0x1000 ; ja 0xe1d49 ; ret
0x00000000000e5abe : cmp rax, -0x1000 ; ja 0xe5ad9 ; ret
0x00000000000e776e : cmp rax, -0x1000 ; ja 0xe7789 ; ret
0x00000000000e79b0 : cmp rax, -0x1000 ; ja 0xe79c8 ; ret
0x00000000000e7a62 : cmp rax, -0x1000 ; ja 0xe7a79 ; ret
0x00000000000e7a9c : cmp rax, -0x1000 ; ja 0xe7ab9 ; ret
0x00000000000e864d : cmp rax, -0x1000 ; ja 0xe8668 ; ret
0x00000000000e87cd : cmp rax, -0x1000 ; ja 0xe87e8 ; ret
0x00000000000e8c27 : cmp rax, -0x1000 ; ja 0xe8c38 ; ret
0x00000000000e8cc9 : cmp rax, -0x1000 ; ja 0xe8ce0 ; ret
0x00000000000e8d79 : cmp rax, -0x1000 ; ja 0xe8d90 ; ret
0x00000000000f442a : cmp rax, -0x1000 ; ja 0xf4441 ; ret
0x00000000000f44d7 : cmp rax, -0x1000 ; ja 0xf4503 ; ret
0x00000000000f613c : cmp rax, -0x1000 ; ja 0xf6159 ; ret
0x00000000000f61ec : cmp rax, -0x1000 ; ja 0xf6209 ; ret
0x0000000000033e53 : cmp rax, -0x80 ; jne 0x33e48 ; xor eax, eax ; ret
0x0000000000033ea3 : cmp rax, -0x80 ; jne 0x33e98 ; xor eax, eax ; ret
0x00000000001199ca : cmp rax, -0xfff ; jae 0x1199db ; ret
0x0000000000119a1a : cmp rax, -0xfff ; jae 0x119a2b ; ret
0x0000000000033537 : cmp rax, -0xfff ; jae 0x33548 ; ret
0x0000000000033a17 : cmp rax, -0xfff ; jae 0x33a28 ; ret
0x0000000000063847 : cmp rax, -0xfff ; jae 0x63858 ; ret
0x000000000006387a : cmp rax, -0xfff ; jae 0x6388b ; ret
0x00000000000a8597 : cmp rax, -0xfff ; jae 0xa85a8 ; ret
0x00000000000aae07 : cmp rax, -0xfff ; jae 0xaae18 ; ret
0x00000000000aae37 : cmp rax, -0xfff ; jae 0xaae48 ; ret
0x00000000000b6ea7 : cmp rax, -0xfff ; jae 0xb6eb8 ; ret
0x00000000000b709a : cmp rax, -0xfff ; jae 0xb70ab ; ret
0x00000000000b7177 : cmp rax, -0xfff ; jae 0xb7188 ; ret
0x00000000000b7200 : cmp rax, -0xfff ; jae 0xb7241 ; ret
0x00000000000b7260 : cmp rax, -0xfff ; jae 0xb72a1 ; ret
0x00000000000b7697 : cmp rax, -0xfff ; jae 0xb76a8 ; ret
0x00000000000b81a7 : cmp rax, -0xfff ; jae 0xb81b8 ; ret
0x00000000000b8347 : cmp rax, -0xfff ; jae 0xb8358 ; ret
0x00000000000b8377 : cmp rax, -0xfff ; jae 0xb8388 ; ret
0x00000000000b83d7 : cmp rax, -0xfff ; jae 0xb83e8 ; ret
0x00000000000b8407 : cmp rax, -0xfff ; jae 0xb8418 ; ret
0x00000000000b8437 : cmp rax, -0xfff ; jae 0xb8448 ; ret
0x00000000000b8467 : cmp rax, -0xfff ; jae 0xb8478 ; ret
0x00000000000d0787 : cmp rax, -0xfff ; jae 0xd0798 ; ret
0x00000000000d07b7 : cmp rax, -0xfff ; jae 0xd07c8 ; ret
0x00000000000d07e7 : cmp rax, -0xfff ; jae 0xd07f8 ; ret
0x00000000000d0817 : cmp rax, -0xfff ; jae 0xd0828 ; ret
0x00000000000d0847 : cmp rax, -0xfff ; jae 0xd0858 ; ret
0x00000000000d0877 : cmp rax, -0xfff ; jae 0xd0888 ; ret
0x00000000000d08a7 : cmp rax, -0xfff ; jae 0xd08b8 ; ret
0x00000000000d08d7 : cmp rax, -0xfff ; jae 0xd08e8 ; ret
0x00000000000d9033 : cmp rax, -0xfff ; jae 0xd9077 ; ret
0x00000000000d9093 : cmp rax, -0xfff ; jae 0xd90d7 ; ret
0x00000000000da027 : cmp rax, -0xfff ; jae 0xda038 ; ret
0x00000000000da2c7 : cmp rax, -0xfff ; jae 0xda2d8 ; ret
0x00000000000da2f7 : cmp rax, -0xfff ; jae 0xda308 ; ret
0x00000000000da3c7 : cmp rax, -0xfff ; jae 0xda3d8 ; ret
0x00000000000da3f7 : cmp rax, -0xfff ; jae 0xda408 ; ret
0x00000000000da4b7 : cmp rax, -0xfff ; jae 0xda4c8 ; ret
0x00000000000da4e7 : cmp rax, -0xfff ; jae 0xda4f8 ; ret
0x00000000000da520 : cmp rax, -0xfff ; jae 0xda561 ; ret
0x00000000000da740 : cmp rax, -0xfff ; jae 0xda781 ; ret
0x00000000000da7a0 : cmp rax, -0xfff ; jae 0xda7e1 ; ret
0x00000000000da7f7 : cmp rax, -0xfff ; jae 0xda808 ; ret
0x00000000000dac07 : cmp rax, -0xfff ; jae 0xdac18 ; ret
0x00000000000dad50 : cmp rax, -0xfff ; jae 0xdad91 ; ret
0x00000000000dada7 : cmp rax, -0xfff ; jae 0xdadb8 ; ret
0x00000000000dadd7 : cmp rax, -0xfff ; jae 0xdade8 ; ret
0x00000000000dae07 : cmp rax, -0xfff ; jae 0xdae18 ; ret
0x00000000000dae37 : cmp rax, -0xfff ; jae 0xdae48 ; ret
0x00000000000dae67 : cmp rax, -0xfff ; jae 0xdae78 ; ret
0x00000000000daea0 : cmp rax, -0xfff ; jae 0xdaee1 ; ret
0x00000000000daef7 : cmp rax, -0xfff ; jae 0xdaf08 ; ret
0x00000000000daf27 : cmp rax, -0xfff ; jae 0xdaf38 ; ret
0x00000000000db747 : cmp rax, -0xfff ; jae 0xdb758 ; ret
0x00000000000db777 : cmp rax, -0xfff ; jae 0xdb788 ; ret
0x00000000000db7a7 : cmp rax, -0xfff ; jae 0xdb7b8 ; ret
0x00000000000db7da : cmp rax, -0xfff ; jae 0xdb7eb ; ret
0x00000000000dbdb7 : cmp rax, -0xfff ; jae 0xdbdc8 ; ret
0x00000000000dbdea : cmp rax, -0xfff ; jae 0xdbdfb ; ret
0x00000000000dbe17 : cmp rax, -0xfff ; jae 0xdbe28 ; ret
0x00000000000dbe47 : cmp rax, -0xfff ; jae 0xdbe58 ; ret
0x00000000000dbe77 : cmp rax, -0xfff ; jae 0xdbe88 ; ret
0x00000000000dbeaa : cmp rax, -0xfff ; jae 0xdbebb ; ret
0x00000000000dbed7 : cmp rax, -0xfff ; jae 0xdbee8 ; ret
0x00000000000dbf07 : cmp rax, -0xfff ; jae 0xdbf18 ; ret
0x00000000000dbf37 : cmp rax, -0xfff ; jae 0xdbf48 ; ret
0x00000000000de770 : cmp rax, -0xfff ; jae 0xde7b1 ; ret
0x00000000000deada : cmp rax, -0xfff ; jae 0xdeaeb ; ret
0x00000000000df253 : cmp rax, -0xfff ; jae 0xdf297 ; ret
0x00000000000df877 : cmp rax, -0xfff ; jae 0xdf888 ; ret
0x00000000000df8a7 : cmp rax, -0xfff ; jae 0xdf8b8 ; ret
0x00000000000df8d7 : cmp rax, -0xfff ; jae 0xdf8e8 ; ret
0x00000000000dfbe7 : cmp rax, -0xfff ; jae 0xdfbf8 ; ret
0x00000000000dfdc7 : cmp rax, -0xfff ; jae 0xdfdd8 ; ret
0x00000000000dfe00 : cmp rax, -0xfff ; jae 0xdfe41 ; ret
0x00000000000dfe60 : cmp rax, -0xfff ; jae 0xdfea1 ; ret
0x00000000000e0357 : cmp rax, -0xfff ; jae 0xe0368 ; ret
0x00000000000e03f7 : cmp rax, -0xfff ; jae 0xe0408 ; ret
0x00000000000e0433 : cmp rax, -0xfff ; jae 0xe0477 ; ret
0x00000000000e0587 : cmp rax, -0xfff ; jae 0xe0598 ; ret
0x00000000000e05b7 : cmp rax, -0xfff ; jae 0xe05c8 ; ret
0x00000000000e05f0 : cmp rax, -0xfff ; jae 0xe0631 ; ret
0x00000000000e0647 : cmp rax, -0xfff ; jae 0xe0658 ; ret
0x00000000000e0680 : cmp rax, -0xfff ; jae 0xe06c1 ; ret
0x00000000000e06d7 : cmp rax, -0xfff ; jae 0xe06e8 ; ret
0x00000000000e0a47 : cmp rax, -0xfff ; jae 0xe0a58 ; ret
0x00000000000e0a77 : cmp rax, -0xfff ; jae 0xe0a88 ; ret
0x00000000000e0aa7 : cmp rax, -0xfff ; jae 0xe0ab8 ; ret
0x00000000000e1d67 : cmp rax, -0xfff ; jae 0xe1d78 ; ret
0x00000000000e1d97 : cmp rax, -0xfff ; jae 0xe1da8 ; ret
0x00000000000e3349 : cmp rax, -0xfff ; jae 0xe335a ; ret
0x00000000000e35b7 : cmp rax, -0xfff ; jae 0xe35c8 ; ret
0x00000000000e35e7 : cmp rax, -0xfff ; jae 0xe35f8 ; ret
0x00000000000e3620 : cmp rax, -0xfff ; jae 0xe3661 ; ret
0x00000000000e3677 : cmp rax, -0xfff ; jae 0xe3688 ; ret
0x00000000000e36a7 : cmp rax, -0xfff ; jae 0xe36b8 ; ret
0x00000000000e36da : cmp rax, -0xfff ; jae 0xe36eb ; ret
0x00000000000e3707 : cmp rax, -0xfff ; jae 0xe3718 ; ret
0x00000000000e3737 : cmp rax, -0xfff ; jae 0xe3748 ; ret
0x00000000000e3767 : cmp rax, -0xfff ; jae 0xe3778 ; ret
0x00000000000e3797 : cmp rax, -0xfff ; jae 0xe37a8 ; ret
0x00000000000e63ba : cmp rax, -0xfff ; jae 0xe63cb ; ret
0x00000000000e63e7 : cmp rax, -0xfff ; jae 0xe63f8 ; ret
0x00000000000e6417 : cmp rax, -0xfff ; jae 0xe6428 ; ret
0x00000000000e644a : cmp rax, -0xfff ; jae 0xe645b ; ret
0x00000000000e647a : cmp rax, -0xfff ; jae 0xe648b ; ret
0x00000000000e64a7 : cmp rax, -0xfff ; jae 0xe64b8 ; ret
0x00000000000e64da : cmp rax, -0xfff ; jae 0xe64eb ; ret
0x00000000000e6507 : cmp rax, -0xfff ; jae 0xe6518 ; ret
0x00000000000e6537 : cmp rax, -0xfff ; jae 0xe6548 ; ret
0x00000000000e656a : cmp rax, -0xfff ; jae 0xe657b ; ret
0x00000000000e6597 : cmp rax, -0xfff ; jae 0xe65a8 ; ret
0x00000000000e65ca : cmp rax, -0xfff ; jae 0xe65db ; ret
0x00000000000e76d7 : cmp rax, -0xfff ; jae 0xe76e8 ; ret
0x00000000000e7707 : cmp rax, -0xfff ; jae 0xe7718 ; ret
0x00000000000e7837 : cmp rax, -0xfff ; jae 0xe7848 ; ret
0x00000000000e7877 : cmp rax, -0xfff ; jae 0xe7888 ; ret
0x00000000000e78a7 : cmp rax, -0xfff ; jae 0xe78b8 ; ret
0x00000000000e78d7 : cmp rax, -0xfff ; jae 0xe78e8 ; ret
0x00000000000e7907 : cmp rax, -0xfff ; jae 0xe7918 ; ret
0x00000000000e7b2a : cmp rax, -0xfff ; jae 0xe7b3b ; ret
0x00000000000e7b57 : cmp rax, -0xfff ; jae 0xe7b68 ; ret
0x00000000000e7b87 : cmp rax, -0xfff ; jae 0xe7b98 ; ret
0x00000000000e7bb7 : cmp rax, -0xfff ; jae 0xe7bc8 ; ret
0x00000000000e7bfa : cmp rax, -0xfff ; jae 0xe7c0b ; ret
0x00000000000e7c27 : cmp rax, -0xfff ; jae 0xe7c38 ; ret
0x00000000000e7c57 : cmp rax, -0xfff ; jae 0xe7c68 ; ret
0x00000000000e7c87 : cmp rax, -0xfff ; jae 0xe7c98 ; ret
0x00000000000e7cb7 : cmp rax, -0xfff ; jae 0xe7cc8 ; ret
0x00000000000e7ce7 : cmp rax, -0xfff ; jae 0xe7cf8 ; ret
0x00000000000e7d17 : cmp rax, -0xfff ; jae 0xe7d28 ; ret
0x00000000000e7d47 : cmp rax, -0xfff ; jae 0xe7d58 ; ret
0x00000000000e7d77 : cmp rax, -0xfff ; jae 0xe7d88 ; ret
0x00000000000e7daa : cmp rax, -0xfff ; jae 0xe7dbb ; ret
0x00000000000e7de3 : cmp rax, -0xfff ; jae 0xe7e27 ; ret
0x00000000000e7e37 : cmp rax, -0xfff ; jae 0xe7e48 ; ret
0x00000000000e7e6a : cmp rax, -0xfff ; jae 0xe7e7b ; ret
0x00000000000e7e97 : cmp rax, -0xfff ; jae 0xe7ea8 ; ret
0x00000000000e7ec7 : cmp rax, -0xfff ; jae 0xe7ed8 ; ret
0x00000000000e7ef7 : cmp rax, -0xfff ; jae 0xe7f08 ; ret
0x00000000000e7f27 : cmp rax, -0xfff ; jae 0xe7f38 ; ret
0x00000000000e7f57 : cmp rax, -0xfff ; jae 0xe7f68 ; ret
0x00000000000e7f8a : cmp rax, -0xfff ; jae 0xe7f9b ; ret
0x00000000000e7fba : cmp rax, -0xfff ; jae 0xe7fcb ; ret
0x00000000000e7fe7 : cmp rax, -0xfff ; jae 0xe7ff8 ; ret
0x00000000000e8017 : cmp rax, -0xfff ; jae 0xe8028 ; ret
0x00000000000e804a : cmp rax, -0xfff ; jae 0xe805b ; ret
0x00000000000e807a : cmp rax, -0xfff ; jae 0xe808b ; ret
0x00000000000e80aa : cmp rax, -0xfff ; jae 0xe80bb ; ret
0x00000000000e80e3 : cmp rax, -0xfff ; jae 0xe8127 ; ret
0x00000000000e8137 : cmp rax, -0xfff ; jae 0xe8148 ; ret
0x00000000000e8173 : cmp rax, -0xfff ; jae 0xe81b7 ; ret
0x00000000000e81c7 : cmp rax, -0xfff ; jae 0xe81d8 ; ret
0x00000000000e81f7 : cmp rax, -0xfff ; jae 0xe8208 ; ret
0x00000000000e8233 : cmp rax, -0xfff ; jae 0xe8277 ; ret
0x00000000000e8287 : cmp rax, -0xfff ; jae 0xe8298 ; ret
0x00000000000e82ba : cmp rax, -0xfff ; jae 0xe82cb ; ret
0x00000000000e82e7 : cmp rax, -0xfff ; jae 0xe82f8 ; ret
0x00000000000e8317 : cmp rax, -0xfff ; jae 0xe8328 ; ret
0x00000000000e834a : cmp rax, -0xfff ; jae 0xe835b ; ret
0x00000000000e8380 : cmp rax, -0xfff ; jae 0xe83c1 ; ret
0x00000000000e83d7 : cmp rax, -0xfff ; jae 0xe83e8 ; ret
0x00000000000e840a : cmp rax, -0xfff ; jae 0xe841b ; ret
0x00000000000e843a : cmp rax, -0xfff ; jae 0xe844b ; ret
0x00000000000e8490 : cmp rax, -0xfff ; jae 0xe84d1 ; ret
0x00000000000e84e7 : cmp rax, -0xfff ; jae 0xe84f8 ; ret
0x00000000000e8520 : cmp rax, -0xfff ; jae 0xe8561 ; ret
0x00000000000e8577 : cmp rax, -0xfff ; jae 0xe8588 ; ret
0x00000000000e85a7 : cmp rax, -0xfff ; jae 0xe85b8 ; ret
0x00000000000e85da : cmp rax, -0xfff ; jae 0xe85eb ; ret
0x00000000000e8607 : cmp rax, -0xfff ; jae 0xe8618 ; ret
0x00000000000e8703 : cmp rax, -0xfff ; jae 0xe8747 ; ret
0x00000000000e8760 : cmp rax, -0xfff ; jae 0xe87a1 ; ret
0x00000000000e8880 : cmp rax, -0xfff ; jae 0xe88c1 ; ret
0x00000000000e88e3 : cmp rax, -0xfff ; jae 0xe8927 ; ret
0x00000000000e893a : cmp rax, -0xfff ; jae 0xe894b ; ret
0x00000000000e8967 : cmp rax, -0xfff ; jae 0xe8978 ; ret
0x00000000000e8997 : cmp rax, -0xfff ; jae 0xe89a8 ; ret
0x00000000000e89ca : cmp rax, -0xfff ; jae 0xe89db ; ret
0x00000000000e8ee3 : cmp rax, -0xfff ; jae 0xe8f27 ; ret
0x00000000000e8f43 : cmp rax, -0xfff ; jae 0xe8f87 ; ret
0x00000000000e8f97 : cmp rax, -0xfff ; jae 0xe8fa8 ; ret
0x00000000000e8fc7 : cmp rax, -0xfff ; jae 0xe8fd8 ; ret
0x00000000000e8ff7 : cmp rax, -0xfff ; jae 0xe9008 ; ret
0x00000000000e9027 : cmp rax, -0xfff ; jae 0xe9038 ; ret
0x00000000000e905a : cmp rax, -0xfff ; jae 0xe906b ; ret
0x00000000000e908a : cmp rax, -0xfff ; jae 0xe909b ; ret
0x00000000000e90b7 : cmp rax, -0xfff ; jae 0xe90c8 ; ret
0x00000000000e90e7 : cmp rax, -0xfff ; jae 0xe90f8 ; ret
0x00000000000e9117 : cmp rax, -0xfff ; jae 0xe9128 ; ret
0x00000000000e9147 : cmp rax, -0xfff ; jae 0xe9158 ; ret
0x0000000000070ab4 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x70ac9 ; movzx eax, byte ptr [rax] ; ret
0x00000000000737b8 : cmp rax, rcx ; jae 0x737e8 ; movzx eax, byte ptr [rax] ; ret
0x00000000000f36da : cmp rax, rdx ; jb 0xf36d7 ; xor eax, eax ; ret
0x00000000000f36d9 : cmp rax, rdx ; jb 0xf36d8 ; xor eax, eax ; ret
0x0000000000112800 : cmp rax, rdx ; je 0x112819 ; add rsp, 8 ; ret
0x0000000000041e8c : cmp rax, rdx ; jne 0x41e87 ; xor eax, eax ; ret
0x0000000000041f6c : cmp rax, rdx ; jne 0x41f67 ; xor eax, eax ; ret
0x000000000009a7a6 : cmp rax, rdx ; jne 0x9a798 ; xor eax, eax ; ret
0x0000000000074f14 : cmp rbx, rax ; je 0x74f27 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014bdc9 : cmp rbx, rbp ; jae 0x14bdde ; call qword ptr [rbx]
0x000000000014bdc9 : cmp rbx, rbp ; jae 0x14bde2 ; call qword ptr [rbx]
0x000000000014bdf8 : cmp rbx, rbp ; jb 0x14bdf4 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000006c71d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000001484fa : cmp rcx, rax ; jne 0x14852a ; xor eax, eax ; ret
0x000000000014933a : cmp rcx, rax ; jne 0x14936a ; xor eax, eax ; ret
0x00000000000884f8 : cmp rcx, rdx ; jne 0x884f6 ; ret
0x000000000014c007 : cmp rdi, 1 ; ja 0x14c016 ; ret
0x0000000000043d89 : cmp rdi, r8 ; jbe 0x43d89 ; nop ; pop rbx ; ret
0x000000000010c071 : cmp rdi, rcx ; jne 0x10c066 ; ret
0x00000000000dfcb0 : cmp rdi, rdx ; ja 0xdfce6 ; ret
0x00000000000e6624 : cmp rdi, rdx ; jne 0xe6621 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000d9ee7 : cmp rdi, rsi ; ja 0xd9e87 ; pop rbx ; pop rbp ; ret
0x00000000000d9f1f : cmp rdi, rsi ; ja 0xd9f16 ; ret
0x00000000000fdf88 : cmp rdx, -3 ; jbe 0xfdf96 ; ret
0x0000000000101c24 : cmp rdx, r8 ; jne 0x101c0f ; ret
0x00000000000f40b1 : cmp rdx, rax ; jne 0xf4096 ; ret
0x000000000011557e : cmp rdx, rcx ; je 0x115596 ; ret
0x0000000000081d37 : cmp rdx, rcx ; jne 0x81d26 ; ret
0x0000000000081d36 : cmp rdx, rcx ; jne 0x81d27 ; ret
0x00000000000b89b6 : cmp rdx, rcx ; jne 0xb89e5 ; ret
0x00000000000f37b9 : cmp rdx, rdi ; setae al ; ret
0x000000000006a739 : cmp rsi, rcx ; jb 0x6a738 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000740ce : cmp rsi, rcx ; jb 0x740b9 ; mov byte ptr [rax + rsi], r10b ; ret
0x0000000000072c09 : cmp rsi, rcx ; jne 0x72c08 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000eefe2 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000ef00a : cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000124fb7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001252b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001261b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000077456 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000018d1e5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; or byte ptr [rbp - 9], al ; jmp qword ptr [rdi]
0x0000000000125eb7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000147f79 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000016c8e9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffca5]
0x000000000016ca25 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call rsp
0x000000000016c8a5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp qword ptr [rax]
0x0000000000186b29 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rsi]
0x000000000016dd29 : cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; call rsp
0x00000000001205e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125bb7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001258b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001054bd : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub dword ptr [rax], eax ; test eax, eax ; je 0x1054cf ; ret
0x000000000007402a : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, edi ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000041033 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc r8b, byte ptr [r8] ; mov rax, rbx ; pop rbx ; ret
0x000000000017d265 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; out dx, eax ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000091910 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000016d279 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rax
0x00000000000e20dd : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov edi, 0x3880002b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d6f24 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000010af1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000067a15 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000038f2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x000000000011aa5f : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 4
0x00000000000038f1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000014bda9 : cmpxchg dword ptr [rip + 0x251b18], edx ; je 0x14bdbc ; ret
0x0000000000036193 : cqo ; idiv rsi ; ret
0x0000000000188b18 : cwde ; adc dh, dh ; call qword ptr [rdx]
0x0000000000078574 : cwde ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000011091f : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002892e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000033fa3 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000017c425 : cwde ; add byte ptr [rax], al ; js 0x17c3d3 ; out dx, eax ; call rsi
0x0000000000175ed8 : cwde ; add ch, ah ; call qword ptr [rdx]
0x0000000000188508 : cwde ; add dh, dh ; jmp qword ptr [rcx]
0x000000000011771c : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000b8f6e : cwde ; add rax, rdx ; jmp rax
0x0000000000022045 : cwde ; call 0x7e293
0x00000000001817c8 : cwde ; call rsi
0x0000000000192818 : cwde ; cdq ; sti ; jmp qword ptr [rdx]
0x000000000016cb0d : cwde ; cld ; jmp rax
0x00000000001863b9 : cwde ; cmc ; jmp qword ptr [rcx]
0x000000000016dc31 : cwde ; in al, dx ; call rsp
0x000000000014c62c : cwde ; in eax, dx ; dec dword ptr [rax] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000174148 : cwde ; jae 0x174139 ; call qword ptr [rax]
0x00000000001806f8 : cwde ; jle 0x1806f0 ; jmp qword ptr [rcx]
0x000000000017c998 : cwde ; leave ; out dx, eax ; call qword ptr [rdi]
0x0000000000175398 : cwde ; loope 0x175389 ; jmp qword ptr [rcx]
0x0000000000032894 : cwde ; mov dl, byte ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x00000000000df22f : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000009b044 : cwde ; nop dword ptr [rax] ; ret
0x0000000000176188 : cwde ; or esp, ebp ; jmp qword ptr [rdx]
0x0000000000185688 : cwde ; pop rax ; cmc ; jmp qword ptr [rcx]
0x0000000000174938 : cwde ; pushfq ; jmp 0x17493e
0x0000000000003afd : cwde ; ret
0x00000000000b7404 : cwde ; ret 0xfffb
0x000000000010245e : cwde ; shr rax, 4 ; ret
0x0000000000188148 : cwde ; sti ; cmc ; jmp qword ptr [rcx]
0x0000000000192901 : cwde ; sti ; jmp qword ptr [rdx]
0x0000000000073f62 : cwde ; xor al, byte ptr [rax] ; add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000092e59 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x0000000000090e41 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000092e5a : dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000090e42 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000007ad2b : dec byte ptr [rax + 0x39] ; ret 0x2f74
0x00000000000ff8fa : dec byte ptr [rax + 0xf] ; ret 0x8d48
0x000000000007afd1 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000521e8 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x0000000000039524 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x000000000007608c : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x000000000008cfb7 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x00000000001603df : dec dword ptr [rax + 0x10fff589] ; mov ebp, esi ; call qword ptr [rax]
0x000000000003965e : dec dword ptr [rax + 0x29] ; ret
0x0000000000092fda : dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000090f82 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000055848 : dec dword ptr [rax + 0x29] ; ret 0x840f
0x0000000000042541 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000009eb30 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000bf90d : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000057b75 : dec dword ptr [rax + 0x39] ; ret
0x000000000005cc4b : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000005bd3b : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000000b6a73 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x394c
0x00000000000b6aa8 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000b56a2 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000ec8ff : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x00000000000ec78d : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x000000000014c637 : dec dword ptr [rax + 0x48] ; in eax, dx ; push qword ptr [rax + 0x48] ; in eax, dx ; jmp rax
0x000000000005c8aa : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000b141b : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000554ee : dec dword ptr [rax + 0x63] ; ret
0x00000000000d16dd : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x0000000000080249 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000082284 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000364f2 : dec dword ptr [rax + 0xf] ; ret
0x00000000000d9f4b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000007ac51 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000ea25a : dec dword ptr [rax + 0xf] ; ret 0x8948
0x0000000000070589 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000011be46 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002bef9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000002e3c6 : dec dword ptr [rax + 1] ; ret
0x0000000000033ca3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000104c5f : dec dword ptr [rax - 0x39] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000044ee6 : dec dword ptr [rax - 0x39] ; ret
0x000000000008c9e6 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000ad8c3 : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x000000000015f523 : dec dword ptr [rax - 0x63] ; inc dword ptr [rdi] ; popfq ; call qword ptr [rax]
0x00000000000df22d : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000c3182 : dec dword ptr [rax - 0x73] ; ret
0x00000000000d2c9c : dec dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000101599 : dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000115c75 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000efb6e : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x00000000000bf77f : dec dword ptr [rax - 0x75] ; jl 0xbf7af ; jo 0xbf710 ; ret 0x8d01
0x0000000000081f28 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000dfd4a : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007b734 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000011575c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000114849 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000f017e : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x7d] ; ret
0x0000000000031cbd : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfedb
0x00000000001134e1 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; sahf ; ret
0x000000000014b64e : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x0000000000028c92 : dec dword ptr [rax - 0x77] ; ret
0x00000000000dfba3 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x0000000000022ca0 : dec dword ptr [rax - 0x77] ; ret 0x19e9
0x00000000000dfc9e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000bab0b : dec dword ptr [rax - 0x77] ; ret 0x1deb
0x0000000000056fe9 : dec dword ptr [rax - 0x77] ; ret 0x28e9
0x000000000005cc07 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000d0981 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x000000000006e773 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000000773e7 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000003417b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x000000000002db3b : dec dword ptr [rax - 0x77] ; ret 0x4e9
0x0000000000034021 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x00000000000b90ac : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x0000000000060c56 : dec dword ptr [rax - 0x77] ; ret 0x71e8
0x00000000000df59e : dec dword ptr [rax - 0x77] ; ret 0x7c77
0x000000000010f5f4 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000061b46 : dec dword ptr [rax - 0x77] ; ret 0x81e8
0x0000000000076431 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002d544 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000033383 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000002dba4 : dec dword ptr [rax - 0x77] ; ret 0x88e9
0x00000000000b455d : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000089536 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000047075 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000011c14f : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000005253b : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000b49fc : dec dword ptr [rax - 0x77] ; ret 0xbb
0x00000000000dd057 : dec dword ptr [rax - 0x77] ; ret 0xbceb
0x000000000008818d : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001014dc : dec dword ptr [rax - 0x77] ; ret 0xc8e9
0x000000000007abfe : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000633ff : dec dword ptr [rax - 0x77] ; ret 0xede9
0x00000000000633f7 : dec dword ptr [rax - 0x77] ; ret 0xf5e9
0x00000000000e325e : dec dword ptr [rax - 0x77] ; ret 0xff31
0x000000000010aa4a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000007608d : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00000000000a847d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000f46df : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000055da2 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x3c
0x000000000010769f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000e1b60 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000065f1c : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00000000000677e7 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00000000000e0f70 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rsi + 0x48], 0x89 ; ret
0x00000000000e61a6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00000000000e0f10 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rsi + 0x48], 0x89 ; ret
0x00000000000e918f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000088420 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000001190e0 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fdf87 : dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0xfdf97 ; ret
0x000000000002f2e4 : dec dword ptr [rax - 0x7d] ; ret
0x000000000002592c : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c6b71 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000000001113d9 : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x0000000000042ae1 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000048f15 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000000c124f : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000aabae : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x00000000000ffd0b : dec dword ptr [rax - 0x7d] ; ret 0x4a01
0x0000000000059e09 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000044f76 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x000000000006e218 : dec dword ptr [rax - 0x7f] ; ret
0x00000000001333bc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000074252 : dec dword ptr [rax - 9] ; ret 0xfbff
0x0000000000074242 : dec dword ptr [rax - 9] ; ret 0xfeff
0x000000000014c62f : dec dword ptr [rax] ; in eax, dx ; jmp qword ptr [rax]
0x00000000001634ef : dec dword ptr [rax] ; sub bh, bl ; call qword ptr [rax]
0x000000000015edff : dec dword ptr [rax] ; xchg dl, dh ; jmp qword ptr [rax]
0x000000000011b4dd : dec dword ptr [rbp + 0x28] ; add al, ch ; ret
0x0000000000038531 : dec dword ptr [rbp + 0xf] ; mov esi, 0x8349016a ; ret 0xe901
0x00000000000230b4 : dec dword ptr [rbp + rcx*4 + 0x35] ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rax + rax], 0xeb ; ret 0x3145
0x000000000008cb29 : dec dword ptr [rbp - 0x77] ; ret
0x00000000000a4afd : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000116e19 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x000000000011c91c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000172a0b : dec dword ptr [rbx + rbx - 0x1cc3ffff] ; std ; call rsp
0x00000000000bff08 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x000000000015ecab : dec dword ptr [rbx - 0x1f000e55] ; fdivr st(1), st(0) ; jmp qword ptr [rax]
0x0000000000159207 : dec dword ptr [rbx - 0x7a] ; in eax, dx ; dec dword ptr [rcx] ; xchg ch, ch ; call rsi
0x000000000005c9f7 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x000000000015e23b : dec dword ptr [rbx] ; out dx, al ; out dx, eax ; jmp rsp
0x000000000015fd8f : dec dword ptr [rbx] ; std ; hlt ; inc esi ; push rsp ; jmp qword ptr [rax]
0x000000000004736e : dec dword ptr [rcx + 0x29] ; ret
0x0000000000046f3c : dec dword ptr [rcx + 0x39] ; ret
0x0000000000045d13 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000000eceeb : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000065662 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000000f9156 : dec dword ptr [rcx + 0x51e82404] ; ret
0x00000000000290ec : dec dword ptr [rcx + 0x63] ; ret
0x000000000006929f : dec dword ptr [rcx + 0xd89e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x69243
0x000000000002f1c7 : dec dword ptr [rcx + 1] ; ret 0x8b48
0x00000000000762c0 : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x00000000000b9a75 : dec dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [rcx]
0x00000000000742e4 : dec dword ptr [rcx + rcx*4 - 0x30] ; ret
0x0000000000044bd9 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r15 ; call rax
0x000000000005e011 : dec dword ptr [rcx + rcx*4 - 1] ; call 0x6a306
0x0000000000053865 : dec dword ptr [rcx - 0x3f] ; sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00000000000dca93 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000f1b1f : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000d4864 : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000011c024 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000008cfb8 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x000000000007b118 : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff8f7 : dec dword ptr [rcx - 0x77] ; dec byte ptr [rax + 0xf] ; ret 0x8d48
0x0000000000056803 : dec dword ptr [rcx - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000011b5a5 : dec dword ptr [rcx - 0x77] ; in al, 0xe8 ; ret 0xf9bb
0x00000000000425e5 : dec dword ptr [rcx - 0x77] ; ret
0x000000000008cc78 : dec dword ptr [rcx - 0x77] ; ret 0x42eb
0x00000000000cc8bf : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000d75df : dec dword ptr [rcx - 0x77] ; ret 0x894c
0x00000000000481ee : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000005ab63 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc33ef773
0x00000000000380af : dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x00000000000c60ae : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x000000000003f20c : dec dword ptr [rcx] ; ret
0x00000000000ea79e : dec dword ptr [rcx] ; setbe al ; ret
0x000000000015920b : dec dword ptr [rcx] ; xchg ch, ch ; call rsi
0x000000000015e2bb : dec dword ptr [rdi - 9] ; out dx, eax ; jmp rsp
0x00000000001035e2 : dec dword ptr [rdi] ; add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000e7942 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x00000000000fc17d : dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x000000000002c536 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2c4c7 ; loopne 0x2c547 ; ret
0x00000000000eafed : dec dword ptr [rdi] ; mov bh, 4 ; js 0xeaf7e ; loopne 0xeaffe ; ret
0x00000000000402b1 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000116b70 : dec dword ptr [rdi] ; ret 0x3145
0x000000000002369b : dec dword ptr [rdi] ; ret 0x41c3
0x00000000000378f9 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000b0b11 : dec dword ptr [rdi] ; ret 0x8349
0x000000000006ba61 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000100afc : dec dword ptr [rdi] ; test al, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000061204 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ch ; ret
0x0000000000025680 : dec dword ptr [rdi] ; test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00000000000ca950 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x000000000011298a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000002568c : dec dword ptr [rdi] ; test byte ptr [rip - 0x8fffffd], bl ; ret 0
0x00000000000bd696 : dec dword ptr [rdi] ; test dl, dl ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000014ac90 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ff793 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x2041
0x00000000000d09fa : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006a97b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000075d55 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x62e9
0x00000000000cc1b1 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x000000000006d74e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000cc9bf : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000e629f : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000b8f0d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000016d19f : dec dword ptr [rdx + 0x30fffcbb] ; ret
0x000000000016f4d3 : dec dword ptr [rsi + rbp - 0x6393ffff] ; call rsp
0x000000000016d0e3 : dec dword ptr [rsi - 0x3d] ; cld ; dec esi ; ret 0xfffc
0x0000000000160177 : dec dword ptr [rsi - 0x52000ae4] ; sbb al, 0xf5 ; call qword ptr [rax]
0x000000000015910b : dec dword ptr [rsi] ; test ebp, ebp ; jmp rsp
0x000000000016ffa3 : dec dword ptr [rsp + rdi*2] ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff6
0x000000000016304f : dec eax ; lodsb al, byte ptr [rsi] ; cli ; dec eax ; lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x0000000000163053 : dec eax ; lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x000000000015dd6f : dec eax ; mov edi, gs ; call qword ptr [rcx]
0x000000000015dd6b : dec eax ; mov edi, gs ; dec eax ; mov edi, gs ; call qword ptr [rcx]
0x000000000004370d : dec ecx ; ret
0x000000000016d0e7 : dec esi ; ret 0xfffc
0x000000000016f12b : dec esp ; adc al, 1 ; add byte ptr [rcx + rax - 0xe], bh ; jmp rsp
0x00000000001720d3 : dec esp ; add al, byte ptr ds:[rax] ; pop rsp ; pop rdx ; cli ; jmp rsp
0x000000000016f9c3 : dec esp ; add qword ptr [r8], r8 ; in al, dx ; scasd eax, dword ptr [rdi] ; hlt ; jmp rsp
0x000000000017239b : dec esp ; add r8b, byte ptr [rax] ; in al, dx ; test edx, edi ; jmp rsp
0x0000000000171cc3 : dec esp ; and eax, dword ptr [rdx] ; add byte ptr [rdi + rbx*8], bl ; stc ; jmp rsp
0x0000000000170f53 : dec esp ; enter 1, -0x34 ; sbb edi, eax ; jmp rsp
0x0000000000160a07 : dec esp ; fcomi st(5) ; call qword ptr [rsi]
0x0000000000160a03 : dec esp ; fcomi st(5) ; dec esp ; fcomi st(5) ; call qword ptr [rsi]
0x000000000016e933 : dec esp ; in al, 0 ; add byte ptr [rbx + rdx*2 - 0x10], bl ; jmp rsp
0x000000000016348f : dec esp ; iretd ; cli ; jmp rsp
0x000000000016fe63 : dec esp ; jb 0x16fe70 ; add byte ptr [rdi + rsi - 0xa], ch ; jmp rsp
0x000000000016d633 : dec esp ; jno 0x16d63f ; add ah, ch ; int1 ; jmp 0x16d643
0x000000000016e4db : dec esp ; mov dword ptr [rax], 0xefd6ac00 ; jmp rsp
0x000000000016dcc3 : dec esp ; nop ; add byte ptr [rax], al ; sub al, 0x9c ; in al, dx ; jmp rsp
0x000000000016ef3b : dec esp ; or byte ptr [rcx], al ; add ah, bh ; push rcx ; int1 ; jmp rsp
0x00000000001710ab : dec esp ; rol byte ptr [rcx], 1 ; add byte ptr [rdi], bh ; clc ; jmp rsp
0x0000000000092fd9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x0000000000090f81 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000000a5efd : dec qword ptr [r8 - 0x39] ; ret 0xffff
0x000000000008c9e5 : dec qword ptr [rax - 0x39] ; ret 0xffff
0x000000000002592b : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008919f : div byte ptr [rbp + 0xa] ; jmp 0x8916a
0x000000000007e432 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000008d361 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000d9f21 : div dword ptr [rdi - 0x14] ; ret
0x00000000000d9ee9 : div dword ptr [rdi - 0x6c] ; pop rbx ; pop rbp ; ret
0x0000000000066460 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f96c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f63bf : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f9af : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f64bc : div ebx ; pop rbx ; pop rbp ; ret
0x0000000000049c25 : div ecx ; add eax, r8d ; ret
0x000000000009931a : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000016f3b9 : div edx ; call rsp
0x0000000000066966 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006645f : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f96b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f63be : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f9ae : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f64bb : div rbx ; pop rbx ; pop rbp ; ret
0x000000000001f957 : enter -0x1401, -0x3b ; ret
0x000000000008d26e : enter -0x208c, -0xd ; ret
0x000000000008f8d1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000001f947 : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000010b948 : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x0000000000050362 : enter -0x3eb8, -8 ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000b241e : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000014ae04 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000092e56 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000090e3e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000092fd6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000090f7e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000032948 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x000000000010b976 : enter -0x76b8, 0x17 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000072534 : enter -0x76ff, 3 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000005fa28 : enter -1, -0x77 ; ret
0x0000000000071da4 : enter -4, -1 ; call rax
0x000000000007af6c : enter 0, 0 ; call rax
0x000000000010daf9 : enter 0, 0 ; jmp rcx
0x00000000001091c6 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000737ba : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000032a9c : enter 0x280f, -0x3f ; ret
0x0000000000043a0e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007dc7d : enter 0x31c3, -0x40 ; ret
0x00000000000e5094 : enter 0x36e8, 0x67 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000011994e : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x000000000002cc91 : enter 0x415d, 0x5c ; ret
0x0000000000110437 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000110394 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000110464 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x00000000001739c6 : enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x0000000000110d0b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000110beb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x0000000000107753 : enter 0x5c2, 0 ; ret
0x000000000011996e : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054905 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x000000000007aec6 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000015cd1c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000003617d : enter 0x948, -0x30 ; ret
0x0000000000148026 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007c6a1 : enter 0xf66, -0x15 ; ret
0x000000000012318c : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000032a98 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x0000000000170f55 : enter 1, -0x34 ; sbb edi, eax ; jmp rsp
0x000000000018f385 : enter 1, -0x78 ; mov dh, 0xf7 ; call qword ptr [rdi]
0x00000000000966b4 : enter 5, 0 ; ret
0x000000000016e735 : fadd dword ptr [rax] ; add ah, bh ; and al, dh ; call rsp
0x00000000001803cd : fadd dword ptr [rax] ; add al, dl ; jbe 0x1803cb ; jmp rcx
0x00000000000f5786 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000072377 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000072723 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000003fd46 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f4765 : fadd dword ptr [rax] ; leave ; ret
0x0000000000116b90 : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00000000000c03e6 : fadd dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x0000000000068a40 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000adc33 : fadd dword ptr [rcx - 0x77] ; ret
0x0000000000193963 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000017daa8 : fadd dword ptr [rdi - 0x10] ; call qword ptr [rcx]
0x00000000000b140a : fadd qword ptr [r9] ; ret
0x000000000016e7fd : fadd qword ptr [rax] ; add byte ptr [rdi + rbp - 0x10], bh ; jmp rsp
0x00000000000c9176 : fadd qword ptr [rax] ; or byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x000000000018713c : fadd qword ptr [rbp + 1] ; add byte ptr [rax - 0x3c], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001602bc : fadd qword ptr [rbx] ; cmc ; call rcx
0x000000000016038c : fadd qword ptr [rbx] ; cmc ; jmp qword ptr [rsi]
0x00000000000b140b : fadd qword ptr [rcx] ; ret
0x0000000000192e3c : fadd qword ptr [rdx] ; add al, byte ptr [rax] ; jb 0x192e42 ; jmp qword ptr [rcx]
0x0000000000172960 : fadd qword ptr [rsi - 4] ; jmp rsp
0x000000000014b428 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000014937e : fadd st(3) ; ret
0x00000000000e6200 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000016ce58 : fadd st(6), st(0) ; cld ; ljmp ptr [rsi + rax*8 - 4] ; call qword ptr [rdx]
0x00000000000e3ddd : fbld dword ptr [rbx + rbp + 0x5c415d00] ; ret
0x0000000000147b71 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014bb3c : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a88e6 : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000015c358 : fcmovb st(0), st(3) ; ret
0x000000000002ae7e : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000001855f8 : fcom dword ptr [rdi - 0xb] ; jmp qword ptr [rcx]
0x0000000000190f38 : fcom dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x0000000000187f3c : fcom qword ptr [rbx + 1] ; add al, al ; stc ; cmc ; jmp qword ptr [rcx]
0x0000000000171e28 : fcom qword ptr [rbx] ; cli ; call rsp
0x0000000000187d3c : fcom qword ptr [rcx + 1] ; add al, dh ; out 0xf5, eax ; jmp qword ptr [rcx]
0x000000000018833c : fcom qword ptr [rdi + 1] ; add al, dh ; std ; cmc ; jmp qword ptr [rcx]
0x000000000017be3c : fcom qword ptr [rdx + 0x7cb00000] ; out dx, eax ; call qword ptr [rsi]
0x0000000000160a09 : fcomi st(5) ; call qword ptr [rsi]
0x0000000000160a05 : fcomi st(5) ; dec esp ; fcomi st(5) ; call qword ptr [rsi]
0x00000000000e0f47 : fcomp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000031aaa : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029537 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000336f8 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000003061c : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007b58c : fcomp dword ptr [rbx - 0x3d] ; nop ; xor eax, eax ; ret
0x00000000000789d4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000015d0d9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000000e3e6b : fcomp dword ptr [rdx + 0x5b] ; ret
0x000000000018443c : fcomp qword ptr [rax] ; add dword ptr [rax], eax ; jo 0x18440c ; hlt ; jmp qword ptr [rcx]
0x0000000000171700 : fcomp qword ptr [rax] ; stc ; jmp rsp
0x00000000000b2ca3 : fcomp qword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000015b340 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000016d548 : fcomp st(0), st(2) ; jmp 0x16d54e
0x000000000015ecb9 : fcompi st(1) ; jmp qword ptr [rax - 0x1f000e20]
0x000000000008d270 : fcompi st(3) ; ret
0x000000000006c676 : fcos ; dec dword ptr [rax + 0x29] ; ret
0x0000000000063135 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000172208 : fdiv qword ptr [rdx - 6] ; jmp rsp
0x00000000000a7664 : fdiv st(3) ; ret
0x000000000017e841 : fdiv st(4), st(0) ; call qword ptr [rax]
0x00000000001715c1 : fdivp st(0) ; call rsp
0x00000000000ad908 : fdivp st(7) ; dec dword ptr [rax - 0x7d] ; ret
0x000000000010b153 : fdivr qword ptr [rax + 1] ; pop rbx ; ret
0x000000000017e83c : fdivr qword ptr [rax + rax - 0x3231000] ; call qword ptr [rax]
0x000000000017653c : fdivr qword ptr [rcx] ; add byte ptr [rax], al ; push rax ; adc ebp, esp ; call qword ptr [rax]
0x000000000015ecb1 : fdivr st(1), st(0) ; jmp qword ptr [rax]
0x0000000000171d68 : fdivr st(1), st(0) ; stc ; jmp rsp
0x000000000016f2c9 : fdivr st(2), st(0) ; jmp rsp
0x000000000015a695 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001701a9 : fdivr st(6), st(0) ; call rsp
0x00000000001456fd : fdivr st(7) ; ret
0x0000000000093d0e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000160afd : fdivrp st(5) ; jmp rsp
0x00000000000eebae : fdivrp st(6) ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000170da1 : fdivrp st(7) ; jmp rsp
0x000000000016e79d : fiadd dword ptr [rax] ; add byte ptr [rsi - 0x10], ch ; call rsp
0x00000000000dab32 : fiadd dword ptr [rbx + 0x2e8247c] ; cmove eax, edx ; ret
0x00000000000f456f : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x00000000000a88f7 : fiadd dword ptr [rdi + rcx - 0x49] ; pop rdi ; adc byte ptr [rcx], ch ; ret 0x428d
0x00000000000ae808 : fiadd word ptr [r9] ; ret
0x00000000000fe9b2 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000ae809 : fiadd word ptr [rcx] ; ret
0x000000000016cc9c : ficom dword ptr [rbp - 0x6a950004] ; cld ; call qword ptr [rax]
0x00000000000c000d : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e4a39 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000015cf26 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000014bfc8 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x000000000003fbac : fidiv dword ptr [rip + 0x4c64100] ; adc byte ptr [rax], al ; ret
0x000000000011c7a5 : fidivr dword ptr [rax + 1] ; ret
0x0000000000180755 : fild dword ptr [rax] ; add al, bh ; jg 0x180753 ; call rsi
0x00000000000d59c5 : fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000d3656 : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000000fe9bb : fild dword ptr [rbx - 0x6bf0fe03] ; ret
0x00000000000a8831 : fild dword ptr [rcx - 0x7d] ; ret
0x00000000000bd305 : fild word ptr [rbx - 0x6bf0bf06] ; ret 0xd008
0x00000000000df406 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x0000000000049c18 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000171385 : fild word ptr [rcx] ; add ah, cl ; xchg eax, esi ; clc ; jmp rsp
0x00000000001598d4 : fild word ptr [rdx - 0x7d010012] ; out dx, al ; jmp qword ptr [rax]
0x000000000008b775 : fimul dword ptr [rax + 0x29] ; ret 0x148
0x0000000000023c80 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000038f20 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000011e866 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006ba50 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000b0b0e : fimul dword ptr [rax - 0x7b] ; dec dword ptr [rdi] ; ret 0x8349
0x00000000000aeb66 : fimul dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x48 ; ret 0x8349
0x0000000000030040 : fimul dword ptr [rax - 0x7d] ; ret
0x00000000000fcb6b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000081f52 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000007b737 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000007b913 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x000000000010b236 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000001444a2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a53c1
0x0000000000145522 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a6441
0x00000000000bffd7 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000011575f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000006edce : fimul word ptr [rax - 0x77] ; ret
0x000000000009e228 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000057a71 : fimul word ptr [rax - 0x7d] ; ret
0x0000000000078891 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x00000000000420fe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x42158
0x000000000004383e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x43898
0x0000000000077d1f : fimul word ptr [rbp - 0x77] ; ret 0xe889
0x00000000000bc043 : fimul word ptr [rbx - 0x7cb7fbad] ; ret
0x0000000000039527 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x0000000000023d7d : fimul word ptr [rcx + 0x39] ; ret
0x000000000007b81d : fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x0000000000112f3e : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000011484c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x0000000000039521 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x000000000006a496 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006a397 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000001148f1 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000070621 : fistp word ptr [rbx + 0x5d] ; pop r12 ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000112018 : fistp word ptr [rbx - 0x17] ; imul ebx, eax, 0x5b90fff0 ; ret
0x00000000000747b2 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000b09c8 : fisttp dword ptr [rax + 0x39] ; ret
0x000000000009e95d : fisttp dword ptr [rax + 0x63] ; ret
0x000000000014bfc5 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000042cd1 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000000e991e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2b191a ; pop rbx ; ret
0x0000000000042ceb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000056389 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x000000000005fa24 : fisttp dword ptr [rdi] ; test dword ptr [rax - 0x76000038], eax ; ret
0x00000000000415d4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x0000000000033f8f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000039603 : fisttp qword ptr [rax + 0x29] ; ret
0x0000000000078f06 : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000123272 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000008116a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x00000000000ee602 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x00000000000ee605 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x0000000000031aba : fisttp word ptr [rax - 0x39] ; ret
0x000000000011c38c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000f0333 : fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x00000000000521eb : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000008dae1 : fisttp word ptr [rax - 0x77] ; ret 0xe6e8
0x000000000014bcc9 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000f0181 : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000042d6f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000001131f2 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x00000000000eedaa : fisttp word ptr [rcx + rcx*4 - 6] ; mov rsi, r13 ; call r14
0x00000000000ee699 : fisttp word ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x00000000001037ad : fisttp word ptr [rdi] ; test ch, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000123c7d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000d09b8 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x0000000000147f41 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c7931 : fisub dword ptr [rsi - 0x7f] ; loop 0xc793c ; add esi, esi ; ret
0x0000000000147c41 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009b793 : fisubr dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001266dc : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000016e82d : fld qword ptr [rax] ; add byte ptr [rbx + rsi - 0x10], ch ; call rsp
0x000000000015b381 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000032d7e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000032e38 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000032d19 : fld xword ptr [rsp + 8] ; ret
0x0000000000032e09 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000032de7 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000cba37 : fld1 ; ret
0x0000000000032f89 : fldcw word ptr [rsp - 2] ; ret
0x00000000001232b0 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000814a9 : fldenv dword ptr [rsi + 0xf] ; je 0x81506 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000088d97 : fldenv dword ptr [rsi + 0xf] ; je 0x88df4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000147fc1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000813a1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000174fb9 : fldpi ; call qword ptr [rdx]
0x0000000000174f89 : fldpi ; jmp qword ptr [rcx]
0x00000000000421a4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000007ae02 : fmul dword ptr [rax + 0x21] ; ret
0x00000000000ae816 : fmul dword ptr [rax + 0x39] ; ret
0x0000000000023ff4 : fmul dword ptr [rax + 0xf] ; ret
0x00000000000b9ac2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000006c61b : fmul dword ptr [rax - 0x77] ; ret
0x000000000005ebb5 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000024eef : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000006ef3e : fmul dword ptr [rcx + 0x21] ; ret
0x00000000000881bd : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000106af6 : fmul dword ptr [rcx + rcx*4 - 0xf] ; mov rdi, r13 ; call r12
0x0000000000044a90 : fmul dword ptr [rdi] ; ret
0x0000000000185148 : fmul dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000000e97ef : fmul qword ptr [rax + 0x39] ; ret
0x00000000000a0239 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000b3aab : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000038c9c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000000b7423 : fmul qword ptr [rcx + rcx*4 - 0x19] ; call 0x736b6
0x000000000007ca39 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008287f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000003c9cc : fmul st(0) ; ret
0x0000000000177da8 : fmul st(1) ; in eax, dx ; jmp qword ptr [rax]
0x000000000003c944 : fmulp st(1) ; ret
0x0000000000002532 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000032f66 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000182a71 : fpatan ; call qword ptr [rsi]
0x0000000000031a45 : fpatan ; ret
0x0000000000187899 : fprem1 ; jmp rax
0x0000000000147d41 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000032e3c : fscale ; fstp st(1) ; ret
0x000000000003e073 : fst dword ptr [rdx] ; add cl, ch ; ret 0xfff3
0x000000000015b067 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000000894ee : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000073787 : fstp dword ptr [rdi + 0x32] ; add byte ptr [rax], al ; ret
0x0000000000032f68 : fstp st(0) ; and eax, 0x200 ; ret
0x000000000015b3e0 : fstp st(0) ; ret 0xde5d
0x0000000000032f10 : fstp st(1) ; add rsp, 8 ; ret
0x0000000000032e3e : fstp st(1) ; ret
0x0000000000032d80 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000032e0d : fstp xword ptr [rdi] ; ret
0x0000000000020914 : fsub dword ptr [rcx + rax*2 - 0x77] ; add ebx, ebp ; ret 0x1f0f
0x0000000000033548 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000033228 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000032f69 : fsub dword ptr [rip + 0x200] ; ret
0x0000000000148041 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008fcb4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000170700 : fsub qword ptr [rbx - 9] ; call rsp
0x00000000000b8142 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x0000000000172170 : fsub qword ptr [rdx - 6] ; call rsp
0x000000000017513c : fsub qword ptr [rip - 0x21e00000] ; jmp 0x17514a
0x0000000000098aab : fsub qword ptr [rsi + 0xf] ; jmp 0x98a77
0x0000000000147e41 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007c7bc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000019163c : fsub st(2), st(0) ; add dword ptr [rax], eax ; and byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x0000000000172d59 : fsub st(2), st(0) ; call qword ptr [rcx]
0x000000000010610b : fsub st(3), st(0) ; mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000014cba1 : fsub st(5), st(0) ; jmp rax
0x00000000001756c8 : fsub st(6) ; jmp 0x1756ce
0x000000000016fac8 : fsub st(6), st(0) ; hlt ; call rsp
0x0000000000187d28 : fsub st(7) ; cmc ; jmp qword ptr [rcx]
0x00000000000f1207 : fsubp st(0) ; ret
0x0000000000032d82 : fsubp st(1) ; ret
0x0000000000175141 : fsubp st(3) ; call qword ptr [rax]
0x0000000000175189 : fsubp st(3) ; jmp qword ptr [rsi]
0x00000000000ff044 : fsubr dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000171168 : fsubr qword ptr [rbx - 8] ; call rsp
0x00000000000a62fb : fsubr qword ptr [rcx] ; ret
0x000000000018563c : fsubr qword ptr [rdx] ; add dword ptr [rax], eax ; and byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x000000000018593c : fsubr qword ptr [rip + 0x65000001] ; cmc ; jmp qword ptr [rcx]
0x0000000000180d3c : fsubr st(1), st(0) ; add byte ptr [rax], al ; rcl ch, 0xf2 ; call qword ptr [rax]
0x0000000000178891 : fsubr st(6) ; call qword ptr [rax]
0x00000000001788d9 : fsubr st(6) ; call rdi
0x000000000015d0b8 : fucom st(5) ; loop 0x15d111 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000172c91 : fucomi st(2) ; call qword ptr [rax]
0x0000000000172c49 : fucomi st(2) ; call qword ptr [rsi]
0x00000000001750e9 : fucomp st(3) ; call qword ptr [rcx]
0x000000000014cbad : fucomp st(5) ; call qword ptr [rax]
0x000000000014cb8d : fucomp st(5) ; jmp qword ptr [rax]
0x000000000014cb89 : fucomp st(5) ; push qword ptr [rax] ; fucomp st(5) ; jmp qword ptr [rax]
0x000000000014cb9d : fucomp st(5) ; push rax ; fsub st(5), st(0) ; jmp rax
0x00000000000666de : fucompi st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000fe35a : fucompi st(0) ; and byte ptr [rbx - 0x3f7affff], 0x89 ; ret 0x4078
0x000000000006d3ad : fucompi st(0) ; lodsd eax, dword ptr [rsi] ; add byte ptr [r8], r8b ; mov edx, eax ; jmp 0x6d356
0x00000000000bca5a : fucompi st(0) ; nop ; loope 0xbca69 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000b40cd : fucompi st(0) ; or eax, 0x48000687 ; mov eax, ebx ; call rax
0x000000000006dcfd : fucompi st(0) ; pop rbp ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x6dca6
0x00000000000fe3d2 : fucompi st(0) ; push -0x76000003 ; ret 0x8aeb
0x000000000002ae37 : fucompi st(0) ; ret
0x00000000000e3008 : fucompi st(0) ; ret 0xf638
0x00000000000fbec8 : fucompi st(0) ; ret 0xf678
0x0000000000031cc0 : fucompi st(0) ; ret 0xfedb
0x00000000000f86e8 : fucompi st(0) ; ret 6
0x00000000001134e4 : fucompi st(0) ; sahf ; ret
0x00000000000fe9af : fucompi st(0) ; sub ebx, esi ; add dword ptr [rax], eax ; mov rdi, r12 ; call rbx
0x00000000000b8f10 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000018201d : hlt ; add byte ptr [rax], al ; jo 0x18207e ; jmp qword ptr [rcx]
0x0000000000187154 : hlt ; add dword ptr [r8], r8d ; mov ah, al ; cmc ; jmp qword ptr [rcx]
0x0000000000191fed : hlt ; add dword ptr [rax], eax ; mov al, 0x35 ; clc ; jmp qword ptr [rbx]
0x00000000000e5d6b : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015fd06 : hlt ; call qword ptr [rbp + rsi*8 - 0xc]
0x00000000001843aa : hlt ; call qword ptr [rbx]
0x000000000018454a : hlt ; call qword ptr [rdi]
0x000000000018459a : hlt ; call qword ptr [rdx]
0x00000000001843ea : hlt ; call qword ptr [rsi]
0x000000000015ff9a : hlt ; call rbx
0x00000000001845b2 : hlt ; call rdx
0x000000000015faca : hlt ; call rsp
0x0000000000176554 : hlt ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], cl ; in al, dx ; call qword ptr [rdx]
0x000000000008d21b : hlt ; cmp ecx, esi ; je 0x8d216 ; ret
0x00000000000db011 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e918e : hlt ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000015fd8e : hlt ; dec dword ptr [rbx] ; std ; hlt ; inc esi ; push rsp ; jmp qword ptr [rax]
0x000000000016f9c2 : hlt ; dec esp ; add qword ptr [r8], r8 ; in al, dx ; scasd eax, dword ptr [rdi] ; hlt ; jmp rsp
0x0000000000180754 : hlt ; fild dword ptr [rax] ; add al, bh ; jg 0x180754 ; call rsi
0x000000000016fa62 : hlt ; inc dword ptr [rdx + rdx*2 + 1] ; add ah, bh ; ret 0xfff4
0x000000000015fd92 : hlt ; inc esi ; push rsp ; jmp qword ptr [rax]
0x000000000015b468 : hlt ; jmp 0x15b43d
0x000000000015fd96 : hlt ; jmp qword ptr [rax]
0x000000000015f992 : hlt ; jmp qword ptr [rbp - 0x3d]
0x000000000018442a : hlt ; jmp qword ptr [rcx]
0x00000000001837f2 : hlt ; jmp qword ptr [rdi]
0x000000000015f9ae : hlt ; jmp qword ptr [rsi]
0x0000000000183d1a : hlt ; jmp rcx
0x000000000015fa26 : hlt ; jmp rsp
0x000000000014b305 : hlt ; jne 0x14b427 ; ret
0x000000000014b304 : hlt ; jne 0x14b428 ; ret
0x00000000000d3ede : hlt ; jne 0xd3ed6 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d3edd : hlt ; jne 0xd3ed7 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d91a6 : hlt ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000016fa92 : hlt ; ljmp ptr [rbx + rdx*2 - 0x37c3ffff] ; hlt ; call rsp
0x000000000015ff96 : hlt ; ljmp ptr [rdi - 0x19] ; hlt ; call rbx
0x00000000001337fa : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bafe : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014a913 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000000de04b : hlt ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000017250c : hlt ; push rdi ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x0000000000050da8 : hlt ; ret
0x000000000017ee54 : hlt ; ret 0
0x000000000018ee54 : hlt ; ret 1
0x000000000011aa03 : hlt ; ret 4
0x00000000000bab08 : hlt ; sbb bh, ah ; dec dword ptr [rax - 0x77] ; ret 0x1deb
0x000000000015b5a3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000185954 : hlt ; sub eax, 0x65180001 ; cmc ; jmp qword ptr [rcx]
0x000000000014a917 : hlt ; sub eax, edx ; ret
0x0000000000003cd9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000182354 : hlt ; test dword ptr [rax], 0xf3607800 ; jmp qword ptr [rcx]
0x000000000017c154 : hlt ; xchg eax, ebp ; add byte ptr [rax], al ; popfq ; cmp edx, ebp ; jmp qword ptr [rax]
0x0000000000186154 : hlt ; xor eax, 0x93480001 ; cmc ; call rdx
0x0000000000176154 : hlt ; xor eax, 0x9780000 ; in al, dx ; jmp qword ptr [rbx]
0x00000000000c4b9b : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xc4b3e ; pop rbx ; ret
0x00000000000747d9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x000000000018e031 : idiv al ; call qword ptr [rax]
0x00000000000eebaf : idiv al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000160ee6 : idiv bh ; add byte ptr [rsi + rsi*8 - 0x953ff01], ch ; call rax
0x000000000016ffaa : idiv bh ; and al, 0x7c ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; ret 0xfff6
0x000000000005d3f7 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e325c : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xff31
0x0000000000043712 : idiv bh ; dec ecx ; ret
0x000000000016fd4a : idiv bh ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; adc esi, esi ; call rsp
0x000000000016ffc2 : idiv bh ; mov esp, 0x3c00017c ; ret
0x00000000001701a2 : idiv bh ; mov esp, 0x8c000183 ; fdivr st(6), st(0) ; call rsp
0x00000000000e38d1 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000000b30db : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000016ffa2 : idiv bh ; or al, 0x7c ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff6
0x0000000000160f12 : idiv bh ; or dl, 0xf6 ; jmp qword ptr [rdx]
0x00000000000e3e66 : idiv bh ; pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x0000000000160f0e : idiv bh ; push rdi ; retf 0xfff6 ; or dl, 0xf6 ; jmp qword ptr [rdx]
0x0000000000160d2a : idiv bh ; ret
0x0000000000161454 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000016bf01 : idiv bl ; call rax
0x000000000016bee1 : idiv bl ; inc dword ptr [rax] ; clc ; sti ; jmp rax
0x000000000016bec1 : idiv bl ; push qword ptr [rax] ; clc ; sti ; call qword ptr [rax]
0x0000000000023696 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000005d3f6 : idiv dil ; dec dword ptr [rax - 0x77] ; ret
0x0000000000172751 : idiv dl ; call rsp
0x000000000016bf65 : idiv ebx ; jmp rax
0x000000000016bf45 : idiv ebx ; push qword ptr [rax] ; stc ; sti ; call qword ptr [rax]
0x00000000000a64ce : idiv edi ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000e5565 : idiv edi ; add rsp, 0x408 ; ret
0x0000000000104a48 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000004370b : idiv edi ; dec ecx ; ret
0x00000000000d16d7 : idiv edi ; inc dword ptr [rcx - 0x73] ; push rsi ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x0000000000170e92 : idiv edi ; insb byte ptr [rdi], dx ; ret 1
0x0000000000170c72 : idiv edi ; lodsb al, byte ptr [rsi] ; mov dh, 1 ; add ah, ch ; ret
0x0000000000170412 : idiv edi ; mov esp, 0x2c000191 ; sub esi, edi ; call rsp
0x0000000000170bc2 : idiv edi ; mov esp, 0x2c0001b3 ; mov bh, 0xf7 ; call rsp
0x00000000001702f2 : idiv edi ; mov esp, 0xc00018c ; sbb bh, dh ; jmp rsp
0x00000000001706fa : idiv edi ; mov esp, 0xdc00019e ; movsxd rsi, edi ; call rsp
0x00000000001709e2 : idiv edi ; mov esp, 0xec0001ad ; test al, 0xf7 ; call rsp
0x00000000000a648a : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000105a7e : idiv edi ; xor eax, eax ; ret
0x0000000000036196 : idiv esi ; ret
0x0000000000036195 : idiv rsi ; ret
0x00000000000c780f : imul al ; jnp 0xc77bc ; sti ; call rcx
0x00000000000f1639 : imul al ; xchg eax, ecx ; loopne 0xf1644 ; dec dword ptr [rcx] ; ret
0x00000000000ed104 : imul byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000093508 : imul cl ; ret 8
0x000000000010d164 : imul dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000006eae0 : imul eax ; pop rdx ; ret 6
0x00000000000b2fc7 : imul eax ; ret
0x00000000000f5998 : imul eax ; ret 0xf2af
0x00000000000c7d88 : imul eax ; ret 0xfffa
0x000000000016d505 : imul eax, dword ptr [rax], 0 ; pop rsp ; ret
0x00000000000d1a0f : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xabe9
0x0000000000149471 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000001896d5 : imul eax, dword ptr [rcx], 0 ; or byte ptr [rbx - 0xa], al ; call rsi
0x00000000000a31c5 : imul ebx, dword ptr [rax], -0x47 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000eecb5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074456 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011201b : imul ebx, eax, 0x5b90fff0 ; ret
0x0000000000088b64 : imul ecx, dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000eec55 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019131b : imul ecx, dword ptr [rsi], 0x38 ; ret
0x000000000015e0d9 : imul edi ; call qword ptr [rax]
0x000000000015e0e9 : imul edi ; jmp rax
0x000000000015e2bd : imul edi ; jmp rsp
0x00000000000eeb8f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eec85 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000002b84 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003aa0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000c1e47 : imul esi, dword ptr [rcx + rsi], -0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043711 : imul esi, esi, -1 ; dec ecx ; ret
0x00000000000a8744 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000009424c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000015e2bc : imul r15 ; jmp rsp
0x000000000014b338 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000e7be1 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x000000000016e935 : in al, 0 ; add byte ptr [rbx + rdx*2 - 0x10], bl ; jmp rsp
0x0000000000174144 : in al, 0x15 ; add byte ptr [rax], al ; cwde ; jae 0x17413d ; call qword ptr [rax]
0x0000000000179cbc : in al, 0x19 ; add byte ptr [rax], al ; xor byte ptr [rdi + rbp*8], dl ; call qword ptr [rax]
0x0000000000184544 : in al, 0x19 ; add dword ptr [rax], eax ; mov ah, al ; hlt ; call qword ptr [rdi]
0x00000000001729ec : in al, 0x1a ; add dword ptr [rax], eax ; in al, dx ; ret
0x0000000000184f44 : in al, 0x23 ; add dword ptr [rax], eax ; clc ; cmc ; call qword ptr [rax]
0x0000000000185144 : in al, 0x25 ; add dword ptr [rax], eax ; fmul dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00000000000c006b : in al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000175f44 : in al, 0x33 ; add byte ptr [rax], al ; or byte ptr [rbx], al ; in al, dx ; jmp qword ptr [rsi]
0x000000000008d26b : in al, 0x41 ; cmp eax, ecx ; je 0x8d257 ; ret
0x0000000000188144 : in al, 0x55 ; add dword ptr [rax], eax ; cwde ; sti ; cmc ; jmp qword ptr [rcx]
0x0000000000188444 : in al, 0x58 ; add dword ptr [rax], eax ; mov bh, bh ; cmc ; jmp qword ptr [rcx]
0x000000000007c5bc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000c3b1a : in al, 0x74 ; sbb dword ptr [rbp - 0x73], eax ; outsd dx, dword ptr [rsi] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000098f9e : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000005ff00 : in al, 0x89 ; popfq ; mov eax, 0xe9fffffa ; lahf ; ret
0x0000000000193644 : in al, 0xa ; add al, byte ptr [rax] ; js 0x1935e2 ; clc ; call qword ptr [rdi]
0x00000000000b9b39 : in al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000181344 : in al, 0xe7 ; add byte ptr [rax], al ; sbb byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x000000000011b5a8 : in al, 0xe8 ; ret 0xf9bb
0x0000000000175569 : in al, 0xeb ; jmp qword ptr [rcx]
0x0000000000045de8 : in al, 0xf ; lahf ; ret
0x00000000000d34ed : in al, 0xf ; test dh, dh ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000015ecc9 : in al, 0xf1 ; jmp qword ptr [rax - 0x1f000e1b]
0x00000000001337da : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000081d3b : in al, 0xf3 ; ret
0x0000000000192344 : in al, 0xf7 ; add dword ptr [rax], eax ; pop rax ; cmp al, bh ; call qword ptr [rdx]
0x000000000015e238 : in al, 0xfa ; out dx, eax ; dec dword ptr [rbx] ; out dx, al ; out dx, eax ; jmp rsp
0x000000000015e2b8 : in al, 0xfa ; out dx, eax ; dec dword ptr [rdi - 9] ; out dx, eax ; jmp rsp
0x000000000015e290 : in al, 0xfa ; out dx, eax ; jmp qword ptr [rdx - 0x1b001018]
0x000000000015e258 : in al, 0xfa ; out dx, eax ; jmp qword ptr [rsi - 0x1b001010]
0x000000000015e188 : in al, 0xfa ; out dx, eax ; jmp rsp
0x000000000016bff1 : in al, 0xfb ; call rax
0x0000000000094d88 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000000efca6 : in al, dx ; adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x0000000000170e98 : in al, dx ; add al, bh ; inc esp ; ret 1
0x0000000000067a0f : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000416b7 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; jmp qword ptr [rsi]
0x00000000000757f3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000732f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x80a
0x00000000000f95f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xffa7
0x0000000000067b60 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 8
0x000000000005ec60 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x8304
0x00000000001817c5 : in al, dx ; add byte ptr [rax], al ; cwde ; call rsi
0x00000000001917cd : in al, dx ; add dword ptr [rax], eax ; loopne 0x191802 ; clc ; call qword ptr [rdx]
0x0000000000045de4 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000011df30 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000017636a : in al, dx ; call qword ptr [rax]
0x0000000000175e12 : in al, dx ; call qword ptr [rcx]
0x0000000000175dfa : in al, dx ; call qword ptr [rdx]
0x000000000017627a : in al, dx ; call qword ptr [rsi]
0x000000000017663a : in al, dx ; call rax
0x000000000016d7fa : in al, dx ; call rsp
0x000000000018674c : in al, dx ; cmp eax, dword ptr [rcx] ; add al, dh ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000016dcc2 : in al, dx ; dec esp ; nop ; add byte ptr [rax], al ; sub al, 0x9c ; in al, dx ; jmp rsp
0x0000000000043ae9 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000016d7f2 : in al, dx ; inc dword ptr [rbx + rdi*2 + 0x527c0000] ; in al, dx ; call rsp
0x000000000016d638 : in al, dx ; int1 ; jmp 0x16d63e
0x00000000000c1fb2 : in al, dx ; jl 0xc1fe9 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000176172 : in al, dx ; jmp qword ptr [rax]
0x000000000017615a : in al, dx ; jmp qword ptr [rbx]
0x000000000017618a : in al, dx ; jmp qword ptr [rdx]
0x0000000000175f4a : in al, dx ; jmp qword ptr [rsi]
0x000000000017698a : in al, dx ; jmp rax
0x000000000016d95a : in al, dx ; jmp rsp
0x00000000000e1f33 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000012bafa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008d363 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x0000000000114a14 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000133bda : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000e1194 : in al, dx ; or al, ch ; cmc ; sar cl, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c17d6 : in al, dx ; or al, ch ; ret
0x000000000007dfc7 : in al, dx ; or al, ch ; ret 2
0x00000000001076f1 : in al, dx ; or al, ch ; sbb byte ptr [rcx - 0x76b7000f], al ; ret
0x0000000000065ff6 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000077677 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000011ec54 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001173ed : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000da6d2 : in al, dx ; or dh, dh ; ret 0x7540
0x000000000015e159 : in al, dx ; out dx, eax ; call qword ptr [rax]
0x000000000015e155 : in al, dx ; out dx, eax ; inc dword ptr [rbp - 0x14] ; out dx, eax ; call qword ptr [rax]
0x000000000018824c : in al, dx ; push rsi ; add dword ptr [rax], eax ; sar ah, 1 ; cmc ; jmp qword ptr [rcx]
0x000000000008d16b : in al, dx ; ret
0x0000000000050f50 : in al, dx ; ret 0x10
0x000000000016f060 : in al, dx ; ret 0xfff1
0x000000000016d028 : in al, dx ; ret 0xfffc
0x000000000006ea50 : in al, dx ; ret 6
0x00000000000f6462 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d19dbc
0x00000000000da351 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000016f9c8 : in al, dx ; scasd eax, dword ptr [rdi] ; hlt ; jmp rsp
0x000000000018574c : in al, dx ; sub eax, dword ptr [rcx] ; add al, dh ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001709e8 : in al, dx ; test al, 0xf7 ; call rsp
0x00000000001723a0 : in al, dx ; test edx, edi ; jmp rsp
0x000000000016f4c0 : in al, dx ; xchg eax, ebp ; call rsp
0x000000000017c04c : in al, dx ; xchg eax, esp ; add byte ptr [rax], al ; mov al, 3 ; std ; jmp rsp
0x000000000015cafe : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15ca91 ; ret 0x48f
0x000000000015cafd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15ca92 ; ret 0x48f
0x000000000010b623 : in al, dx ; xor dh, dh ; ret 0xc707
0x0000000000116440 : in al, dx ; xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015b203 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000081e7a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000043ff2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000000f0f3a : in eax, 0x4d ; mov esp, ebx ; jmp 0xf0f54
0x00000000000f45d5 : in eax, 0x5d ; ret
0x000000000015a499 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000010eeb2 : in eax, 0x74 ; sub eax, 0x8948f631 ; out 0x89, eax ; ret
0x0000000000040aeb : in eax, 0x77 ; adc ebp, ecx ; ret
0x0000000000003aa2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000c694a : in eax, 0x89 ; ret
0x000000000010aa47 : in eax, 0xcd ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000004c5b3 : in eax, 0xdf ; loopne 0x4c544 ; ret 0xe680
0x000000000004e234 : in eax, 0xdf ; loopne 0x4e1c5 ; ret 0xe680
0x000000000015d0b9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000009b042 : in eax, 0xeb ; cwde ; nop dword ptr [rax] ; ret
0x000000000009a573 : in eax, 0xf ; je 0x9a598 ; add rax, 2 ; ret
0x000000000015eccd : in eax, 0xf1 ; jmp rax
0x000000000013385a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000086f4a : in eax, 0xf3 ; ret
0x0000000000190071 : in eax, 0xf7 ; call qword ptr [rdx]
0x000000000016bff5 : in eax, 0xfb ; jmp qword ptr [rax]
0x000000000015c581 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000a0235 : in eax, dx ; add dword ptr [rcx - 0x77], ecx ; fmul qword ptr [rax - 0x77] ; ret
0x00000000000fe09a : in eax, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014cbae : in eax, dx ; call qword ptr [rax]
0x00000000001778ea : in eax, dx ; call qword ptr [rcx]
0x00000000001590b6 : in eax, dx ; call rcx
0x0000000000177a02 : in eax, dx ; call rdi
0x0000000000177c72 : in eax, dx ; call rdx
0x000000000015920e : in eax, dx ; call rsi
0x000000000016ddf2 : in eax, dx ; call rsp
0x000000000014c636 : in eax, dx ; dec dword ptr [rax + 0x48] ; in eax, dx ; push qword ptr [rax + 0x48] ; in eax, dx ; jmp rax
0x000000000014c62e : in eax, dx ; dec dword ptr [rax] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000159206 : in eax, dx ; dec dword ptr [rbx - 0x7a] ; in eax, dx ; dec dword ptr [rcx] ; xchg ch, ch ; call rsi
0x000000000015920a : in eax, dx ; dec dword ptr [rcx] ; xchg ch, ch ; call rsi
0x000000000015910a : in eax, dx ; dec dword ptr [rsi] ; test ebp, ebp ; jmp rsp
0x000000000014cb86 : in eax, dx ; inc dword ptr [rax - 0x23] ; in eax, dx ; push qword ptr [rax] ; fucomp st(5) ; jmp qword ptr [rax]
0x000000000014cb9a : in eax, dx ; inc dword ptr [rax] ; fucomp st(5) ; push rax ; fsub st(5), st(0) ; jmp rax
0x000000000016de2a : in eax, dx ; inc dword ptr [rbx + rbx*4 + 0x40cc0000] ; in eax, dx ; jmp rsp
0x000000000016ddea : in eax, dx ; inc dword ptr [rcx + rbx*4 + 0x298c0000] ; in eax, dx ; call rsp
0x0000000000159106 : in eax, dx ; inc ebx ; test ch, ch ; dec dword ptr [rsi] ; test ebp, ebp ; jmp rsp
0x000000000014c632 : in eax, dx ; jmp qword ptr [rax]
0x000000000014c63e : in eax, dx ; jmp rax
0x00000000001590e6 : in eax, dx ; jmp rbx
0x000000000015910e : in eax, dx ; jmp rsp
0x000000000014b722 : in eax, dx ; jne 0x14b711 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014bb8f : in eax, dx ; jne 0x14bb71 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f6489 : in eax, dx ; jne 0xf64a1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014c62a : in eax, dx ; lcall ptr [rax + 0x8ffed48] ; in eax, dx ; jmp qword ptr [rax]
0x00000000001590e2 : in eax, dx ; lcall ptr [rax - 0x7b] ; in eax, dx ; jmp rbx
0x00000000000989c2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000016dfb2 : in eax, dx ; ljmp ptr [rsp] ; add byte ptr [rax], al ; cld ; ret 0xffed
0x0000000000098389 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009839f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000983c1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000983df : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000983ff : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000098425 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000098441 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000098461 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000098481 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000984a7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000984c9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000984e7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000098507 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000098523 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000098543 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000098563 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000098583 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000985a9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000985f9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000982cf : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000982ed : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009830d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009832f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009834f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009836f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000098205 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000098217 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009822d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000098245 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009825b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009826d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009828b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000098297 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000982ad : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000981f1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000011af3c : in eax, dx ; mov edi, r14d ; call 0xb7176
0x000000000012b90a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009d210 : in eax, dx ; mov r9, r15 ; setne dl ; jmp 0x9d22d
0x000000000009f7e0 : in eax, dx ; mov r9, r15 ; setne dl ; jmp 0x9f7fd
0x00000000000a1c10 : in eax, dx ; mov r9, r15 ; setne dl ; jmp 0xa1c2d
0x0000000000133c5a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000ca904 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000001227c0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004248b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000016e0b1 : in eax, dx ; out dx, al ; call rsp
0x000000000014bfca : in eax, dx ; pop rbx ; ret
0x000000000014c63a : in eax, dx ; push qword ptr [rax + 0x48] ; in eax, dx ; jmp rax
0x000000000014cb8a : in eax, dx ; push qword ptr [rax] ; fucomp st(5) ; jmp qword ptr [rax]
0x000000000014cb9e : in eax, dx ; push rax ; fsub st(5), st(0) ; jmp rax
0x000000000014bd38 : in eax, dx ; push rbx ; ret
0x0000000000069cb2 : in eax, dx ; ret
0x0000000000171d11 : in eax, dx ; stc ; call rsp
0x000000000016bfcd : in eax, dx ; sti ; call qword ptr [rax - 0x1f000412]
0x0000000000098b12 : in eax, dx ; sub rax, 1 ; ret
0x000000000008d2aa : in eax, dx ; xor eax, eax ; ret
0x000000000016bbe8 : inc al ; std ; inc dword ptr [rax] ; ret 0xfffd
0x0000000000098c48 : inc bl ; cmp dl, 1 ; jb 0x98c5a ; mov byte ptr [rdi], cl ; ret
0x0000000000126666 : inc bl ; jb 0x126676 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000126b56 : inc bl ; jb 0x126b66 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000126ef6 : inc bl ; jb 0x126f06 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000081d61 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000040d79 : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x0000000000029396 : inc byte ptr [rbx] ; je 0x293a5 ; pop rbx ; ret
0x000000000006ecd9 : inc byte ptr [rdx] ; je 0x6ecef ; mov dword ptr [rdi], edx ; ret
0x000000000016befb : inc dword ptr [rax + 0x10fffc03] ; idiv bl ; call rax
0x000000000016c197 : inc dword ptr [rax + 0x19] ; cld ; call qword ptr [rax - 0x2f0003e6]
0x000000000016c083 : inc dword ptr [rax + 0x20] ; cld ; jmp qword ptr [rax]
0x000000000016ba67 : inc dword ptr [rax + 0x20] ; sti ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016d1df : inc dword ptr [rax + 0x20fffcbb] ; ret
0x000000000016c107 : inc dword ptr [rax + 0x21] ; cld ; jmp qword ptr [rax]
0x000000000016c067 : inc dword ptr [rax + 0x22] ; cld ; jmp qword ptr [rax]
0x000000000016c04b : inc dword ptr [rax + 0x24] ; cld ; jmp qword ptr [rax]
0x000000000016ba7b : inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016c0ef : inc dword ptr [rax + 0x25] ; cld ; call qword ptr [rax]
0x000000000016baa3 : inc dword ptr [rax + 0x2d] ; sti ; push qword ptr [rax] ; sti ; jmp qword ptr [rax]
0x000000000016c323 : inc dword ptr [rax + 0x30] ; cld ; call qword ptr [rax - 0x1f0003cf]
0x000000000016c377 : inc dword ptr [rax + 0x37] ; cld ; call qword ptr [rax - 0x1f0003c8]
0x000000000016c07f : inc dword ptr [rax + 0x40fffc1e] ; and ah, bh ; jmp qword ptr [rax]
0x000000000016ba8b : inc dword ptr [rax + 0x50fffb27] ; sub bl, bh ; jmp qword ptr [rax]
0x000000000016c1f7 : inc dword ptr [rax + 0x52] ; cld ; inc dword ptr [rax + 0x54] ; cld ; call rax
0x000000000016c1fb : inc dword ptr [rax + 0x54] ; cld ; call rax
0x000000000016bb2f : inc dword ptr [rax + 0x60] ; sti ; jmp qword ptr [rax]
0x000000000016bb4f : inc dword ptr [rax + 0x6f] ; sti ; jmp qword ptr [rax]
0x00000000000c1865 : inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000016c5db : inc dword ptr [rax + 0x7a] ; cld ; jmp rax
0x000000000016c3c3 : inc dword ptr [rax + 0x7d] ; cld ; call rax
0x000000000016c1ab : inc dword ptr [rax + 0xb] ; cld ; call qword ptr [rax - 0x1f0003f4]
0x000000000016cfeb : inc dword ptr [rax + 0xfffcc2] ; ret 0xfffc
0x000000000016bf17 : inc dword ptr [rax + 1] ; cld ; inc dword ptr [rax + 3] ; cld ; call rax
0x000000000016bf1b : inc dword ptr [rax + 3] ; cld ; call rax
0x000000000016bfcb : inc dword ptr [rax - 0x13] ; sti ; call qword ptr [rax - 0x1f000412]
0x000000000014cb87 : inc dword ptr [rax - 0x23] ; in eax, dx ; push qword ptr [rax] ; fucomp st(5) ; jmp qword ptr [rax]
0x000000000016c333 : inc dword ptr [rax - 0x2f0003cb] ; cld ; jmp qword ptr [rax]
0x000000000016c1bb : inc dword ptr [rax - 0x2f0003f0] ; adc esp, edi ; jmp qword ptr [rax]
0x000000000016c167 : inc dword ptr [rax - 0x2f0003f7] ; or bh, ah ; jmp qword ptr [rax]
0x000000000016bfef : inc dword ptr [rax - 0x2f00041c] ; in eax, 0xfb ; jmp qword ptr [rax]
0x000000000016cda7 : inc dword ptr [rax - 0x34] ; cld ; call rax
0x000000000016cfbf : inc dword ptr [rax - 0x37] ; cld ; call rax
0x0000000000045243 : inc dword ptr [rax - 0x4d743] ; jmp qword ptr [rax]
0x000000000015f27b : inc dword ptr [rax - 0x4f000c8c] ; je 0x15f27e ; jmp rax
0x000000000015f27a : inc dword ptr [rax - 0x4f000c8c] ; je 0x15f27f ; jmp rax
0x000000000015f08f : inc dword ptr [rax - 0x4f000ca2] ; pop rsi ; jmp rax
0x00000000000473f6 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x000000000016c8af : inc dword ptr [rax - 0x5b] ; cld ; call rax
0x000000000016cac7 : inc dword ptr [rax - 0x5e] ; cld ; call rax
0x000000000015f24f : inc dword ptr [rax - 0x5f000c8e] ; jb 0x15f252 ; call rax
0x000000000015f24e : inc dword ptr [rax - 0x5f000c8e] ; jb 0x15f253 ; call rax
0x00000000000bc188 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000016bb87 : inc dword ptr [rax - 0x78] ; sti ; call qword ptr [rax - 0x1f000477]
0x000000000016bef7 : inc dword ptr [rax - 0x7f0003ff] ; add edi, esp ; call qword ptr [rax]
0x000000000016bf77 : inc dword ptr [rax - 0x7f000400] ; add bh, ah ; call qword ptr [rax]
0x000000000016bedf : inc dword ptr [rax - 0xa] ; sti ; inc dword ptr [rax] ; clc ; sti ; jmp rax
0x000000000016be6b : inc dword ptr [rax - 4] ; sti ; jmp qword ptr [rax]
0x0000000000182a6d : inc dword ptr [rax] ; add al, dh ; fpatan ; call qword ptr [rsi]
0x00000000000dcb08 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000004615c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000054082 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000d3923 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000005a8db : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000a3c8b : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000014b31d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000148557 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000032cdc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000016c08b : inc dword ptr [rax] ; and al, 0xfc ; jmp rax
0x000000000016c10f : inc dword ptr [rax] ; and eax, 0x26d0fffc ; cld ; call rax
0x000000000016ba6b : inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016bee3 : inc dword ptr [rax] ; clc ; sti ; jmp rax
0x000000000016c267 : inc dword ptr [rax] ; cld ; jmp rax
0x000000000014cb9b : inc dword ptr [rax] ; fucomp st(5) ; push rax ; fsub st(5), st(0) ; jmp rax
0x000000000016bb57 : inc dword ptr [rax] ; jae 0x16bb5e ; push qword ptr [rax] ; push rdi ; sti ; jmp qword ptr [rax]
0x000000000015f2bf : inc dword ptr [rax] ; jbe 0x15f2ba ; jmp qword ptr [rax]
0x000000000015f2be : inc dword ptr [rax] ; jbe 0x15f2bb ; jmp qword ptr [rax]
0x000000000016c3b3 : inc dword ptr [rax] ; jg 0x16c3bb ; call qword ptr [rax + 0x20fffc7e]
0x000000000016c5cb : inc dword ptr [rax] ; jl 0x16c5d3 ; call qword ptr [rax + 0x20fffc7b]
0x000000000015f293 : inc dword ptr [rax] ; jne 0x15f28e ; call qword ptr [rax]
0x000000000015f292 : inc dword ptr [rax] ; jne 0x15f28f ; call qword ptr [rax]
0x000000000015f227 : inc dword ptr [rax] ; jno 0x15f222 ; jmp qword ptr [rax]
0x000000000015f226 : inc dword ptr [rax] ; jno 0x15f223 ; jmp qword ptr [rax]
0x000000000015f357 : inc dword ptr [rax] ; jns 0x15f352 ; call qword ptr [rax]
0x000000000015f356 : inc dword ptr [rax] ; jns 0x15f353 ; call qword ptr [rax]
0x000000000015ee83 : inc dword ptr [rax] ; loop 0x15ee7d ; jmp qword ptr [rax]
0x000000000015ee82 : inc dword ptr [rax] ; loop 0x15ee7e ; jmp qword ptr [rax]
0x000000000016d213 : inc dword ptr [rax] ; mov ebp, 0xbc70fffc ; cld ; jmp rax
0x00000000001603af : inc dword ptr [rax] ; mov ebp, esi ; inc dword ptr [rax] ; mov ebp, esi ; jmp rax
0x00000000001603b3 : inc dword ptr [rax] ; mov ebp, esi ; jmp rax
0x000000000016d00f : inc dword ptr [rax] ; mov esi, 0xbd70fffc ; cld ; jmp rax
0x000000000016cab7 : inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffca3]
0x00000000000f7e10 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x000000000015f05f : inc dword ptr [rax] ; pop rbp ; jmp qword ptr [rax]
0x000000000015f07f : inc dword ptr [rax] ; pop rsi ; jmp qword ptr [rax]
0x000000000015f03f : inc dword ptr [rax] ; pop rsp ; jmp qword ptr [rax]
0x00000000000e1ee1 : inc dword ptr [rax] ; ret
0x000000000016cfef : inc dword ptr [rax] ; ret 0xfffc
0x000000000016bbeb : inc dword ptr [rax] ; ret 0xfffd
0x000000000016cfaf : inc dword ptr [rax] ; retf ; cld ; call qword ptr [rax + 0x20fffcca]
0x000000000016bb37 : inc dword ptr [rax] ; sti ; jmp rax
0x000000000016bab3 : inc dword ptr [rax] ; xor ebx, edi ; push rax ; xor ebx, edi ; jmp rax
0x00000000000fc124 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x00000000000fc30a : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x000000000011aa59 : inc dword ptr [rbp + 0x3d8d48c0] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 4
0x000000000011aa35 : inc dword ptr [rbp + 0x3d8d48c0] ; lodsd eax, dword ptr [rsi] ; ret 4
0x000000000003fc72 : inc dword ptr [rbp + 0x5b0974c0] ; ret
0x0000000000172203 : inc dword ptr [rbp + rax*2 + 0x72dc0002] ; cli ; jmp rsp
0x000000000015e157 : inc dword ptr [rbp - 0x14] ; out dx, eax ; call qword ptr [rax]
0x00000000000361e3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x0000000000061272 : inc dword ptr [rbp - 0x76888b40] ; ret
0x00000000000fffef : inc dword ptr [rbp - 0x769b8740] ; ret
0x0000000000100391 : inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000061bf7 : inc dword ptr [rbp - 0x76be8b40] ; ret
0x000000000005c671 : inc dword ptr [rbp - 0x76f28b40] ; ret
0x000000000008b872 : inc dword ptr [rbp - 0x77] ; ret 0x3845
0x00000000000fc17a : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00000000000e288f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000e28da : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000004cb5d : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x4cbe2 ; ret
0x00000000000b09c2 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000016d123 : inc dword ptr [rbx + rax*8 - 4] ; inc esp ; ret 0xfffc
0x000000000016de2b : inc dword ptr [rbx + rbx*4 + 0x40cc0000] ; in eax, dx ; jmp rsp
0x00000000000c52f5 : inc dword ptr [rbx + rcx*4 + 0x73] ; sub al, 0x83 ; ret 0x4801
0x000000000010cd73 : inc dword ptr [rbx + rdi + 0x50] ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xffe9
0x000000000016d7f3 : inc dword ptr [rbx + rdi*2 + 0x527c0000] ; in al, dx ; call rsp
0x000000000005347b : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x000000000003143e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000cca19 : inc dword ptr [rbx - 0x76be0003] ; ror dword ptr [rdi], -0x6c ; ret 0x9fe9
0x000000000010152f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x0000000000036aba : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x0000000000099318 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000015ee7f : inc dword ptr [rbx] ; loop 0x15ee7d ; inc dword ptr [rax] ; loop 0x15ee81 ; jmp qword ptr [rax]
0x000000000015ee7e : inc dword ptr [rbx] ; loop 0x15ee7e ; inc dword ptr [rax] ; loop 0x15ee82 ; jmp qword ptr [rax]
0x000000000009923f : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000c0612 : inc dword ptr [rcx + 0x39] ; ret
0x00000000000508c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000003cc54 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x93e9
0x000000000003a47c : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0xa5e9
0x0000000000037ccc : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0xb5e9
0x0000000000103058 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000017216b : inc dword ptr [rcx + rax*2 + 0x62dc0002] ; cli ; call rsp
0x000000000016ddeb : inc dword ptr [rcx + rbx*4 + 0x298c0000] ; in eax, dx ; call rsp
0x0000000000060043 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5c2b4
0x00000000000d16d9 : inc dword ptr [rcx - 0x73] ; push rsi ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000002a29b : inc dword ptr [rcx - 0x77] ; ret
0x00000000000cca1c : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x9fe9
0x00000000000d367a : inc dword ptr [rcx - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x0000000000101022 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001002a6 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000014c009 : inc dword ptr [rcx] ; ja 0x14c014 ; ret
0x00000000001939ad : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000193960 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000000c26c8 : inc dword ptr [rcx] ; ret 0x5589
0x000000000015e0cf : inc dword ptr [rdi + 0x26ffeffc] ; out dx, eax ; jmp rax
0x00000000000b190b : inc dword ptr [rdi + rcx + 0x49] ; ret
0x000000000016cc53 : inc dword ptr [rdi + rdx*4] ; cld ; push qword ptr [rsi + rdx*4 - 4] ; jmp rsp
0x0000000000171fb3 : inc dword ptr [rdi + rsi + 0x44fc0002] ; cli ; call rsp
0x000000000016f62b : inc dword ptr [rdi + rsi] ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff3
0x00000000000c1e76 : inc dword ptr [rdi] ; jbe 0xc1e89 ; mov eax, 0xc ; ret
0x0000000000160547 : inc dword ptr [rdi] ; nop ; cmc ; call qword ptr [rcx]
0x000000000015f527 : inc dword ptr [rdi] ; popfq ; call qword ptr [rax]
0x000000000016c46f : inc dword ptr [rdx + 0x7f] ; cld ; call rdx
0x000000000016fa63 : inc dword ptr [rdx + rdx*2 + 1] ; add ah, bh ; ret 0xfff4
0x000000000016f583 : inc dword ptr [rdx + rsi - 0x5439ffff] ; jmp rsp
0x000000000016e1cb : inc dword ptr [rdx + rsi*4 - 0x7fa40000] ; out dx, eax ; call rsp
0x000000000016ce93 : inc dword ptr [rdx - 0x39] ; cld ; call rdx
0x000000000016ce83 : inc dword ptr [rdx] ; leave ; cld ; call qword ptr [rdx + 0x22fffcc8]
0x000000000015deaf : inc dword ptr [rdx] ; mov edi, ebp ; push qword ptr [rbp - 0x2e] ; out dx, eax ; jmp rsi
0x000000000016035f : inc dword ptr [rdx] ; sbb esi, ebp ; push rbx ; sbb dh, ch ; jmp qword ptr [rax]
0x000000000012445d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000016c40b : inc dword ptr [rsi + 0x7c] ; cld ; call rsi
0x000000000016c537 : inc dword ptr [rsi + rdi*2 - 4] ; call rsp
0x000000000016cdef : inc dword ptr [rsi - 0x35] ; cld ; call rsi
0x000000000016c8f7 : inc dword ptr [rsi - 0x5c] ; cld ; call rsi
0x000000000016ca23 : inc dword ptr [rsi - 4] ; call rsp
0x000000000016c8e7 : inc dword ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffca5]
0x000000000016c3fb : inc dword ptr [rsi] ; jle 0x16c403 ; call qword ptr [rsi + 0x26fffc7d]
0x000000000016c397 : inc eax ; cld ; call qword ptr [rax]
0x000000000016c343 : inc eax ; cmp bh, ah ; call qword ptr [rax]
0x000000000015f26b : inc eax ; jae 0x15f26a ; push rax ; jae 0x15f26e ; jmp qword ptr [rax]
0x000000000015f26a : inc eax ; jae 0x15f26b ; push rax ; jae 0x15f26f ; jmp qword ptr [rax]
0x000000000016bb67 : inc eax ; jge 0x16bb6a ; call qword ptr [rax]
0x000000000001fe06 : inc eax ; jmp 0x1fdcf
0x000000000015f2b7 : inc eax ; jne 0x15f2b2 ; jmp rax
0x000000000015f2b6 : inc eax ; jne 0x15f2b3 ; jmp rax
0x000000000015f21f : inc eax ; jo 0x15f21a ; jmp rax
0x000000000015f21e : inc eax ; jo 0x15f21b ; jmp rax
0x000000000015f347 : inc eax ; js 0x15f342 ; call rax
0x000000000015f346 : inc eax ; js 0x15f343 ; call rax
0x000000000016bfab : inc eax ; loop 0x16bfae ; call qword ptr [rax]
0x000000000015f077 : inc eax ; pop rbp ; jmp rax
0x000000000015f037 : inc eax ; pop rbx ; jmp rax
0x000000000015f0bf : inc eax ; pop rdi ; call rax
0x000000000015f057 : inc eax ; pop rsp ; jmp rax
0x0000000000032cf9 : inc eax ; shr eax, 0x1f ; ret
0x0000000000161459 : inc ebx ; add dh, bh ; jmp rdi
0x0000000000119f9a : inc ebx ; mov eax, 0xffffffff ; ret
0x0000000000033ebe : inc ebx ; mov eax, dword ptr [rip + 0x3671c6] ; ret
0x0000000000033f1c : inc ebx ; nop ; mov eax, edx ; ret
0x000000000006c72c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000014ae09 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000070b38 : inc ebx ; nop word ptr [rax + rax] ; ret
0x0000000000159107 : inc ebx ; test ch, ch ; dec dword ptr [rsi] ; test ebp, ebp ; jmp rsp
0x0000000000160593 : inc edi ; nop ; cmc ; call rcx
0x00000000000e1159 : inc esi ; jmp qword ptr [r8]
0x000000000015fd93 : inc esi ; push rsp ; jmp qword ptr [rax]
0x000000000016e7fb : inc esp ; fadd qword ptr [rax] ; add byte ptr [rdi + rbp - 0x10], bh ; jmp rsp
0x000000000016d543 : inc esp ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; fcomp st(0), st(2) ; jmp 0x16d553
0x000000000015ee67 : inc esp ; loope 0x15ee61 ; call rsp
0x000000000015ee66 : inc esp ; loope 0x15ee62 ; call rsp
0x000000000016d127 : inc esp ; ret 0xfffc
0x0000000000170e9b : inc esp ; ret 1
0x000000000016e163 : inc esp ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; cmp al, 0x66 ; out dx, eax ; jmp rsp
0x000000000016ec2b : inc esp ; test dword ptr [rax], 0xf0c89c00 ; jmp rsp
0x00000000000c26c7 : inc qword ptr [rcx] ; ret 0x5589
0x000000000001fe05 : inc rax ; jmp 0x1fdd0
0x0000000000171a7c : insb byte ptr [rdi], dx ; adc al, 2 ; add byte ptr [rdx + rbp*4], bl ; stc ; call rsp
0x0000000000172838 : insb byte ptr [rdi], dx ; add al, 0xfb ; jmp rsp
0x00000000000822d0 : insb byte ptr [rdi], dx ; add dword ptr [rax + rax], ecx ; ret
0x000000000011f3d4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000016fd4d : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; adc esi, esi ; call rsp
0x000000000016f7f4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; jno 0x16f7f6 ; call rsp
0x00000000001871cc : insb byte ptr [rdi], dx ; add dword ptr [rax], r8d ; xor ch, al ; cmc ; jmp qword ptr [rcx]
0x0000000000174fcc : insb byte ptr [rdi], dx ; and al, 0 ; add al, dl ; fldpi ; call qword ptr [rdx]
0x00000000000c5e21 : insb byte ptr [rdi], dx ; and al, 0x20 ; call 0xc20a5
0x00000000000b3b58 : insb byte ptr [rdi], dx ; and al, 0x30 ; mov rdi, rbx ; call r12
0x0000000000032d7b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000032e0a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000032de8 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000032f8a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000032e39 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000032d1a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000016f3f0 : insb byte ptr [rdi], dx ; and bl, dh ; call rsp
0x00000000000f7e94 : insb byte ptr [rdi], dx ; cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000016e580 : insb byte ptr [rdi], dx ; cmc ; out dx, eax ; jmp rsp
0x00000000001803cc : insb byte ptr [rdi], dx ; fadd dword ptr [rax] ; add al, dl ; jbe 0x1803cc ; jmp rcx
0x00000000001917cc : insb byte ptr [rdi], dx ; in al, dx ; add dword ptr [rax], eax ; loopne 0x191803 ; clc ; call qword ptr [rdx]
0x000000000016df79 : insb byte ptr [rdi], dx ; in eax, dx ; call rsp
0x000000000015d0be : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000172248 : insb byte ptr [rdi], dx ; ja 0x172248 ; call rsp
0x00000000001724c0 : insb byte ptr [rdi], dx ; mov bl, 0xfa ; jmp rsp
0x000000000010dc52 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003670 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000018b7cc : insb byte ptr [rdi], dx ; mov word ptr [rcx], es ; add al, dh ; ret 0xfff6
0x000000000017cfcc : insb byte ptr [rdi], dx ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; adc al, ch ; out dx, eax ; call rax
0x000000000015e88c : insb byte ptr [rdi], dx ; movsxd rsi, eax ; call qword ptr [rdi]
0x000000000015e888 : insb byte ptr [rdi], dx ; movsxd rsi, eax ; ljmp ptr [rbx - 0x10] ; call qword ptr [rdi]
0x000000000007c0e8 : insb byte ptr [rdi], dx ; out dx, al ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000017b6c1 : insb byte ptr [rdi], dx ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001785cc : insb byte ptr [rdi], dx ; pop rdx ; add byte ptr [rax], al ; mov al, 0xce ; out dx, al ; jmp rax
0x000000000016fc30 : insb byte ptr [rdi], dx ; push rdi ; cmc ; jmp rsp
0x000000000016f4d8 : insb byte ptr [rdi], dx ; pushfq ; call rsp
0x000000000016d024 : insb byte ptr [rdi], dx ; ret
0x0000000000044535 : insb byte ptr [rdi], dx ; ret 0x4c40
0x000000000016ffb0 : insb byte ptr [rdi], dx ; ret 0xfff6
0x0000000000170e94 : insb byte ptr [rdi], dx ; ret 1
0x000000000016ec50 : insb byte ptr [rdi], dx ; sal eax, 1 ; call rsp
0x000000000016d500 : insb byte ptr [rdi], dx ; shr ebx, -1 ; push rsp ; imul eax, dword ptr [rax], 0 ; pop rsp ; ret
0x000000000018d6cc : insb byte ptr [rdi], dx ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; rcr byte ptr [rbp - 9], 1 ; jmp qword ptr [rcx]
0x000000000016e830 : insb byte ptr [rdi], dx ; xor esi, eax ; call rsp
0x0000000000122040 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016d545 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; fcomp st(0), st(2) ; jmp 0x16d551
0x0000000000089c4f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000122f40 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001190de : insd dword ptr [rdi], dx ; cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e5093 : insd dword ptr [rdi], dx ; enter 0x36e8, 0x67 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000105a7d : insd dword ptr [rdi], dx ; idiv edi ; xor eax, eax ; ret
0x000000000015d0bf : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x000000000015b46d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x000000000015f9c8 : insd dword ptr [rdi], dx ; ret 0xfff4
0x000000000016bb4d : insd dword ptr [rdi], dx ; sti ; inc dword ptr [rax + 0x6f] ; sti ; jmp qword ptr [rax]
0x000000000015c37f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000050a62 : int 0x29
0x0000000000042338 : int 0x48
0x0000000000002c33 : int 0x80
0x00000000000bb3bf : int 0xda
0x00000000000330cd : int 0xff
0x00000000000038ab : int 3
0x00000000000229ac : int1 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000191d15 : int1 ; add dword ptr [rax], eax ; js 0x191d52 ; clc ; call qword ptr [rcx]
0x00000000001715dd : int1 ; add dword ptr [rax], eax ; mov ebx, fs ; clc ; call rsp
0x0000000000049c26 : int1 ; add eax, r8d ; ret
0x000000000016f062 : int1 ; call qword ptr [rax + rdx - 0x3c93ffff]
0x000000000015ec6e : int1 ; call qword ptr [rax]
0x000000000017ef1a : int1 ; call qword ptr [rbx]
0x000000000017f41a : int1 ; call qword ptr [rdx]
0x000000000017f2e2 : int1 ; call qword ptr [rsi]
0x0000000000021524 : int1 ; call rbx
0x000000000017f162 : int1 ; call rdx
0x000000000017ed3a : int1 ; call rsp
0x00000000000d3edb : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xd3ed9 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000001076f6 : int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000010f38b : int1 ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000015ecaa : int1 ; dec dword ptr [rbx - 0x1f000e55] ; fdivr st(1), st(0) ; jmp qword ptr [rax]
0x000000000016ef3a : int1 ; dec esp ; or byte ptr [rcx], al ; add ah, bh ; push rcx ; int1 ; jmp rsp
0x0000000000003a9f : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000008d21d : int1 ; je 0x8d214 ; ret
0x0000000000098bcb : int1 ; jl 0x98c1c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000098bec : int1 ; jl 0x98c3d ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000098bff : int1 ; jl 0x98c50 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000098cd4 : int1 ; jl 0x98d25 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000098d2c : int1 ; jl 0x98d7d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000098dc9 : int1 ; jl 0x98e1a ; adc dword ptr [rsi + 7], edx ; ret
0x000000000016d639 : int1 ; jmp 0x16d63d
0x000000000015ecda : int1 ; jmp qword ptr [rax - 0x1f000e16]
0x000000000015ecca : int1 ; jmp qword ptr [rax - 0x1f000e1b]
0x000000000015ecba : int1 ; jmp qword ptr [rax - 0x1f000e20]
0x000000000015ec66 : int1 ; jmp qword ptr [rax - 0x4f000e57]
0x000000000015ecb2 : int1 ; jmp qword ptr [rax]
0x000000000017ed22 : int1 ; jmp qword ptr [rbx]
0x000000000017f2ca : int1 ; jmp qword ptr [rdi]
0x00000000001088b8 : int1 ; jmp qword ptr [rsi + 0xf]
0x000000000015ecae : int1 ; jmp rax
0x000000000017ed82 : int1 ; jmp rbx
0x00000000000992d5 : int1 ; jmp rcx
0x000000000017f49a : int1 ; jmp rdx
0x000000000017f192 : int1 ; jmp rsi
0x000000000016ee22 : int1 ; jmp rsp
0x0000000000033df6 : int1 ; mov eax, 1 ; ret
0x000000000013364b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c0cf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000010a93a : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000106af9 : int1 ; mov rdi, r13 ; call r12
0x000000000014a8e3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000c01c4 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000015e135 : int1 ; out dx, eax ; jmp rax
0x000000000009931b : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000f3db2 : int1 ; pop rdx ; pop r10 ; ret
0x000000000000260b : int1 ; ret
0x000000000015ca96 : int1 ; ret 0x5803
0x000000000016bc34 : int1 ; ret 0xfffd
0x0000000000171d69 : int1 ; stc ; jmp rsp
0x000000000014a8e7 : int1 ; sub eax, edx ; ret
0x00000000000899a6 : int1 ; xor eax, eax ; pop rbx ; ret
0x00000000000f36de : int1 ; xor eax, eax ; ret
0x000000000016309d : iretd ; cli ; call qword ptr [rax]
0x0000000000163491 : iretd ; cli ; jmp rsp
0x000000000007bf19 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000ae50e : iretd ; movsxd r9, dword ptr [rdx + r9*4] ; add rdx, r9 ; jmp rdx
0x00000000000cd821 : iretd ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x000000000017ec61 : iretd ; sti ; call qword ptr [rax]
0x0000000000101f43 : ja 0x101f48 ; ret
0x00000000001022e9 : ja 0x102300 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x0000000000107df1 : ja 0x107e44 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010a95d : ja 0x10a94e ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001155b7 : ja 0x1155d3 ; ret
0x000000000011572f : ja 0x115752 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000115920 : ja 0x115950 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000014c00b : ja 0x14c012 ; ret
0x000000000015cb04 : ja 0x15ca8b ; ret 0x48f
0x000000000015f2f9 : ja 0x15f2f0 ; call rax
0x000000000015f301 : ja 0x15f2f8 ; call qword ptr [rax]
0x000000000015f2fd : ja 0x15f2f8 ; push rax ; ja 0x15f2fc ; call qword ptr [rax]
0x000000000016c5e5 : ja 0x16c5e5 ; jmp qword ptr [rax]
0x000000000016c5e9 : ja 0x16c5ed ; call qword ptr [rax + 0x10fffc76]
0x000000000016c725 : ja 0x16c725 ; call rsp
0x00000000001707d1 : ja 0x1707cc ; call rsp
0x0000000000172249 : ja 0x172247 ; call rsp
0x0000000000180441 : ja 0x180437 ; call qword ptr [rcx]
0x0000000000180489 : ja 0x18047f ; jmp qword ptr [rcx]
0x0000000000180509 : ja 0x1804ff ; call qword ptr [rcx]
0x000000000002c09d : ja 0x2c0b8 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000331fe : ja 0x33223 ; ret
0x0000000000033506 : ja 0x33513 ; ret
0x0000000000033572 : ja 0x33583 ; ret
0x00000000000335bc : ja 0x335c2 ; ret
0x00000000000038ea : ja 0x394c ; clc ; salc ; jb 0x3972 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000427be : ja 0x42810 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000049c17 : ja 0x49bfe ; mov eax, r8d ; ret
0x0000000000061276 : ja 0x61203 ; ret
0x000000000006a946 : ja 0x6a953 ; ret
0x000000000006f458 : ja 0x6f471 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081cc2 : ja 0x81cd3 ; ret
0x0000000000086ed8 : ja 0x86ed2 ; ret 0x7401
0x00000000000894ed : ja 0x894cf ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008de9c : ja 0x8deb5 ; mov rax, rdi ; ret
0x000000000008e623 : ja 0x8e627 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000008ed76 : ja 0x8ed7a ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000008f4c3 : ja 0x8f4c7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000094397 : ja 0x9439d ; ret
0x00000000000943b3 : ja 0x943bd ; mov dword ptr [rdi], ecx ; ret
0x00000000000943f4 : ja 0x94403 ; mov qword ptr [rdi], rcx ; ret
0x0000000000094479 : ja 0x9448d ; ret
0x00000000000944cf : ja 0x944e7 ; ret
0x0000000000094551 : ja 0x9456d ; ret
0x0000000000095997 : ja 0x959a1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000959b3 : ja 0x959c1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000095a04 : ja 0x95a17 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095ae9 : ja 0x95b01 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095b5f : ja 0x95b7b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000095be1 : ja 0x95c01 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000097477 : ja 0x9747d ; ret
0x0000000000097493 : ja 0x9749d ; mov dword ptr [rdi], ecx ; ret
0x00000000000974d4 : ja 0x974e3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000097559 : ja 0x9756d ; ret
0x00000000000975af : ja 0x975c7 ; ret
0x0000000000097631 : ja 0x9764d ; ret
0x0000000000097f47 : ja 0x97f4d ; ret
0x0000000000097f63 : ja 0x97f6d ; mov dword ptr [rdi], ecx ; ret
0x0000000000097fa4 : ja 0x97fb3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000098029 : ja 0x9803d ; ret
0x000000000009807f : ja 0x98097 ; ret
0x0000000000098101 : ja 0x9811d ; ret
0x00000000000995c9 : ja 0x995e9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000009ae52 : ja 0x9ae62 ; cmove rax, rcx ; ret
0x000000000009b23c : ja 0x9b24c ; mov eax, edi ; ret
0x00000000000a84bd : ja 0xa84cb ; ret
0x00000000000b341d : ja 0xb342b ; pop rbx ; ret
0x00000000000b4607 : ja 0xb4612 ; ret
0x00000000000b6f56 : ja 0xb6f62 ; ret
0x00000000000b6ff0 : ja 0xb6ffa ; ret
0x00000000000b70e1 : ja 0xb70ea ; ret
0x00000000000b81e9 : ja 0xb81f2 ; ret
0x00000000000b8259 : ja 0xb8262 ; ret
0x00000000000b84ad : ja 0xb84b2 ; ret
0x00000000000b852d : ja 0xb8532 ; ret
0x00000000000c1cbe : ja 0xc1cc9 ; jl 0xc1cb5 ; ret
0x00000000000d9521 : ja 0xd952b ; xor eax, eax ; ret
0x00000000000d9eea : ja 0xd9e84 ; pop rbx ; pop rbp ; ret
0x00000000000d9f22 : ja 0xd9f13 ; ret
0x00000000000da0cb : ja 0xda0d3 ; ret
0x00000000000da11a : ja 0xda123 ; ret
0x00000000000da16b : ja 0xda173 ; ret
0x00000000000da1c3 : ja 0xda1d3 ; ret
0x00000000000da227 : ja 0xda233 ; ret
0x00000000000da280 : ja 0xda28b ; ret
0x00000000000da45f : ja 0xda46b ; ret
0x00000000000dab08 : ja 0xdab43 ; ret
0x00000000000de5e3 : ja 0xde5f8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000deb18 : ja 0xdeb23 ; ret
0x00000000000deb6c : ja 0xdeb73 ; ret
0x00000000000deb6c : ja 0xdeb78 ; ret
0x00000000000df2c0 : ja 0xdf2ca ; ret
0x00000000000df3a3 : ja 0xdf3af ; ret
0x00000000000df3f9 : ja 0xdf405 ; ret
0x00000000000df53c : ja 0xdf563 ; ret
0x00000000000df6b4 : ja 0xdf6c2 ; ret
0x00000000000dfcb3 : ja 0xdfce3 ; ret
0x00000000000dfed0 : ja 0xdfeda ; ret
0x00000000000dff80 : ja 0xdff8a ; ret
0x00000000000e002b : ja 0xe0032 ; ret
0x00000000000e009b : ja 0xe00a2 ; ret
0x00000000000e011c : ja 0xe0122 ; ret
0x00000000000e01cc : ja 0xe01d2 ; ret
0x00000000000e071c : ja 0xe0723 ; ret
0x00000000000e1bad : ja 0xe1bbb ; ret
0x00000000000e1c41 : ja 0xe1c4b ; ret
0x00000000000e1ce1 : ja 0xe1ceb ; ret
0x00000000000e1d35 : ja 0xe1d43 ; ret
0x00000000000e1e39 : ja 0xe1e45 ; ret
0x00000000000e5ac4 : ja 0xe5ad3 ; ret
0x00000000000e7774 : ja 0xe7783 ; ret
0x00000000000e79b6 : ja 0xe79c2 ; ret
0x00000000000e7a68 : ja 0xe7a73 ; ret
0x00000000000e7aa2 : ja 0xe7ab3 ; ret
0x00000000000e8653 : ja 0xe8662 ; ret
0x00000000000e87d3 : ja 0xe87e2 ; ret
0x00000000000e8c2d : ja 0xe8c32 ; ret
0x00000000000e8ccf : ja 0xe8cda ; ret
0x00000000000e8d7f : ja 0xe8d8a ; ret
0x00000000000efd78 : ja 0xefd72 ; ret
0x00000000000f4430 : ja 0xf443b ; ret
0x00000000000f44b5 : ja 0xf448c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f44dd : ja 0xf44fd ; ret
0x00000000000f6142 : ja 0xf6153 ; ret
0x00000000000f61f2 : ja 0xf6203 ; ret
0x00000000000f7aa7 : ja 0xf7aba ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000000022df : ja 0xffffffffd6104b6b ; ret
0x000000000010602c : jae 0x105ffc ; and al, 4 ; pop rdi ; call 0x822e8
0x000000000010602b : jae 0x1060a9 ; mov byte ptr [rsp + 4], 0x5f ; call 0x822e9
0x000000000010f13d : jae 0x10f186 ; mov rdi, rbp ; call 0x10b3d7
0x000000000010f180 : jae 0x10f1f1 ; mov rdi, rbp ; call 0x10b457
0x0000000000115695 : jae 0x1156a4 ; xor eax, eax ; ret
0x00000000001156d5 : jae 0x1156e4 ; xor eax, eax ; ret
0x00000000001199d0 : jae 0x1199d5 ; ret
0x0000000000119a20 : jae 0x119a25 ; ret
0x000000000011c7a4 : jae 0x11c787 ; mov eax, 1 ; ret
0x000000000014bdcc : jae 0x14bddb ; call qword ptr [rbx]
0x000000000014bdcc : jae 0x14bddf ; call qword ptr [rbx]
0x000000000014c507 : jae 0x14c524 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000015b0c2 : jae 0x15b0a4 ; jo 0x15b140 ; mov ebp, 0xfb67d10d ; ret
0x000000000015bf5e : jae 0x15bf39 ; push rsi ; pop rdx ; je 0x15bf2e ; ret 0xacfc
0x000000000015f271 : jae 0x15f268 ; jmp qword ptr [rax]
0x000000000015f26d : jae 0x15f268 ; push rax ; jae 0x15f26c ; jmp qword ptr [rax]
0x000000000016bb59 : jae 0x16bb5c ; push qword ptr [rax] ; push rdi ; sti ; jmp qword ptr [rax]
0x000000000016c605 : jae 0x16c605 ; call qword ptr [rax]
0x000000000016c609 : jae 0x16c60d ; call qword ptr [rax + 0x10fffc72]
0x000000000016c685 : jae 0x16c685 ; jmp rdx
0x000000000016c801 : jae 0x16c801 ; jmp qword ptr [rax]
0x000000000016c805 : jae 0x16c809 ; jmp qword ptr [rax + 0x20fffc72]
0x000000000016fe8d : jae 0x16fe96 ; add byte ptr [rsp + rbp*2 - 0xa], cl ; call rsp
0x0000000000174149 : jae 0x174138 ; call qword ptr [rax]
0x00000000001786c1 : jae 0x1786d9 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000178fe5 : jae 0x178ffd ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000179e85 : jae 0x179e8d ; add byte ptr [rax + 0x21], cl ; out dx, eax ; call rdx
0x000000000002b51a : jae 0x2b536 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000002c182 : jae 0x2c198 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000003353d : jae 0x33542 ; ret
0x0000000000033a1d : jae 0x33a22 ; ret
0x0000000000041a17 : jae 0x41a20 ; xor eax, eax ; ret
0x000000000006384d : jae 0x63852 ; ret
0x0000000000063880 : jae 0x63885 ; ret
0x0000000000070ab8 : jae 0x70ac5 ; movzx eax, byte ptr [rax] ; ret
0x0000000000070ad5 : jae 0x70afe ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000072410 : jae 0x723c8 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000737bb : jae 0x737e5 ; movzx eax, byte ptr [rax] ; ret
0x000000000007c1ae : jae 0x7c1be ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008849f : jae 0x8849f ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a647c : jae 0xa648a ; call 0x22764
0x00000000000a646c : jae 0xa648e ; mov rdi, qword ptr [rbx + 0x10] ; call 0x22768
0x00000000000a859d : jae 0xa85a2 ; ret
0x00000000000aae0d : jae 0xaae12 ; ret
0x00000000000aae3d : jae 0xaae42 ; ret
0x00000000000b6ead : jae 0xb6eb2 ; ret
0x00000000000b70a0 : jae 0xb70a5 ; ret
0x00000000000b717d : jae 0xb7182 ; ret
0x00000000000b7206 : jae 0xb723b ; ret
0x00000000000b7266 : jae 0xb729b ; ret
0x00000000000b7617 : jae 0xb761c ; ret
0x00000000000b769d : jae 0xb76a2 ; ret
0x00000000000b81ad : jae 0xb81b2 ; ret
0x00000000000b834d : jae 0xb8352 ; ret
0x00000000000b837d : jae 0xb8382 ; ret
0x00000000000b83dd : jae 0xb83e2 ; ret
0x00000000000b840d : jae 0xb8412 ; ret
0x00000000000b843d : jae 0xb8442 ; ret
0x00000000000b846d : jae 0xb8472 ; ret
0x00000000000d078d : jae 0xd0792 ; ret
0x00000000000d07bd : jae 0xd07c2 ; ret
0x00000000000d07ed : jae 0xd07f2 ; ret
0x00000000000d081d : jae 0xd0822 ; ret
0x00000000000d084d : jae 0xd0852 ; ret
0x00000000000d087d : jae 0xd0882 ; ret
0x00000000000d08ad : jae 0xd08b2 ; ret
0x00000000000d08dd : jae 0xd08e2 ; ret
0x00000000000d9039 : jae 0xd9071 ; ret
0x00000000000d9099 : jae 0xd90d1 ; ret
0x00000000000da02d : jae 0xda032 ; ret
0x00000000000da2cd : jae 0xda2d2 ; ret
0x00000000000da2fd : jae 0xda302 ; ret
0x00000000000da3cd : jae 0xda3d2 ; ret
0x00000000000da3fd : jae 0xda402 ; ret
0x00000000000da4bd : jae 0xda4c2 ; ret
0x00000000000da4ed : jae 0xda4f2 ; ret
0x00000000000da526 : jae 0xda55b ; ret
0x00000000000da746 : jae 0xda77b ; ret
0x00000000000da7a6 : jae 0xda7db ; ret
0x00000000000da7fd : jae 0xda802 ; ret
0x00000000000dac0d : jae 0xdac12 ; ret
0x00000000000dad56 : jae 0xdad8b ; ret
0x00000000000dadad : jae 0xdadb2 ; ret
0x00000000000daddd : jae 0xdade2 ; ret
0x00000000000dae0d : jae 0xdae12 ; ret
0x00000000000dae3d : jae 0xdae42 ; ret
0x00000000000dae6d : jae 0xdae72 ; ret
0x00000000000daea6 : jae 0xdaedb ; ret
0x00000000000daefd : jae 0xdaf02 ; ret
0x00000000000daf2d : jae 0xdaf32 ; ret
0x00000000000db74d : jae 0xdb752 ; ret
0x00000000000db77d : jae 0xdb782 ; ret
0x00000000000db7ad : jae 0xdb7b2 ; ret
0x00000000000db7e0 : jae 0xdb7e5 ; ret
0x00000000000dbdbd : jae 0xdbdc2 ; ret
0x00000000000dbdf0 : jae 0xdbdf5 ; ret
0x00000000000dbe1d : jae 0xdbe22 ; ret
0x00000000000dbe4d : jae 0xdbe52 ; ret
0x00000000000dbe7d : jae 0xdbe82 ; ret
0x00000000000dbeb0 : jae 0xdbeb5 ; ret
0x00000000000dbedd : jae 0xdbee2 ; ret
0x00000000000dbf0d : jae 0xdbf12 ; ret
0x00000000000dbf3d : jae 0xdbf42 ; ret
0x00000000000de776 : jae 0xde7ab ; ret
0x00000000000de804 : jae 0xde857 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000deae0 : jae 0xdeae5 ; ret
0x00000000000deae0 : jae 0xdeaea ; ret
0x00000000000df259 : jae 0xdf291 ; ret
0x00000000000df87d : jae 0xdf882 ; ret
0x00000000000df8ad : jae 0xdf8b2 ; ret
0x00000000000df8dd : jae 0xdf8e2 ; ret
0x00000000000dfbed : jae 0xdfbf2 ; ret
0x00000000000dfdcd : jae 0xdfdd2 ; ret
0x00000000000dfe06 : jae 0xdfe3b ; ret
0x00000000000dfe66 : jae 0xdfe9b ; ret
0x00000000000e035d : jae 0xe0362 ; ret
0x00000000000e03fd : jae 0xe0402 ; ret
0x00000000000e0439 : jae 0xe0471 ; ret
0x00000000000e058d : jae 0xe0592 ; ret
0x00000000000e05bd : jae 0xe05c2 ; ret
0x00000000000e05f6 : jae 0xe062b ; ret
0x00000000000e064d : jae 0xe0652 ; ret
0x00000000000e0686 : jae 0xe06bb ; ret
0x00000000000e06dd : jae 0xe06e2 ; ret
0x00000000000e0a4d : jae 0xe0a52 ; ret
0x00000000000e0a7d : jae 0xe0a82 ; ret
0x00000000000e0aad : jae 0xe0ab2 ; ret
0x00000000000e1d6d : jae 0xe1d72 ; ret
0x00000000000e1d9d : jae 0xe1da2 ; ret
0x00000000000e334f : jae 0xe3354 ; ret
0x00000000000e35bd : jae 0xe35c2 ; ret
0x00000000000e35ed : jae 0xe35f2 ; ret
0x00000000000e3626 : jae 0xe365b ; ret
0x00000000000e367d : jae 0xe3682 ; ret
0x00000000000e36ad : jae 0xe36b2 ; ret
0x00000000000e36e0 : jae 0xe36e5 ; ret
0x00000000000e370d : jae 0xe3712 ; ret
0x00000000000e373d : jae 0xe3742 ; ret
0x00000000000e376d : jae 0xe3772 ; ret
0x00000000000e379d : jae 0xe37a2 ; ret
0x00000000000e63c0 : jae 0xe63c5 ; ret
0x00000000000e63ed : jae 0xe63f2 ; ret
0x00000000000e641d : jae 0xe6422 ; ret
0x00000000000e6450 : jae 0xe6455 ; ret
0x00000000000e6480 : jae 0xe6485 ; ret
0x00000000000e64ad : jae 0xe64b2 ; ret
0x00000000000e64e0 : jae 0xe64e5 ; ret
0x00000000000e650d : jae 0xe6512 ; ret
0x00000000000e653d : jae 0xe6542 ; ret
0x00000000000e6570 : jae 0xe6575 ; ret
0x00000000000e659d : jae 0xe65a2 ; ret
0x00000000000e65d0 : jae 0xe65d5 ; ret
0x00000000000e76dd : jae 0xe76e2 ; ret
0x00000000000e770d : jae 0xe7712 ; ret
0x00000000000e783d : jae 0xe7842 ; ret
0x00000000000e787d : jae 0xe7882 ; ret
0x00000000000e78ad : jae 0xe78b2 ; ret
0x00000000000e78dd : jae 0xe78e2 ; ret
0x00000000000e790d : jae 0xe7912 ; ret
0x00000000000e7b30 : jae 0xe7b35 ; ret
0x00000000000e7b5d : jae 0xe7b62 ; ret
0x00000000000e7b8d : jae 0xe7b92 ; ret
0x00000000000e7bbd : jae 0xe7bc2 ; ret
0x00000000000e7c00 : jae 0xe7c05 ; ret
0x00000000000e7c2d : jae 0xe7c32 ; ret
0x00000000000e7c5d : jae 0xe7c62 ; ret
0x00000000000e7c8d : jae 0xe7c92 ; ret
0x00000000000e7cbd : jae 0xe7cc2 ; ret
0x00000000000e7ced : jae 0xe7cf2 ; ret
0x00000000000e7d1d : jae 0xe7d22 ; ret
0x00000000000e7d4d : jae 0xe7d52 ; ret
0x00000000000e7d7d : jae 0xe7d82 ; ret
0x00000000000e7db0 : jae 0xe7db5 ; ret
0x00000000000e7de9 : jae 0xe7e21 ; ret
0x00000000000e7e3d : jae 0xe7e42 ; ret
0x00000000000e7e70 : jae 0xe7e75 ; ret
0x00000000000e7e9d : jae 0xe7ea2 ; ret
0x00000000000e7ecd : jae 0xe7ed2 ; ret
0x00000000000e7efd : jae 0xe7f02 ; ret
0x00000000000e7f2d : jae 0xe7f32 ; ret
0x00000000000e7f5d : jae 0xe7f62 ; ret
0x00000000000e7f90 : jae 0xe7f95 ; ret
0x00000000000e7fc0 : jae 0xe7fc5 ; ret
0x00000000000e7fed : jae 0xe7ff2 ; ret
0x00000000000e801d : jae 0xe8022 ; ret
0x00000000000e8050 : jae 0xe8055 ; ret
0x00000000000e8080 : jae 0xe8085 ; ret
0x00000000000e80b0 : jae 0xe80b5 ; ret
0x00000000000e80e9 : jae 0xe8121 ; ret
0x00000000000e813d : jae 0xe8142 ; ret
0x00000000000e8179 : jae 0xe81b1 ; ret
0x00000000000e81ac : jae 0xe81b5 ; ret
0x00000000000e81cd : jae 0xe81d2 ; ret
0x00000000000e81fd : jae 0xe8202 ; ret
0x00000000000e8239 : jae 0xe8271 ; ret
0x00000000000e828d : jae 0xe8292 ; ret
0x00000000000e82c0 : jae 0xe82c5 ; ret
0x00000000000e82ed : jae 0xe82f2 ; ret
0x00000000000e831d : jae 0xe8322 ; ret
0x00000000000e8350 : jae 0xe8355 ; ret
0x00000000000e8386 : jae 0xe83bb ; ret
0x00000000000e83dd : jae 0xe83e2 ; ret
0x00000000000e8410 : jae 0xe8415 ; ret
0x00000000000e8440 : jae 0xe8445 ; ret
0x00000000000e8496 : jae 0xe84cb ; ret
0x00000000000e84ed : jae 0xe84f2 ; ret
0x00000000000e8526 : jae 0xe855b ; ret
0x00000000000e857d : jae 0xe8582 ; ret
0x00000000000e85ad : jae 0xe85b2 ; ret
0x00000000000e85e0 : jae 0xe85e5 ; ret
0x00000000000e860d : jae 0xe8612 ; ret
0x00000000000e8709 : jae 0xe8741 ; ret
0x00000000000e8766 : jae 0xe879b ; ret
0x00000000000e8886 : jae 0xe88bb ; ret
0x00000000000e88e9 : jae 0xe8921 ; ret
0x00000000000e8940 : jae 0xe8945 ; ret
0x00000000000e896d : jae 0xe8972 ; ret
0x00000000000e899d : jae 0xe89a2 ; ret
0x00000000000e89d0 : jae 0xe89d5 ; ret
0x00000000000e8ee9 : jae 0xe8f21 ; ret
0x00000000000e8f49 : jae 0xe8f81 ; ret
0x00000000000e8f9d : jae 0xe8fa2 ; ret
0x00000000000e8fcd : jae 0xe8fd2 ; ret
0x00000000000e8ffd : jae 0xe9002 ; ret
0x00000000000e902d : jae 0xe9032 ; ret
0x00000000000e9060 : jae 0xe9065 ; ret
0x00000000000e9090 : jae 0xe9095 ; ret
0x00000000000e90bd : jae 0xe90c2 ; ret
0x00000000000e90ed : jae 0xe90f2 ; ret
0x00000000000e911d : jae 0xe9122 ; ret
0x00000000000e914d : jae 0xe9152 ; ret
0x00000000000f04eb : jae 0xf0517 ; cmp dil, byte ptr [rax] ; je 0xf0521 ; mov rdx, rax ; jmp 0xf050e
0x0000000000100c12 : jae 0xffffffff83580ddf ; ret 0x3904
0x00000000001016af : jb 0x1016d7 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001021f8 : jb 0x1021eb ; mov eax, 0xffffffff ; ret
0x000000000010a961 : jb 0x10a985 ; ret
0x000000000010a95b : jb 0x10a98d ; ja 0x10a950 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000126561 : jb 0x12654a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000001265c4 : jb 0x1265ad ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000126668 : jb 0x126674 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000126a51 : jb 0x126a3a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000126ab4 : jb 0x126a9d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000126b58 : jb 0x126b64 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000126df4 : jb 0x126ddd ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000126e54 : jb 0x126e3d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000126ef8 : jb 0x126f04 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000012a0da : jb 0x12a0ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a22a : jb 0x12a23a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a37a : jb 0x12a38a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a4ca : jb 0x12a4da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a61a : jb 0x12a62a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a76a : jb 0x12a77a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a8ba : jb 0x12a8ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012aa0a : jb 0x12aa1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ab5a : jb 0x12ab6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012acaa : jb 0x12acba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012adfa : jb 0x12ae0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012af4a : jb 0x12af5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b09a : jb 0x12b0aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b1ea : jb 0x12b1fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b33a : jb 0x12b34a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012caaa : jb 0x12caba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cbfa : jb 0x12cc0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cd4a : jb 0x12cd5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ce9a : jb 0x12ceaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cfea : jb 0x12cffa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d13a : jb 0x12d14a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d28a : jb 0x12d29a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d3da : jb 0x12d3ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d52a : jb 0x12d53a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d67a : jb 0x12d68a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d7ca : jb 0x12d7da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d91a : jb 0x12d92a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012da6a : jb 0x12da7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dbba : jb 0x12dbca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dd0a : jb 0x12dd1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f47a : jb 0x12f48a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f5ca : jb 0x12f5da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f71a : jb 0x12f72a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f86a : jb 0x12f87a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f9ba : jb 0x12f9ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fb0a : jb 0x12fb1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fc5a : jb 0x12fc6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fdaa : jb 0x12fdba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fefa : jb 0x12ff0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013004a : jb 0x13005a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013019a : jb 0x1301aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001302ea : jb 0x1302fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013043a : jb 0x13044a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013058a : jb 0x13059a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001306da : jb 0x1306ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014b557 : jb 0x14b567 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000014b563 : jb 0x14b579 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000014b573 : jb 0x14b57b ; mov byte ptr [rdi], cl ; ret
0x000000000014bdfb : jb 0x14bdf1 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000014c519 : jb 0x14c518 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015f255 : jb 0x15f24c ; call rax
0x000000000015f251 : jb 0x15f24c ; jmp qword ptr [rax - 0x2f000c8e]
0x0000000000160654 : jb 0x1605e5 ; cmc ; call rbx
0x0000000000160650 : jb 0x1605e5 ; cmc ; push qword ptr [rdx - 0x74] ; cmc ; call rbx
0x000000000016c60d : jb 0x16c60d ; call qword ptr [rax]
0x000000000016c68d : jb 0x16c68d ; jmp rdx
0x000000000016c809 : jb 0x16c809 ; jmp qword ptr [rax]
0x000000000016c80d : jb 0x16c811 ; jmp qword ptr [rax + 0x10fffc71]
0x000000000016fe65 : jb 0x16fe6e ; add byte ptr [rdi + rsi - 0xa], ch ; jmp rsp
0x0000000000172209 : jb 0x172207 ; jmp rsp
0x00000000001802f9 : jb 0x1802ef ; call qword ptr [rsi]
0x0000000000183d19 : jb 0x183d11 ; jmp rcx
0x000000000018d969 : jb 0x18d964 ; call qword ptr [rcx]
0x000000000018e2de : jb 0x18e2ec ; ret
0x000000000018e2de : jb 0x18e2f2 ; ret
0x0000000000192e09 : jb 0x192e05 ; call qword ptr [rax]
0x0000000000192e41 : jb 0x192e3d ; jmp qword ptr [rcx]
0x0000000000192e40 : jb 0x192e3e ; jmp qword ptr [rcx]
0x0000000000002b80 : jb 0x2b20 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002c06e : jb 0x2c07b ; ret
0x000000000002cec7 : jb 0x2ceb9 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000038ee : jb 0x396e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000069325 : jb 0x6934b ; mov dword ptr [rcx], eax ; ret
0x000000000006a73c : jb 0x6a735 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000718c5 : jb 0x71910 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073f61 : jb 0x73f02 ; xor al, byte ptr [rax] ; add dword ptr [rbx - 0xd], ebx ; ret
0x00000000000740d1 : jb 0x740b6 ; mov byte ptr [rax + rsi], r10b ; ret
0x000000000007add6 : jb 0x7ae0b ; xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008076b : jb 0x8077c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x00000000000884f5 : jb 0x884ff ; sub cl, byte ptr [rax + 0x39] ; sal dword ptr [rbp - 0xd], 1 ; ret
0x00000000000885ab : jb 0x885bc ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008e1fe : jb 0x8e20a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008e951 : jb 0x8e95d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008f09e : jb 0x8f0aa ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009630a : jb 0x96319 ; add byte ptr [rax], al ; ret
0x0000000000098c35 : jb 0x98c44 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000098c40 : jb 0x98c53 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000098c4d : jb 0x98c55 ; mov byte ptr [rdi], cl ; ret
0x00000000000b8abd : jb 0xb8ac6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000c4bbd : jb 0xc4b3d ; pop rbx ; ret
0x00000000000ee99b : jb 0xee9af ; mov eax, 1 ; ret
0x00000000000f36dd : jb 0xf36d4 ; xor eax, eax ; ret
0x0000000000109fd3 : jbe 0x109fe7 ; mov eax, 2 ; ret
0x000000000011591d : jbe 0x115939 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000015f2c1 : jbe 0x15f2b8 ; jmp qword ptr [rax]
0x000000000015f2d9 : jbe 0x15f2d0 ; call rax
0x000000000015f2e1 : jbe 0x15f2d8 ; call qword ptr [rax]
0x000000000015f2dd : jbe 0x15f2d8 ; push rax ; jbe 0x15f2dc ; call qword ptr [rax]
0x000000000016c5ed : jbe 0x16c5ed ; call qword ptr [rax]
0x000000000016c5f1 : jbe 0x16c5f5 ; call qword ptr [rax + 0x10fffc75]
0x000000000016c66d : jbe 0x16c66d ; jmp rdx
0x000000000016c7e9 : jbe 0x16c7e9 ; jmp qword ptr [rax]
0x000000000016c7ed : jbe 0x16c7f1 ; jmp qword ptr [rax + 0x20fffc75]
0x000000000016eb29 : jbe 0x16eb1d ; call rsp
0x00000000001803d1 : jbe 0x1803c7 ; jmp rcx
0x0000000000041e2b : jbe 0x41ea1 ; xor eax, eax ; ret
0x0000000000043d8c : jbe 0x43d86 ; nop ; pop rbx ; ret
0x000000000004c966 : jbe 0x4c8f3 ; ret 0x8166
0x000000000006a4f7 : jbe 0x6a473 ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000081099 : jbe 0x810a2 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000815b6 : jbe 0x815f5 ; add rax, rdi ; ret
0x00000000000815c6 : jbe 0x815f7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000815d6 : jbe 0x815f7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000815e6 : jbe 0x815f7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000086f43 : jbe 0x86f5e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x86f39 ; ret
0x000000000008cc73 : jbe 0x8caca ; mov r10, rax ; jmp 0x8ccc8
0x000000000008f8e9 : jbe 0x8f8e3 ; ret 0xf10
0x0000000000091509 : jbe 0x91503 ; ret 0xf10
0x00000000000a64c4 : jbe 0xa64e9 ; mov rdi, qword ptr [rsp + 8] ; call 0x22769
0x00000000000a7b30 : jbe 0xa7b59 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1e78 : jbe 0xc1e87 ; mov eax, 0xc ; ret
0x00000000000d9db8 : jbe 0xd9dc3 ; ret
0x00000000000fdf8c : jbe 0xfdf92 ; ret
0x0000000000101533 : je 0x10152b ; pop rbx ; ret
0x00000000001054c2 : je 0x1054ca ; ret
0x0000000000105521 : je 0x10552a ; ret
0x000000000010551b : je 0x10552b ; cmp dword ptr [rdi + 0x10], 2 ; je 0x105530 ; ret
0x00000000001076a3 : je 0x10768d ; xor eax, eax ; pop rbx ; ret
0x0000000000107ee3 : je 0x107eef ; mov rdi, rsp ; call rax
0x0000000000108359 : je 0x108386 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000108554 : je 0x108560 ; mov rdi, rbp ; call rax
0x00000000001088d8 : je 0x1088e2 ; ret
0x0000000000109515 : je 0x109521 ; mov rdi, r14 ; call rax
0x0000000000109a63 : je 0x109a74 ; xor eax, eax ; ret
0x000000000010a072 : je 0x10a07e ; mov rdi, rbp ; call rdx
0x000000000010a4b7 : je 0x10a5b4 ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000010aac6 : je 0x10aad8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010db32 : je 0x10db46 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000010e4ea : je 0x10e4f6 ; mov rdi, r12 ; call rax
0x000000000010e6cb : je 0x10e6d9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000010ef94 : je 0x10efa4 ; xor eax, eax ; ret
0x000000000010f701 : je 0x10f70d ; mov rdi, rbp ; call rax
0x000000000010f7c0 : je 0x10f7cc ; mov rdi, r13 ; call rax
0x000000000010f843 : je 0x10f857 ; mov eax, 1 ; ret
0x000000000011033f : je 0x11034d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001109eb : je 0x1109f7 ; mov rdi, r12 ; call rax
0x0000000000110d5f : je 0x110d6d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001127da : je 0x112768 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011275f : je 0x11276b ; pop rbx ; ret
0x0000000000112803 : je 0x112816 ; add rsp, 8 ; ret
0x0000000000112c2d : je 0x112c48 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001132fb : je 0x113302 ; ret
0x00000000001133db : je 0x1133e9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000113a24 : je 0x113a32 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000114548 : je 0x1145a4 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000114640 : je 0x11469c ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000114aad : je 0x114b08 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000114b6d : je 0x114bc8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001151dd : je 0x115208 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000001152ad : je 0x1152d8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x0000000000115581 : je 0x115593 ; ret
0x0000000000117488 : je 0x117494 ; xor eax, eax ; ret
0x00000000001186b5 : je 0x1186c4 ; xor eax, eax ; ret
0x000000000011a098 : je 0x11a0c5 ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011af39 : je 0x11af64 ; xor ebp, ebp ; mov edi, r14d ; call 0xb7179
0x000000000011bc51 : je 0x11bc66 ; add rsp, 8 ; ret
0x000000000011d863 : je 0x11d82d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000011e535 : je 0x11e53d ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011e633 : je 0x11e5fd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000011f51a : je 0x11f522 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011f673 : je 0x11f63d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000121243 : je 0x12120d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000123271 : je 0x123258 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000123563 : je 0x12352d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000124bf3 : je 0x124bbd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001482b7 : je 0x1482c1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014b8b6 : je 0x14b8bc ; call rdx
0x000000000014b9ce : je 0x14b9d9 ; call rax
0x000000000014bdb0 : je 0x14bdb5 ; ret
0x000000000015b228 : je 0x15b1f3 ; xor al, 0xd8 ; ret
0x000000000015b467 : je 0x15b464 ; jmp 0x15b43e
0x000000000015bf62 : je 0x15bf2a ; ret 0xacfc
0x000000000015f281 : je 0x15f278 ; jmp rax
0x000000000015f285 : je 0x15f27c ; call qword ptr [rax]
0x000000000015f291 : je 0x15f28c ; inc dword ptr [rax] ; jne 0x15f290 ; call qword ptr [rax]
0x000000000016c5fd : je 0x16c5fd ; call qword ptr [rax]
0x000000000016c601 : je 0x16c605 ; call qword ptr [rax + 0x10fffc73]
0x000000000016c67d : je 0x16c67d ; jmp rdx
0x000000000016c7f9 : je 0x16c7f9 ; jmp qword ptr [rax]
0x000000000016c7fd : je 0x16c801 ; jmp qword ptr [rax + 0x20fffc73]
0x000000000016cc58 : je 0x16cbf3 ; cld ; jmp rsp
0x000000000016d715 : je 0x16d71d ; add byte ptr [rcx + rdi*8 - 0x15], cl ; call rsp
0x000000000016e2c4 : je 0x16e287 ; add byte ptr [rax], al ; or al, 0xa5 ; out dx, eax ; call rsp
0x000000000016ec4c : je 0x16ec4d ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sal eax, 1 ; call rsp
0x0000000000175ed4 : je 0x175f10 ; add byte ptr [rax], al ; cwde ; add ch, ah ; call qword ptr [rdx]
0x00000000001786ba : je 0x1786c8 ; ret
0x00000000001788d4 : je 0x17893a ; add byte ptr [rax], al ; fsubr st(6) ; call rdi
0x000000000017bbd4 : je 0x17bb6d ; add byte ptr [rax], al ; call 0x2317ab5c
0x00000000001852d4 : je 0x185304 ; add dword ptr [rax], eax ; call 0x22184834
0x0000000000185ed4 : je 0x185f10 ; add dword ptr [rax], eax ; call 0xffffffffe218546c
0x00000000001881d4 : je 0x188233 ; add dword ptr [rax], eax ; pop rax ; cld ; cmc ; jmp qword ptr [rcx]
0x00000000001896d4 : je 0x189748 ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], al ; call rsi
0x0000000000189bd4 : je 0x189c4d ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], dl ; jmp qword ptr [rcx]
0x0000000000001cba : je 0x1ce6 ; ret
0x000000000001fae5 : je 0x1fa86 ; jmp 0x1faaf
0x000000000002151f : je 0x2154b ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x000000000002530c : je 0x2533b ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000025e74 : je 0x25ea2 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000270d4 : je 0x27102 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002733b : je 0x2736a ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000027e24 : je 0x27e52 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028093 : je 0x280c2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000029398 : je 0x293a3 ; pop rbx ; ret
0x0000000000029393 : je 0x293a8 ; cmp esi, 3 ; je 0x293a8 ; pop rbx ; ret
0x0000000000029b6b : je 0x29b71 ; call rax
0x0000000000029eb7 : je 0x29ebd ; call rcx
0x000000000002ad4b : je 0x2ad51 ; call rax
0x0000000000032a3d : je 0x32a2c ; ret
0x0000000000032d35 : je 0x32d5f ; call 0xffffffffe284efc9
0x0000000000032e26 : je 0x32dcf ; ret
0x000000000003d800 : je 0x3d82e ; sbb byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret 8
0x000000000003fc75 : je 0x3fc83 ; pop rbx ; ret
0x0000000000058866 : je 0x5882b ; jmp 0x5880d
0x0000000000058aba : je 0x58ad9 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x58ad7
0x0000000000063136 : je 0x63158 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006393a : je 0x63943 ; ret
0x0000000000065a6e : je 0x65a7d ; mov eax, edx ; pop rbx ; ret
0x0000000000065dd3 : je 0x65e11 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000065fca : je 0x65fe1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006607a : je 0x66091 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000662a8 : je 0x662d2 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000067045 : je 0x67061 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067948 : je 0x67973 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067e83 : je 0x67e96 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000681c7 : je 0x681d5 ; mov eax, edx ; pop rbx ; ret
0x00000000000685b7 : je 0x685c5 ; mov eax, esi ; pop rbx ; ret
0x0000000000068739 : je 0x68745 ; mov eax, esi ; pop rbx ; ret
0x00000000000688f3 : je 0x68934 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000068b36 : je 0x68b48 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006909d : je 0x690ae ; mov eax, r8d ; pop rbx ; ret
0x0000000000069240 : je 0x69255 ; mov eax, edx ; pop rbx ; ret
0x00000000000693d7 : je 0x693e5 ; mov eax, edx ; pop rbx ; ret
0x0000000000069d70 : je 0x69dc0 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000069d6f : je 0x69dc1 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000069d85 : je 0x69dd5 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000069d84 : je 0x69dd6 ; add esp, 0x20 ; pop rbx ; ret
0x000000000006a18c : je 0x6a192 ; ret
0x000000000006a1a6 : je 0x6a1b3 ; pop rbx ; ret
0x000000000006a3bd : je 0x6a418 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000006a69d : je 0x6a6a8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006a6e1 : je 0x6a6ec ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006ab58 : je 0x6ab67 ; mov eax, 0xffffffff ; ret
0x000000000006d355 : je 0x6d365 ; mov eax, edx ; pop rbx ; ret
0x000000000006d75a : je 0x6d765 ; mov eax, edx ; pop rbx ; ret
0x000000000006d87e : je 0x6d88d ; mov eax, esi ; pop rbx ; ret
0x000000000006d9c0 : je 0x6d9d5 ; mov eax, esi ; pop rbx ; ret
0x000000000006dca5 : je 0x6dcb5 ; mov eax, edx ; pop rbx ; ret
0x000000000006e65a : je 0x6e665 ; mov eax, edx ; pop rbx ; ret
0x000000000006eadc : je 0x6eaed ; mov edi, r14d ; call 0xdad47
0x000000000006ecdb : je 0x6eced ; mov dword ptr [rdi], edx ; ret
0x000000000006f00c : je 0x6f01f ; mov eax, 0xffffffff ; ret
0x000000000006f36c : je 0x6f37f ; mov eax, 0xffffffff ; ret
0x000000000006f866 : je 0x6f875 ; mov eax, edx ; pop rbx ; ret
0x000000000006fbfb : je 0x6fba1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000006fc6f : je 0x6fc7b ; pop rbx ; ret
0x00000000000723f3 : je 0x723ad ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000724b3 : je 0x7246d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000072585 : je 0x72592 ; ret
0x00000000000725b7 : je 0x725c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072b7a : je 0x72b85 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000074322 : je 0x7418a ; ret
0x0000000000074262 : je 0x74274 ; xor eax, eax ; ret
0x0000000000074f17 : je 0x74f24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007503c : je 0x75042 ; call rax
0x00000000000784b6 : je 0x784c7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078572 : je 0x78618 ; call 0x74848
0x0000000000079272 : je 0x7929e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000007979b : je 0x797a1 ; call rax
0x000000000007abc9 : je 0x7abd2 ; ret
0x000000000007ac0a : je 0x7ac19 ; mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007ac22 : je 0x7ac37 ; mov eax, 0x16 ; ret
0x000000000007ae30 : je 0x7aef6 ; call rax
0x000000000007af6a : je 0x7b03e ; call rax
0x000000000007b108 : je 0x7b158 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000007bbd8 : je 0x7bbe2 ; ret
0x000000000007c3fb : je 0x7c40d ; lea rax, qword ptr [rip + 0x1326c] ; ret
0x000000000007c5e8 : je 0x7c5fa ; lea rax, qword ptr [rip + 0xccd9f] ; ret
0x000000000007dcdb : je 0x7dced ; lea rax, qword ptr [rip + 0xc042c] ; ret
0x000000000007dde8 : je 0x7ddfa ; lea rax, qword ptr [rip + 0xa52ef] ; ret
0x000000000007df65 : je 0x7df8c ; movsx eax, dl ; ret
0x000000000007df65 : je 0x7df8d ; movsx eax, dl ; ret
0x000000000007df60 : je 0x7dfb9 ; cmp dl, 3 ; je 0x7df91 ; movsx eax, dl ; ret
0x000000000007e072 : je 0x7e086 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e2c4 : je 0x7e2ce ; bsf eax, edx ; ret
0x000000000007e2c4 : je 0x7e2cf ; bsf eax, edx ; ret
0x000000000007e36d : je 0x7e385 ; bsf rax, rdx ; ret
0x000000000007e36d : je 0x7e386 ; bsf rax, rdx ; ret
0x000000000007e30c : je 0x7e399 ; bsf rax, rdx ; ret
0x000000000007e53c : je 0x7e565 ; bsf rax, rdx ; ret
0x000000000007e53c : je 0x7e566 ; bsf rax, rdx ; ret
0x000000000007e4cc : je 0x7e579 ; bsf rax, rdx ; ret
0x000000000007e67b : je 0x7e68d ; lea rax, qword ptr [rip + 0x12c0c] ; ret
0x000000000007ff5b : je 0x7ff6d ; lea rax, qword ptr [rip + 0xbf95c] ; ret
0x0000000000080278 : je 0x8028a ; lea rax, qword ptr [rip + 0xa2f9f] ; ret
0x0000000000080608 : je 0x8061a ; lea rax, qword ptr [rip + 0xa2d3f] ; ret
0x00000000000814ac : je 0x81503 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000081625 : je 0x81638 ; lea rax, qword ptr [rip + 0xc58f2] ; ret
0x0000000000081c37 : je 0x81c49 ; lea rax, qword ptr [rip + 0x16f20] ; ret
0x0000000000081d9d : je 0x81db0 ; lea rax, qword ptr [rip + 0xca3a] ; ret
0x0000000000081dde : je 0x81df0 ; lea rax, qword ptr [rip + 0xa4f49] ; ret
0x00000000000822cb : je 0x822dd ; lea rax, qword ptr [rip + 0xc016c] ; ret
0x00000000000823eb : je 0x823fd ; lea rax, qword ptr [rip + 0xc185c] ; ret
0x0000000000086e6d : je 0x86e80 ; lea rax, qword ptr [rip + 0x721a] ; ret
0x0000000000086e88 : je 0x86e8d ; ret
0x0000000000086eb0 : je 0x86ec2 ; lea rax, qword ptr [rip + 0xa2bd7] ; ret
0x0000000000088d9a : je 0x88df1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000088e51 : je 0x88e69 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000089324 : je 0x89337 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d1fa : je 0x8d1f3 ; ret
0x000000000008d21e : je 0x8d213 ; ret
0x000000000008d21a : je 0x8d217 ; cmp ecx, esi ; je 0x8d217 ; ret
0x000000000008d26f : je 0x8d253 ; ret
0x000000000008d7ec : je 0x8d7c8 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000094699 : je 0x946ea ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000095d26 : je 0x95d77 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000097a3a : je 0x97a8b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009924d : je 0x99216 ; movzx eax, dl ; pop rbx ; ret
0x0000000000099225 : je 0x99218 ; movzx eax, cl ; pop rbx ; ret
0x000000000009924d : je 0x99218 ; movzx eax, dl ; pop rbx ; ret
0x0000000000099372 : je 0x99384 ; xor eax, eax ; ret
0x000000000009936d : je 0x99391 ; cmp eax, 2 ; je 0x99389 ; xor eax, eax ; ret
0x00000000000993bd : je 0x993a3 ; ret
0x0000000000099405 : je 0x993e3 ; ret
0x000000000009a31f : je 0x9a311 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009a559 : je 0x9a579 ; mov cl, dl ; and cl, 0xf ; je 0x9a589 ; ret
0x000000000009a560 : je 0x9a582 ; ret
0x000000000009a575 : je 0x9a596 ; add rax, 2 ; ret
0x000000000009ab96 : je 0x9ac06 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009ae4f : je 0x9ae6c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000009aea5 : je 0x9aeb8 ; lea rax, qword ptr [rip + 0xad6b2] ; ret
0x000000000009b9ce : je 0x9b9fd ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x000000000009bc86 : je 0x9bcb5 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000009bf5e : je 0x9bf8d ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x000000000009c0e8 : je 0x9c0f5 ; test edx, edx ; jne 0x9c0e7 ; ret
0x00000000000a26a3 : je 0xa26d0 ; push -0x7bf0367b ; ret 0xfff9
0x00000000000a81bf : je 0xa81ed ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000a8be0 : je 0xa8bf8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ae453 : je 0xae4aa ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000b27f0 : je 0xb280e ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000b7301 : je 0xb7307 ; call rax
0x00000000000b7413 : je 0xb7457 ; mov rdi, r12 ; call 0x736b7
0x00000000000b74aa : je 0xb74b3 ; call rdx
0x00000000000b7533 : je 0xb753c ; call rax
0x00000000000b89dd : je 0xb8a2c ; mov eax, 0x20 ; ret
0x00000000000b8a99 : je 0xb8ac9 ; mov eax, 1 ; ret
0x00000000000c000c : je 0xbffee ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c01b4 : je 0xc01c4 ; xor eax, eax ; ret
0x00000000000c17b0 : je 0xc17bb ; ret
0x00000000000c17ab : je 0xc17c8 ; cmp eax, 3 ; je 0xc17c0 ; ret
0x00000000000c1ae8 : je 0xc1af3 ; ret
0x00000000000c1cda : je 0xc1ce4 ; xor eax, eax ; ret
0x00000000000c1cd6 : je 0xc1d38 ; cmp al, 0x11 ; je 0xc1ce8 ; xor eax, eax ; ret
0x00000000000c2049 : je 0xc2078 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c268f : je 0xc26b9 ; or byte ptr [rcx], ch ; ret
0x00000000000c4ba0 : je 0xc4b39 ; pop rbx ; ret
0x00000000000c4bd2 : je 0xc4b6d ; pop rbx ; ret
0x00000000000c4bcd : je 0xc4b93 ; and ebx, 8 ; je 0xc4b72 ; pop rbx ; ret
0x00000000000c54aa : je 0xc545e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c69e2 : je 0xc69f1 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000c7a82 : je 0xc7ab1 ; sub byte ptr [rcx + 0x497c245c], cl ; mov edx, eax ; jmp 0xc7ac1
0x00000000000cea48 : je 0xcea84 ; xor eax, eax ; ret
0x00000000000ceaa7 : je 0xceab7 ; mov eax, 2 ; ret
0x00000000000d0a3f : je 0xd0a94 ; ret
0x00000000000d3e62 : je 0xd3eb3 ; ret
0x00000000000d60e5 : je 0xd60c3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d94fa : je 0xd9503 ; ret
0x00000000000dd0b4 : je 0xdd0f0 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000deaa0 : je 0xdeabd ; neg eax ; pop rbx ; ret
0x00000000000dfae0 : je 0xdfb0a ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000e025e : je 0xe0265 ; ret
0x00000000000e1e63 : je 0xe1e6e ; mov qword ptr [rax], rdx ; ret
0x00000000000e1f32 : je 0xe1f27 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000e3318 : je 0xe3329 ; mov dword ptr [rip + 0x2b7ef0], edi ; ret
0x00000000000e4360 : je 0xe436b ; pop rbx ; ret
0x00000000000e581e : je 0xe58be ; call rax
0x00000000000e5995 : je 0xe5a96 ; call rax
0x00000000000e77d6 : je 0xe77db ; ret
0x00000000000e9974 : je 0xe997b ; pop rbp ; ret
0x00000000000e9d6d : je 0xe9d7f ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000e9d57 : je 0xe9d80 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000ec811 : je 0xec840 ; or byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x00000000000eca3b : je 0xeca50 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f0075 : je 0xf0084 ; xor eax, eax ; ret
0x00000000000f04f0 : je 0xf051c ; mov rdx, rax ; jmp 0xf0509
0x00000000000f26f3 : je 0xf2707 ; mov eax, 7 ; ret
0x00000000000f2711 : je 0xf2739 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000f2720 : je 0xf2784 ; xor eax, eax ; pop rbx ; ret
0x00000000000f375b : je 0xf376b ; ret
0x00000000000f3e09 : je 0xf3e0e ; ret
0x00000000000f3e6d : je 0xf3e72 ; ret
0x00000000000f428a : je 0xf4292 ; ret
0x00000000000f4472 : je 0xf44a2 ; call rax
0x00000000000f4872 : je 0xf488f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f4dcd : je 0xf4de0 ; lea rax, qword ptr [rip - 0x66d56] ; ret
0x00000000000f4e0e : je 0xf4e20 ; lea rax, qword ptr [rip + 0x31b69] ; ret
0x00000000000f4ebd : je 0xf4ed0 ; lea rax, qword ptr [rip - 0x666f6] ; ret
0x00000000000f4efe : je 0xf4f10 ; lea rax, qword ptr [rip + 0x31e19] ; ret
0x00000000000f4f47 : je 0xf4f59 ; lea rax, qword ptr [rip - 0x5c400] ; ret
0x00000000000f58ec : je 0xf5900 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000f623c : je 0xf624e ; add rsp, 8 ; ret
0x00000000000f6dfc : je 0xf6e10 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000fdfa6 : je 0xfdfb2 ; mov rdi, rbx ; call rax
0x00000000000fe53a : je 0xfe567 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000010e8f2 : jg 0x10e93c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10e908 ; ret
0x00000000001135e2 : jg 0x11362c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1135f8 ; ret
0x0000000000126560 : jg 0x1265dc ; loopne 0x126531 ; jp 0x1265ed ; jp 0x126560 ; ret
0x000000000012660c : jg 0x12661d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000126a50 : jg 0x126acc ; loopne 0x126a21 ; jp 0x126add ; jp 0x126a50 ; ret
0x0000000000126afc : jg 0x126b0d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000126df3 : jg 0x126e6f ; loopne 0x126dc4 ; jp 0x126e80 ; jp 0x126df3 ; ret
0x0000000000126e9c : jg 0x126ead ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000012bcb9 : jg 0x12bd0c ; ret
0x000000000012bd3f : jg 0x12bd8a ; ret
0x000000000012beb9 : jg 0x12bf0c ; ret 0x894c
0x000000000012bf3f : jg 0x12bf8a ; ret 0x894c
0x000000000012e689 : jg 0x12e6dc ; ret
0x000000000012e70f : jg 0x12e75a ; ret
0x000000000012e889 : jg 0x12e8dc ; ret 0x894c
0x000000000012e90f : jg 0x12e95a ; ret 0x894c
0x0000000000131059 : jg 0x1310ac ; ret
0x00000000001310df : jg 0x13112a ; ret
0x0000000000131259 : jg 0x1312ac ; ret 0x894c
0x00000000001312df : jg 0x13132a ; ret 0x894c
0x0000000000133628 : jg 0x133679 ; loope 0x133627 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013369f : jg 0x1336ea ; ret 0xff2
0x00000000001336b8 : jg 0x133709 ; loop 0x1336b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013372f : jg 0x13377a ; ret
0x0000000000133748 : jg 0x133799 ; jrcxz 0x133747 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001337d8 : jg 0x133829 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133858 : jg 0x1338a9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001338d8 : jg 0x133929 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133958 : jg 0x1339a9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001339d8 : jg 0x133a29 ; call 0x4f9249da
0x0000000000133a58 : jg 0x133aa9 ; jmp 0x4f924a5a
0x0000000000133bd8 : jg 0x133c29 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133c58 : jg 0x133ca9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133ce8 : jg 0x133d39 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133d68 : jg 0x133db9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133ddc : jg 0x133de7 ; ret
0x0000000000133e36 : jg 0x133e49 ; ret
0x0000000000133e31 : jg 0x133e81 ; psllq mm1, qword ptr [rdi] ; jg 0x133e4e ; ret
0x0000000000133ea6 : jg 0x133eb9 ; ret
0x0000000000133f16 : jg 0x133f29 ; ret
0x0000000000133f11 : jg 0x133f61 ; or eax, 0xf7f0ff3 ; ret
0x0000000000133f86 : jg 0x133f99 ; ret
0x0000000000133f81 : jg 0x133fd1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133ff6 : jg 0x134009 ; ret
0x0000000000133ff1 : jg 0x134041 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134066 : jg 0x134079 ; ret
0x0000000000134061 : jg 0x1340b1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001340d6 : jg 0x1340e9 ; ret
0x00000000001340d1 : jg 0x134121 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134146 : jg 0x134159 ; ret
0x0000000000134141 : jg 0x134191 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000001341b6 : jg 0x1341c9 ; ret
0x0000000000134226 : jg 0x134239 ; ret
0x0000000000134296 : jg 0x1342a9 ; ret
0x0000000000134291 : jg 0x1342e1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000134306 : jg 0x134319 ; ret
0x0000000000134301 : jg 0x134351 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134376 : jg 0x134389 ; ret
0x0000000000134371 : jg 0x1343c1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001343e6 : jg 0x1343f9 ; ret
0x00000000001343e1 : jg 0x134431 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134456 : jg 0x134469 ; ret
0x0000000000134451 : jg 0x1344a1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001360f8 : jg 0x136149 ; loope 0x1360f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013616f : jg 0x1361ba ; ret 0xff2
0x0000000000136188 : jg 0x1361d9 ; loop 0x136187 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001361ff : jg 0x13624a ; ret
0x0000000000136218 : jg 0x136269 ; jrcxz 0x136217 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001362a8 : jg 0x1362f9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136328 : jg 0x136379 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001363a8 : jg 0x1363f9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136428 : jg 0x136479 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001364a8 : jg 0x1364f9 ; call 0x4f9274aa
0x0000000000136528 : jg 0x136579 ; jmp 0x4f92752a
0x00000000001366a8 : jg 0x1366f9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000136728 : jg 0x136779 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001367b8 : jg 0x136809 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000136838 : jg 0x136889 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001368ac : jg 0x1368b7 ; ret
0x0000000000136906 : jg 0x136919 ; ret
0x0000000000136901 : jg 0x136951 ; psllq mm1, qword ptr [rdi] ; jg 0x13691e ; ret
0x0000000000136976 : jg 0x136989 ; ret
0x00000000001369e6 : jg 0x1369f9 ; ret
0x00000000001369e1 : jg 0x136a31 ; or eax, 0xf7f0ff3 ; ret
0x0000000000136a56 : jg 0x136a69 ; ret
0x0000000000136a51 : jg 0x136aa1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136ac6 : jg 0x136ad9 ; ret
0x0000000000136ac1 : jg 0x136b11 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136b36 : jg 0x136b49 ; ret
0x0000000000136b31 : jg 0x136b81 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136ba6 : jg 0x136bb9 ; ret
0x0000000000136ba1 : jg 0x136bf1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136c16 : jg 0x136c29 ; ret
0x0000000000136c11 : jg 0x136c61 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136c86 : jg 0x136c99 ; ret
0x0000000000136cf6 : jg 0x136d09 ; ret
0x0000000000136d66 : jg 0x136d79 ; ret
0x0000000000136d61 : jg 0x136db1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000136dd6 : jg 0x136de9 ; ret
0x0000000000136dd1 : jg 0x136e21 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136e46 : jg 0x136e59 ; ret
0x0000000000136e41 : jg 0x136e91 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136eb6 : jg 0x136ec9 ; ret
0x0000000000136eb1 : jg 0x136f01 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136f26 : jg 0x136f39 ; ret
0x0000000000136f21 : jg 0x136f71 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000138c18 : jg 0x138c69 ; loope 0x138c17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138c8f : jg 0x138cda ; ret 0xff2
0x0000000000138ca8 : jg 0x138cf9 ; loop 0x138ca7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138d1f : jg 0x138d6a ; ret
0x0000000000138d38 : jg 0x138d89 ; jrcxz 0x138d37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138dc8 : jg 0x138e19 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138e48 : jg 0x138e99 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138ec8 : jg 0x138f19 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138f48 : jg 0x138f99 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138fc8 : jg 0x139019 ; call 0x4f929fca
0x0000000000139048 : jg 0x139099 ; jmp 0x4f92a04a
0x00000000001391c8 : jg 0x139219 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139248 : jg 0x139299 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001392d8 : jg 0x139329 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139358 : jg 0x1393a9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001393cc : jg 0x1393d7 ; ret
0x0000000000139426 : jg 0x139439 ; ret
0x0000000000139421 : jg 0x139471 ; psllq mm1, qword ptr [rdi] ; jg 0x13943e ; ret
0x0000000000139496 : jg 0x1394a9 ; ret
0x0000000000139506 : jg 0x139519 ; ret
0x0000000000139501 : jg 0x139551 ; or eax, 0xf7f0ff3 ; ret
0x0000000000139576 : jg 0x139589 ; ret
0x0000000000139571 : jg 0x1395c1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001395e6 : jg 0x1395f9 ; ret
0x00000000001395e1 : jg 0x139631 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139656 : jg 0x139669 ; ret
0x0000000000139651 : jg 0x1396a1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001396c6 : jg 0x1396d9 ; ret
0x00000000001396c1 : jg 0x139711 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139736 : jg 0x139749 ; ret
0x0000000000139731 : jg 0x139781 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000001397a6 : jg 0x1397b9 ; ret
0x0000000000139816 : jg 0x139829 ; ret
0x0000000000139886 : jg 0x139899 ; ret
0x0000000000139881 : jg 0x1398d1 ; add eax, 0xf7f0ff3 ; ret
0x00000000001398f6 : jg 0x139909 ; ret
0x00000000001398f1 : jg 0x139941 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139966 : jg 0x139979 ; ret
0x0000000000139961 : jg 0x1399b1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001399d6 : jg 0x1399e9 ; ret
0x00000000001399d1 : jg 0x139a21 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139a46 : jg 0x139a59 ; ret
0x0000000000139a41 : jg 0x139a91 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014b425 : jg 0x14b434 ; neg eax ; ret
0x000000000014b532 : jg 0x14b542 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014b5d3 : jg 0x14b624 ; loopne 0x14b628 ; sub eax, edx ; vzeroupper ; ret
0x000000000016c3b5 : jg 0x16c3b9 ; call qword ptr [rax + 0x20fffc7e]
0x000000000016c3f1 : jg 0x16c3f1 ; jmp rsi
0x000000000016c471 : jg 0x16c471 ; call rdx
0x000000000016c46d : jg 0x16c471 ; inc dword ptr [rdx + 0x7f] ; cld ; call rdx
0x000000000016c470 : jg 0x16c472 ; call rdx
0x000000000016c5ad : jg 0x16c5ad ; call qword ptr [rax]
0x000000000017aaa5 : jg 0x17aaad ; add al, cl ; out dx, eax ; call rbx
0x000000000017aaa4 : jg 0x17aaae ; add al, cl ; out dx, eax ; call rbx
0x0000000000180759 : jg 0x18074f ; call rsi
0x0000000000001b0c : jg 0x1b69 ; mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x0000000000025f18 : jg 0x25ea5 ; ret 0x870f
0x000000000002623f : jg 0x261cc ; ret 0x5c77
0x000000000003259b : jg 0x325ed ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000032a3b : jg 0x32a42 ; je 0x32a2e ; ret
0x0000000000032e22 : jg 0x32e6c ; or eax, esi ; je 0x32dd3 ; ret
0x00000000000367b2 : jg 0x367fb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000040ec2 : jg 0x40ecd ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x0000000000040ec1 : jg 0x40ece ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x0000000000041aab : jg 0x41b19 ; xor eax, eax ; ret
0x0000000000041c77 : jg 0x41b7f ; pop rbx ; pop rbp ; ret
0x0000000000043ac4 : jg 0x43ad1 ; ret 0x5488
0x000000000006ecd7 : jg 0x6ec65 ; inc byte ptr [rdx] ; je 0x6ecf1 ; mov dword ptr [rdi], edx ; ret
0x0000000000081cd2 : jg 0x81d24 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000081e77 : jg 0x81e90 ; jne 0x81e67 ; mov rax, rdi ; ret
0x0000000000086f47 : jg 0x86f5e ; jne 0x86f35 ; ret
0x00000000000883f8 : jg 0x883e3 ; ret
0x000000000008e1a4 : jg 0x8e1b5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000008e1b8 : jg 0x8e1c9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000008e62a : jg 0x8e626 ; ret
0x000000000008e8f7 : jg 0x8e908 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000008e90b : jg 0x8e91c ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000008ed7d : jg 0x8ed79 ; ret
0x000000000008f044 : jg 0x8f055 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000008f058 : jg 0x8f069 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000008f4ca : jg 0x8f4c6 ; ret
0x0000000000094466 : jg 0x94471 ; ret
0x0000000000094476 : jg 0x94484 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009448a : jg 0x94499 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000944a9 : jg 0x944b7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000944b9 : jg 0x944c7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000944c9 : jg 0x944da ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000944ea : jg 0x944f9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009450a : jg 0x94519 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009452a : jg 0x94539 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009454a : jg 0x9455c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009458d : jg 0x9459f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000945ad : jg 0x945bf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000945cb : jg 0x945db ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000945eb : jg 0x945fb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009460b : jg 0x9461b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009462b : jg 0x9463b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000094bb8 : jg 0x94bc3 ; jne 0x95478 ; ret
0x0000000000094bdc : jg 0x94be8 ; jne 0x95478 ; ret
0x0000000000094bff : jg 0x94c0c ; jne 0x95478 ; ret
0x0000000000094c1a : jg 0x94c28 ; jne 0x95478 ; ret
0x0000000000094c3d : jg 0x94c4c ; jne 0x95478 ; ret
0x0000000000094c62 : jg 0x94c72 ; jne 0x95478 ; ret
0x0000000000094c80 : jg 0x94c91 ; jne 0x95478 ; ret
0x0000000000094c9c : jg 0x94cae ; jne 0x95478 ; ret
0x0000000000094cbf : jg 0x94cd2 ; jne 0x95478 ; ret
0x0000000000094ce4 : jg 0x94cf8 ; jne 0x95478 ; ret
0x0000000000094d02 : jg 0x94d17 ; jne 0x95478 ; ret
0x0000000000094d22 : jg 0x94d38 ; jne 0x95478 ; ret
0x0000000000094d44 : jg 0x94d5b ; jne 0x95478 ; ret
0x0000000000094d64 : jg 0x94d7c ; jne 0x95478 ; ret
0x0000000000094d84 : jg 0x94d9d ; jne 0x95478 ; ret
0x0000000000094d9e : jg 0x94db8 ; jne 0x95478 ; ret
0x0000000000094dc1 : jg 0x94ddc ; jne 0x95478 ; ret
0x0000000000094de6 : jg 0x94e02 ; jne 0x95478 ; ret
0x0000000000094e04 : jg 0x94e21 ; jne 0x95478 ; ret
0x0000000000094e24 : jg 0x94e42 ; jne 0x95478 ; ret
0x0000000000094e47 : jg 0x94e66 ; jne 0x95478 ; ret
0x0000000000094e66 : jg 0x94e86 ; jne 0x95478 ; ret
0x0000000000094e86 : jg 0x94ea7 ; jne 0x95478 ; ret
0x0000000000094ea6 : jg 0x94ec8 ; jne 0x95478 ; ret
0x0000000000094ec9 : jg 0x94eec ; jne 0x95478 ; ret
0x0000000000094efe : jg 0x94f22 ; jne 0x95478 ; ret
0x0000000000094f2c : jg 0x94f51 ; jne 0x95478 ; ret
0x0000000000094f5c : jg 0x94f82 ; jne 0x95478 ; ret
0x0000000000094f88 : jg 0x94faf ; jne 0x95478 ; ret
0x0000000000094fb8 : jg 0x94fe0 ; jne 0x95478 ; ret
0x0000000000094fe8 : jg 0x95011 ; jne 0x95478 ; ret
0x0000000000095018 : jg 0x95042 ; jne 0x95478 ; ret
0x0000000000095136 : jg 0x95141 ; ret
0x0000000000095149 : jg 0x95157 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009515a : jg 0x95169 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000095179 : jg 0x95187 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000095189 : jg 0x95197 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009519c : jg 0x951ad ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000951ba : jg 0x951c9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000951da : jg 0x951e9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000951fa : jg 0x95209 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009521d : jg 0x9522f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009525d : jg 0x9526f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009527d : jg 0x9528f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009529b : jg 0x952ab ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000952bb : jg 0x952cb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000952db : jg 0x952eb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000952fb : jg 0x9530b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000095432 : jg 0x9543d ; ret
0x0000000000095566 : jg 0x9559a ; ret
0x0000000000095ad6 : jg 0x95ae5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000095ae6 : jg 0x95af8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095b19 : jg 0x95b2b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000095b39 : jg 0x95b4b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000095c5f : jg 0x95cbf ; or eax, 0x1c478d48 ; ret
0x000000000009625b : jg 0x96266 ; jne 0x96c88 ; ret
0x0000000000096280 : jg 0x9628c ; jne 0x96c88 ; ret
0x00000000000962a3 : jg 0x962b0 ; jne 0x96c88 ; ret
0x00000000000962be : jg 0x962cc ; jne 0x96c88 ; ret
0x00000000000962e1 : jg 0x962f0 ; jne 0x96c88 ; ret
0x0000000000096306 : jg 0x96316 ; jne 0x96c88 ; ret
0x0000000000096324 : jg 0x96335 ; jne 0x96c88 ; ret
0x0000000000096340 : jg 0x96352 ; jne 0x96c88 ; ret
0x0000000000096363 : jg 0x96376 ; jne 0x96c88 ; ret
0x0000000000096388 : jg 0x9639c ; jne 0x96c88 ; ret
0x00000000000963b6 : jg 0x963cb ; jne 0x96c88 ; ret
0x00000000000963d6 : jg 0x963ec ; jne 0x96c88 ; ret
0x00000000000963f8 : jg 0x9640f ; jne 0x96c88 ; ret
0x0000000000096428 : jg 0x96440 ; jne 0x96c88 ; ret
0x0000000000096458 : jg 0x96471 ; jne 0x96c88 ; ret
0x0000000000096482 : jg 0x9649c ; jne 0x96c88 ; ret
0x00000000000964a5 : jg 0x964c0 ; jne 0x96c88 ; ret
0x00000000000964ca : jg 0x964e6 ; jne 0x96c88 ; ret
0x00000000000964f8 : jg 0x96515 ; jne 0x96c88 ; ret
0x0000000000096528 : jg 0x96546 ; jne 0x96c88 ; ret
0x000000000009655b : jg 0x9657a ; jne 0x96c88 ; ret
0x000000000009658a : jg 0x965aa ; jne 0x96c88 ; ret
0x00000000000965ba : jg 0x965db ; jne 0x96c88 ; ret
0x00000000000965ea : jg 0x9660c ; jne 0x96c88 ; ret
0x000000000009661d : jg 0x96640 ; jne 0x96c88 ; ret
0x0000000000096652 : jg 0x96676 ; jne 0x96c88 ; ret
0x0000000000096680 : jg 0x966a5 ; jne 0x96c88 ; ret
0x00000000000966b0 : jg 0x966d6 ; jne 0x96c88 ; ret
0x00000000000966dc : jg 0x96703 ; jne 0x96c88 ; ret
0x000000000009670c : jg 0x96734 ; jne 0x96c88 ; ret
0x000000000009673c : jg 0x96765 ; jne 0x96c88 ; ret
0x000000000009676c : jg 0x96796 ; jne 0x96c88 ; ret
0x0000000000096916 : jg 0x96925 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000096929 : jg 0x9693b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000096969 : jg 0x9697b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000096989 : jg 0x9699b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000096aaf : jg 0x96b0f ; or eax, 0x1d478d48 ; ret
0x0000000000096c42 : jg 0x96c4d ; ret
0x0000000000096d76 : jg 0x96dae ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000096d75 : jg 0x96dfd ; xor byte ptr [rax - 0x73], cl ; ret
0x0000000000097546 : jg 0x97551 ; ret
0x0000000000097556 : jg 0x97564 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009756a : jg 0x97579 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000097589 : jg 0x97597 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000097599 : jg 0x975a7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000975a9 : jg 0x975ba ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000975ca : jg 0x975d9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000975ea : jg 0x975f9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009760a : jg 0x97619 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009762a : jg 0x9763c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009766d : jg 0x9767f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009768d : jg 0x9769f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000976ab : jg 0x976bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000976cb : jg 0x976db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000976eb : jg 0x976fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009770b : jg 0x9771b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000098016 : jg 0x98021 ; ret
0x0000000000098026 : jg 0x98034 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009803a : jg 0x98049 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000098059 : jg 0x98067 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000098069 : jg 0x98077 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000098079 : jg 0x9808a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009809a : jg 0x980a9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000980ba : jg 0x980c9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000980da : jg 0x980e9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000980fa : jg 0x9810c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009813d : jg 0x9814f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009815d : jg 0x9816f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009817b : jg 0x9818b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009819b : jg 0x981ab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000981bb : jg 0x981cb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000981db : jg 0x981eb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000098386 : jg 0x98396 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009855f : jg 0x985c0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009857f : jg 0x985e0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000985f6 : jg 0x9862f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000985f5 : jg 0x9867e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000098c17 : jg 0x98c27 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000098c0d : jg 0x98c2d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000991e0 : jg 0x9921d ; ret 0x2b77
0x000000000009a2a5 : jg 0x9a2ad ; neg eax ; ret
0x00000000000a7ef5 : jg 0xa7f43 ; cmovle eax, edx ; pop rbx ; ret
0x00000000000a7ef5 : jg 0xa7f45 ; cmovle eax, edx ; pop rbx ; ret
0x00000000000b2ae7 : jg 0xb2aba ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b4794 : jg 0xb47c9 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000b887c : jg 0xb8882 ; add byte ptr [rax], al ; ret
0x00000000000b88cb : jg 0xb88d4 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000b88cb : jg 0xb88d5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000d3ea5 : jg 0xd3ec4 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xd3ef1 ; ret
0x00000000000dfa1a : jg 0xdfa09 ; ret
0x0000000000108def : jge 0x108db5 ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000010e6cf : jge 0x10e6e3 ; call rax
0x00000000001133df : jge 0x1133f3 ; call rax
0x0000000000113a28 : jge 0x113a3c ; call rax
0x000000000014b654 : jge 0x14b668 ; call rbx
0x0000000000160194 : jge 0x1601a3 ; cmc ; jmp rax
0x000000000016bb69 : jge 0x16bb68 ; call qword ptr [rax]
0x000000000016c3c5 : jge 0x16c3c5 ; call rax
0x000000000016c3c1 : jge 0x16c3c5 ; inc dword ptr [rax + 0x7d] ; cld ; call rax
0x000000000016c3c4 : jge 0x16c3c6 ; call rax
0x000000000016c401 : jge 0x16c401 ; jmp qword ptr [rsi]
0x000000000016c481 : jge 0x16c481 ; call qword ptr [rdx]
0x000000000016c5c1 : jge 0x16c5c1 ; jmp rax
0x000000000016d895 : jge 0x16d89d ; add byte ptr [rdx + rbx*2], ch ; in al, dx ; call rsp
0x000000000017000d : jge 0x170016 ; add byte ptr [rbx + rcx*8 - 0xa], ch ; call rsp
0x0000000000174291 : jge 0x174280 ; call qword ptr [rdi]
0x000000000017beb9 : jge 0x17beac ; call qword ptr [rdx]
0x000000000017bef1 : jge 0x17bee4 ; call qword ptr [rdx]
0x0000000000180669 : jge 0x18065f ; jmp qword ptr [rax]
0x000000000018dd11 : jge 0x18dd0c ; call qword ptr [rbx]
0x0000000000022054 : jge 0x22002 ; call 0x7e294
0x000000000006ea4d : jge 0x6eac3 ; call 0xdad44
0x000000000008d6cf : jge 0x8d6d7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009b126 : jge 0x9b12b ; call r12
0x00000000000c4f0a : jge 0xc4ee3 ; mov edx, eax ; jmp 0xc4eec
0x00000000000daca2 : jge 0xdacf4 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e4ac9 : jge 0xe4a94 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000106542 : jl 0x106571 ; or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x000000000010c365 : jl 0x10c38f ; adc al, ch ; ret
0x000000000010eec7 : jl 0x10eef2 ; or byte ptr [rax + 0x63], cl ; ret
0x000000000014937b : jl 0x149384 ; neg eax ; ret
0x000000000014bff4 : jl 0x14c030 ; and eax, 0 ; add bl, dh ; ret
0x000000000015e184 : jl 0x15e184 ; out dx, eax ; jmp rsp
0x0000000000161f95 : jl 0x161f97 ; push rax ; jnp 0x161f9b ; jmp qword ptr [rax]
0x0000000000161f9d : jl 0x161f9b ; call qword ptr [rax]
0x000000000016bb65 : jl 0x16bb68 ; inc eax ; jge 0x16bb6c ; call qword ptr [rax]
0x000000000016c40d : jl 0x16c40d ; call rsi
0x000000000016c409 : jl 0x16c40d ; inc dword ptr [rsi + 0x7c] ; cld ; call rsi
0x000000000016c40c : jl 0x16c40e ; call rsi
0x000000000016c45c : jl 0x16c4db ; cld ; jmp qword ptr [rdx]
0x000000000016c5cd : jl 0x16c5d1 ; call qword ptr [rax + 0x20fffc7b]
0x000000000016d7f8 : jl 0x16d84f ; in al, dx ; call rsp
0x000000000016dd28 : jl 0x16dcd3 ; in al, dx ; call rsp
0x000000000016eb49 : jl 0x16eb3d ; jmp rsp
0x00000000001715bc : jl 0x1715b5 ; add dword ptr [rax], eax ; mov esi, ds ; clc ; call rsp
0x0000000000171939 : jl 0x171936 ; jmp rsp
0x0000000000171c08 : jl 0x171bdd ; stc ; jmp rsp
0x0000000000171ee8 : jl 0x171f12 ; cli ; jmp rsp
0x0000000000171fdc : jl 0x17201d ; add al, byte ptr [rax] ; or al, 0x49 ; cli ; call rsp
0x0000000000172500 : jl 0x1724c4 ; cli ; call rsp
0x00000000001727bd : jl 0x1727c6 ; add byte ptr [rsi + rdi*8], bl ; cli ; jmp rsp
0x0000000000172834 : jl 0x17284e ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; add al, 0xfb ; jmp rsp
0x0000000000174cdc : jl 0x174d04 ; add byte ptr [rax], al ; loopne 0x174ca9 ; jmp 0x174ce8
0x00000000001764dc : jl 0x17651e ; add byte ptr [rax], al ; push rax ; adc ebp, esp ; call qword ptr [rax]
0x000000000017be41 : jl 0x17be34 ; call qword ptr [rsi]
0x00000000001850dc : jl 0x18510a ; add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000018dddc : jl 0x18dd97 ; add dword ptr [rax], eax ; jo 0x18ddcb ; sti ; jmp qword ptr [rdx]
0x0000000000023d0e : jl 0x23d3c ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024114 : jl 0x24142 ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000245b9 : jl 0x245e7 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002499f : jl 0x249cd ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000025311 : jl 0x2533b ; call r15
0x00000000000255c7 : jl 0x255f5 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000025e3 : jl 0x2576 ; loop 0x25c1 ; ret 0x23cb
0x0000000000025e79 : jl 0x25ea2 ; call rbx
0x00000000000261e4 : jl 0x26212 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000026d65 : jl 0x26d93 ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004ad88 : jl 0x4ad52 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000008899d : jl 0x889c8 ; sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000008b0a0 : jl 0x8b082 ; or eax, 0x358d4800 ; ret 0xd9e
0x000000000008d75a : jl 0x8d7c5 ; add rax, rdi ; ret
0x000000000008d76a : jl 0x8d7c7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008d78a : jl 0x8d7c7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008d7aa : jl 0x8d7c7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008e124 : jl 0x8e173 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008e160 : jl 0x8e1af ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000008e35e : jl 0x8e3ad ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008e4c5 : jl 0x8e514 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000008e627 : jl 0x8e676 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000008e877 : jl 0x8e8c6 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008e8b3 : jl 0x8e902 ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000008eab1 : jl 0x8eb00 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008ec18 : jl 0x8ec67 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000008ed7a : jl 0x8edc9 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000008efc4 : jl 0x8f013 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008f000 : jl 0x8f04f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000008f1fe : jl 0x8f24d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008f365 : jl 0x8f3b4 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000008f4c7 : jl 0x8f516 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000098bcc : jl 0x98c1b ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000098bed : jl 0x98c3c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000098c00 : jl 0x98c4f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000098cd5 : jl 0x98d24 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000098d2d : jl 0x98d7c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000098dca : jl 0x98e19 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000a0c35 : jl 0xa0c5f ; or al, ch ; ret
0x00000000000a64c8 : jl 0xa64f3 ; or al, ch ; nop ; ret 0xfff7
0x00000000000aee43 : jl 0xaee6e ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000b0015 : jl 0xb002b ; add ebp, ecx ; ret 0xfff0
0x00000000000b4260 : jl 0xb428e ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000bf782 : jl 0xbf7ac ; jo 0xbf70d ; ret 0x8d01
0x00000000000bff7c : jl 0xbff85 ; add byte ptr [rax], al ; call 0x2c236
0x00000000000c1cc0 : jl 0xc1cb3 ; ret
0x00000000000c1fb3 : jl 0xc1fe8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c35e8 : jl 0xc3616 ; pop rax ; mov r13d, eax ; call 0x1f890
0x00000000000c7a88 : jl 0xc7ad6 ; mov edx, eax ; jmp 0xc7abb
0x00000000000cb02e : jl 0xcb05a ; add rax, rdx ; jmp rax
0x00000000000cc09b : jl 0xcc0c6 ; sub byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000cd5ee : jl 0xcd618 ; jo 0xcd5f7 ; ret 0xc083
0x00000000000de2c7 : jl 0xde2cf ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000000e48db : jl 0xe4909 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000e77d4 : jl 0xe7819 ; je 0xe77dd ; ret
0x00000000000f7d7b : jl 0xf7daa ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00000000001124b8 : jle 0x1124d0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000123206 : jle 0x123121 ; movsxd rax, ecx ; ret
0x000000000012344a : jle 0x12338b ; ret
0x000000000016c3b9 : jle 0x16c3b9 ; jmp qword ptr [rax]
0x000000000016c3fd : jle 0x16c401 ; call qword ptr [rsi + 0x26fffc7d]
0x000000000016c539 : jle 0x16c539 ; call rsp
0x000000000016c535 : jle 0x16c539 ; inc dword ptr [rsi + rdi*2 - 4] ; call rsp
0x000000000016c538 : jle 0x16c53a ; call rsp
0x00000000001806f9 : jle 0x1806ef ; jmp qword ptr [rcx]
0x00000000001840e9 : jle 0x1840f7 ; ret
0x00000000001931d1 : jle 0x1931cd ; call rbx
0x00000000000293e2 : jle 0x293f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000003180 : jle 0x317e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000007e30e : jle 0x7e317 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000007e30e : jle 0x7e318 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000a3b59 : jle 0xa3b6c ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000b4904 : jle 0xb4939 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000b811d : jle 0xb812b ; ret
0x00000000000b8929 : jle 0xb892f ; add byte ptr [rax], al ; ret
0x00000000000e331d : jle 0xe334e ; add bl, dh ; ret
0x0000000000104c67 : jmp 0x104c2d
0x00000000001080f1 : jmp 0x1080fd
0x00000000000d9186 : jmp 0x10861cd9
0x000000000010db5f : jmp 0x10db25
0x0000000000112aee : jmp 0x112af8
0x000000000015a72a : jmp 0x15a769
0x000000000015b469 : jmp 0x15b43c
0x000000000015c460 : jmp 0x15c3f4
0x000000000015c45f : jmp 0x15c3f5
0x000000000016d312 : jmp 0x16d314
0x000000000016d392 : jmp 0x16d394
0x000000000016d3aa : jmp 0x16d3ac
0x000000000016d4b2 : jmp 0x16d4b4
0x000000000016d522 : jmp 0x16d524
0x000000000016d54a : jmp 0x16d54c
0x000000000016d63a : jmp 0x16d63c
0x000000000016d68a : jmp 0x16d68c
0x000000000016d71a : jmp 0x16d71c
0x000000000016d742 : jmp 0x16d744
0x00000000001733ba : jmp 0x1733bc
0x00000000001733f2 : jmp 0x1733f4
0x0000000000173562 : jmp 0x173564
0x000000000017386a : jmp 0x17386c
0x00000000001738f2 : jmp 0x1738f4
0x000000000017397a : jmp 0x17397c
0x0000000000173979 : jmp 0x17397d
0x0000000000173d7a : jmp 0x173d7c
0x0000000000173e82 : jmp 0x173e84
0x000000000017414a : jmp 0x17414c
0x0000000000174292 : jmp 0x174294
0x00000000001744b2 : jmp 0x1744b4
0x0000000000174542 : jmp 0x174544
0x000000000017455a : jmp 0x17455c
0x0000000000174572 : jmp 0x174574
0x000000000017458a : jmp 0x17458c
0x00000000001745a2 : jmp 0x1745a4
0x00000000001745ba : jmp 0x1745bc
0x00000000001745d2 : jmp 0x1745d4
0x00000000001745ea : jmp 0x1745ec
0x0000000000174602 : jmp 0x174604
0x000000000017461a : jmp 0x17461c
0x0000000000174632 : jmp 0x174634
0x000000000017467a : jmp 0x17467c
0x0000000000174692 : jmp 0x174694
0x00000000001746aa : jmp 0x1746ac
0x00000000001746c2 : jmp 0x1746c4
0x000000000017493a : jmp 0x17493c
0x000000000017496a : jmp 0x17496c
0x0000000000174aca : jmp 0x174acc
0x0000000000174b7a : jmp 0x174b7c
0x0000000000174d82 : jmp 0x174d84
0x0000000000174f8a : jmp 0x174f8c
0x0000000000174fba : jmp 0x174fbc
0x0000000000174fd2 : jmp 0x174fd4
0x00000000001750ea : jmp 0x1750ec
0x0000000000175142 : jmp 0x175144
0x000000000017518a : jmp 0x17518c
0x000000000017539a : jmp 0x17539c
0x000000000017556a : jmp 0x17556c
0x00000000001756ca : jmp 0x1756cc
0x000000000001f87b : jmp 0x1f7a7
0x000000000001fae7 : jmp 0x1faad
0x000000000001fe08 : jmp 0x1fdcd
0x00000000000203c6 : jmp 0x2038b
0x0000000000020919 : jmp 0x208de
0x00000000000230bc : jmp 0x23081
0x000000000002a670 : jmp 0x2a130
0x000000000002fd90 : jmp 0x2ee86
0x00000000000038b3 : jmp 0x3879
0x0000000000036a85 : jmp 0x39c5eb93
0x0000000000042102 : jmp 0x42154
0x0000000000043842 : jmp 0x43894
0x0000000000045cdc : jmp 0x45ce1
0x00000000000489c7 : jmp 0x489a3
0x0000000000068262 : jmp 0x48f50bb5
0x000000000002fd91 : jmp 0x4902fd8d
0x00000000000bef57 : jmp 0x49ce78a0
0x00000000000ce80b : jmp 0x4ccf715b
0x0000000000133a5a : jmp 0x4f924a58
0x0000000000133a59 : jmp 0x4f924a59
0x000000000013652a : jmp 0x4f927528
0x0000000000136529 : jmp 0x4f927529
0x000000000013904a : jmp 0x4f92a048
0x0000000000139049 : jmp 0x4f92a049
0x000000000005a7a9 : jmp 0x5a76f
0x000000000005ffc1 : jmp 0x5c2ad
0x00000000000627b1 : jmp 0x62777
0x000000000016ea2d : jmp 0x63b2ea38
0x0000000000072efd : jmp 0x72f01
0x0000000000074875 : jmp 0x7489f
0x00000000000f62b4 : jmp 0x76d19c04
0x00000000000f6467 : jmp 0x76d19db7
0x000000000007ad28 : jmp 0x7acee
0x000000000007b345 : jmp 0x7b30b
0x000000000007c6a4 : jmp 0x7c66a
0x000000000007c7f8 : jmp 0x7c7bd
0x0000000000087eae : jmp 0x87e74
0x000000000008890b : jmp 0x88805
0x0000000000088eac : jmp 0x88e72
0x0000000000088ff8 : jmp 0x88fbd
0x00000000000891a2 : jmp 0x89167
0x000000000009896e : jmp 0x98934
0x0000000000098a3f : jmp 0x98a05
0x0000000000098aae : jmp 0x98a74
0x000000000009c5f4 : jmp 0x9c3d7
0x000000000009ca13 : jmp 0x9c847
0x000000000009ed52 : jmp 0x9e3ce
0x00000000000a7cd3 : jmp 0xa7d2a
0x00000000000aa195 : jmp 0xaa16e
0x00000000000ab9e4 : jmp 0xab802
0x00000000000ad02e : jmp 0xabddb
0x00000000000b3501 : jmp 0xb34c6
0x00000000000b8135 : jmp 0xba8fb
0x00000000000c06d3 : jmp 0xc0698
0x00000000000c28f2 : jmp 0xc28b7
0x00000000000c45c7 : jmp 0xc458d
0x00000000000c8591 : jmp 0xc8557
0x00000000000d1f82 : jmp 0xd1f47
0x00000000000dfa1b : jmp 0xdf9e1
0x00000000000e249e : jmp 0xe24c4
0x00000000000e3cd2 : jmp 0xe3c98
0x00000000000e50b8 : jmp 0xe507d
0x00000000000e71c0 : jmp 0xe66fc
0x00000000000ec9de : jmp 0xec6d8
0x00000000000ec993 : jmp 0xec71c
0x00000000000ee00c : jmp 0xedf4e
0x00000000000f01ee : jmp 0xf01fd
0x00000000000e7da4 : jmp 0xf0e7dad
0x00000000000f0f3e : jmp 0xf0f50
0x00000000000f7251 : jmp 0xf7216
0x00000000000f8d62 : jmp 0xf8b29
0x00000000000f9122 : jmp 0xf8ef9
0x0000000000040800 : jmp 0xfc69f17
0x000000000004446c : jmp 0xffffffff80c73b84
0x0000000000049aa4 : jmp 0xffffffff80c791bc
0x00000000001121ba : jmp 0xffffffff80d418d2
0x0000000000003186 : jmp 0xffffffff88c2d331
0x000000000010f5bb : jmp 0xffffffff895eb84b
0x00000000000d0aca : jmp 0xffffffffc29052db
0x000000000009a1b3 : jmp 0xffffffffc309a1bc
0x00000000000427c1 : jmp 0xffffffffc313b116
0x000000000008ad56 : jmp 0xffffffffc33fb59f
0x000000000009bc8b : jmp 0xfffffffffff945dc
0x000000000011b3c3 : jmp qword ptr [r15]
0x00000000000e115b : jmp qword ptr [r8]
0x000000000016badb : jmp qword ptr [rax + 0x10fffb2b]
0x000000000016c80f : jmp qword ptr [rax + 0x10fffc71]
0x000000000016d1cf : jmp qword ptr [rax + 0x10fffcbd]
0x000000000016d1e7 : jmp qword ptr [rax + 0x10fffcc2]
0x000000000016c807 : jmp qword ptr [rax + 0x20fffc72]
0x000000000016c7ff : jmp qword ptr [rax + 0x20fffc73]
0x000000000016c7f7 : jmp qword ptr [rax + 0x20fffc74]
0x000000000016c7ef : jmp qword ptr [rax + 0x20fffc75]
0x000000000016c5e3 : jmp qword ptr [rax + 0x20fffc77]
0x000000000016d1c7 : jmp qword ptr [rax + 0x20fffcbe]
0x000000000016d1bf : jmp qword ptr [rax + 0x20fffcbf]
0x000000000016d1b7 : jmp qword ptr [rax + 0x20fffcc0]
0x000000000016d1af : jmp qword ptr [rax + 0x20fffcc1]
0x000000000016bcf3 : jmp qword ptr [rax + 0x20fffdc2]
0x000000000016bcfb : jmp qword ptr [rax + 0x20fffdc3]
0x000000000016cfd7 : jmp qword ptr [rax + 0x30fffcc6]
0x000000000016d4ab : jmp qword ptr [rax + rbp*2]
0x000000000016d25f : jmp qword ptr [rax - 0x1f000362]
0x000000000016c35b : jmp qword ptr [rax - 0x1f0003be]
0x000000000015ecdb : jmp qword ptr [rax - 0x1f000e16]
0x000000000015eccb : jmp qword ptr [rax - 0x1f000e1b]
0x000000000015ecbb : jmp qword ptr [rax - 0x1f000e20]
0x000000000016bb1b : jmp qword ptr [rax - 0x2f0004c5]
0x000000000015f253 : jmp qword ptr [rax - 0x2f000c8e]
0x000000000015f0a7 : jmp qword ptr [rax - 0x2f000ca1]
0x000000000015f11b : jmp qword ptr [rax - 0x3f000c9f]
0x000000000015f0f7 : jmp qword ptr [rax - 0x3f000ca0]
0x000000000015ec67 : jmp qword ptr [rax - 0x4f000e57]
0x00000000000400a6 : jmp qword ptr [rax]
0x000000000016e82b : jmp qword ptr [rbp + rbx*8 + 0x336c0000]
0x000000000015f993 : jmp qword ptr [rbp - 0x3d]
0x000000000016030b : jmp qword ptr [rbx - 0x1e000ae5]
0x0000000000002563 : jmp qword ptr [rbx]
0x000000000016bc4f : jmp qword ptr [rcx + 0x31fffdc6]
0x000000000016e603 : jmp qword ptr [rcx + rdx*8 + 0x7bc0000]
0x000000000005f165 : jmp qword ptr [rcx]
0x000000000016eb43 : jmp qword ptr [rdi + rbp*8 + 0x7c9c0000]
0x0000000000078975 : jmp qword ptr [rdi]
0x000000000016e3cb : jmp qword ptr [rdx + rax*8]
0x0000000000171db3 : jmp qword ptr [rdx + rbp + 2]
0x000000000015e293 : jmp qword ptr [rdx - 0x1b001018]
0x000000000016d063 : jmp qword ptr [rdx - 0x3d]
0x000000000016048b : jmp qword ptr [rdx]
0x0000000000035a91 : jmp qword ptr [rsi + 0xf]
0x000000000016eb23 : jmp qword ptr [rsi + rbp*8 + 0x769c0000]
0x000000000015e25b : jmp qword ptr [rsi - 0x1b001010]
0x000000000002629d : jmp qword ptr [rsi - 0x70]
0x000000000015f9af : jmp qword ptr [rsi]
0x000000000016fd4b : jmp qword ptr [rsp + rbp*2 + 1]
0x0000000000181249 : jmp qword ptr es:[rdi]
0x0000000000001b62 : jmp r10
0x0000000000129aad : jmp r9
0x000000000015f103 : jmp rax
0x00000000001590e7 : jmp rbx
0x000000000002a7da : jmp rcx
0x000000000005c21d : jmp rdi
0x0000000000001b63 : jmp rdx
0x00000000000314c1 : jmp rsi
0x0000000000002a71 : jmp rsp
0x0000000000101c27 : jne 0x101c0c ; ret
0x0000000000102114 : jne 0x102164 ; mov eax, r8d ; ret
0x00000000001022a3 : jne 0x102257 ; mov eax, 0xffffffff ; ret
0x0000000000103dcd : jne 0x103d1a ; ret
0x000000000010584c : jne 0x105852 ; ret
0x000000000010588c : jne 0x105880 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106545 : jne 0x106536 ; add rsp, 0x18 ; ret
0x0000000000109b1d : jne 0x109b68 ; mov dword ptr [rsi], 0 ; ret
0x000000000010a315 : jne 0x10a328 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010a41d : jne 0x10a3b7 ; xor eax, eax ; pop rbx ; ret
0x000000000010b0f2 : jne 0x10b0d5 ; xor eax, eax ; pop rbx ; ret
0x000000000010b152 : jne 0x10b138 ; mov eax, 1 ; pop rbx ; ret
0x000000000010c074 : jne 0x10c063 ; ret
0x000000000010e8f8 : jne 0x10e902 ; ret
0x0000000000113357 : jne 0x113343 ; pop rbx ; ret
0x00000000001135e8 : jne 0x1135f2 ; ret
0x0000000000114a13 : jne 0x114a0a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000115bc2 : jne 0x115bd7 ; mov eax, 1 ; ret
0x0000000000115c02 : jne 0x115c17 ; mov eax, 1 ; ret
0x000000000011a1cc : jne 0x11a1dd ; xor eax, eax ; pop rbx ; ret
0x000000000011be8d : jne 0x11bd98 ; call 0xb8188
0x000000000011c8f9 : jne 0x11c906 ; add rsp, 0x38 ; ret
0x000000000011d5a8 : jne 0x11d5b4 ; xor eax, eax ; ret
0x000000000011d5d8 : jne 0x11d5e4 ; xor eax, eax ; ret
0x000000000011d608 : jne 0x11d614 ; xor eax, eax ; ret
0x000000000011d638 : jne 0x11d644 ; xor eax, eax ; ret
0x000000000011d668 : jne 0x11d674 ; xor eax, eax ; ret
0x000000000011d698 : jne 0x11d6a4 ; xor eax, eax ; ret
0x0000000000141361 : jne 0x141916 ; ret
0x00000000001484fd : jne 0x148527 ; xor eax, eax ; ret
0x0000000000147af1 : jne 0x14852b ; xor eax, eax ; ret
0x0000000000147b19 : jne 0x148537 ; xor eax, eax ; ret
0x000000000014933d : jne 0x149367 ; xor eax, eax ; ret
0x0000000000149121 : jne 0x14936b ; xor eax, eax ; ret
0x0000000000149371 : jne 0x14937a ; xor eax, eax ; ret
0x0000000000149147 : jne 0x14937e ; xor eax, eax ; ret
0x0000000000149485 : jne 0x149416 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000149457 : jne 0x149416 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000149456 : jne 0x149417 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014abe4 : jne 0x14adf8 ; xor eax, eax ; ret
0x000000000014ade9 : jne 0x14ae09 ; xor eax, eax ; ret
0x000000000014ac91 : jne 0x14ae0d ; xor eax, eax ; ret
0x000000000014ae01 : jne 0x14ae0e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000014b416 : jne 0x14b424 ; xor eax, eax ; ret
0x000000000014b2ed : jne 0x14b426 ; ret
0x000000000014b723 : jne 0x14b710 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014bb3d : jne 0x14bb2e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014bb90 : jne 0x14bb70 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014bccd : jne 0x14bcbd ; pop rbx ; ret
0x000000000014bd75 : jne 0x14bd5b ; pop rbx ; ret
0x000000000014bee8 : jne 0x14bef3 ; ret
0x000000000014bfc9 : jne 0x14bfbc ; pop rbx ; ret
0x000000000014c551 : jne 0x14c55b ; pop rbx ; ret
0x000000000015deb4 : jne 0x15de8b ; out dx, eax ; jmp rsi
0x000000000015f295 : jne 0x15f28c ; call qword ptr [rax]
0x000000000015f299 : jne 0x15f290 ; jmp qword ptr [rax]
0x000000000015f2b5 : jne 0x15f2b0 ; inc eax ; jne 0x15f2b4 ; jmp rax
0x000000000015f2b9 : jne 0x15f2b0 ; jmp rax
0x000000000015f2bd : jne 0x15f2b8 ; inc dword ptr [rax] ; jbe 0x15f2bc ; jmp qword ptr [rax]
0x000000000016c5f5 : jne 0x16c5f5 ; call qword ptr [rax]
0x000000000016c5f9 : jne 0x16c5fd ; call qword ptr [rax + 0x10fffc74]
0x000000000016c675 : jne 0x16c675 ; jmp rdx
0x000000000016c7f1 : jne 0x16c7f1 ; jmp qword ptr [rax]
0x000000000016c7f5 : jne 0x16c7f9 ; jmp qword ptr [rax + 0x20fffc74]
0x000000000016d73d : jne 0x16d745 ; add byte ptr [rsp + rdi*8], bl ; jmp 0x16d749
0x000000000018db01 : jne 0x18dafc ; jmp qword ptr [rsi]
0x0000000000022044 : jne 0x21fe2 ; call 0x7e294
0x0000000000031a44 : jne 0x31a22 ; ret
0x00000000000328b0 : jne 0x328c6 ; add rsp, 0x28 ; ret
0x0000000000032beb : jne 0x32bfe ; add rsp, 0x28 ; ret
0x00000000000330d8 : jne 0x330e3 ; ret
0x0000000000033df5 : jne 0x33def ; mov eax, 1 ; ret
0x0000000000033e57 : jne 0x33e44 ; xor eax, eax ; ret
0x0000000000033ea7 : jne 0x33e94 ; xor eax, eax ; ret
0x0000000000034d83 : jne 0x34d8c ; mov rdi, qword ptr [r12] ; call r14
0x000000000003610c : jne 0x360d8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000361bb : jne 0x361c3 ; pop rbx ; ret
0x00000000000378e1 : jne 0x37926 ; add rsp, 8 ; ret
0x000000000003a081 : jne 0x3a0c6 ; add rsp, 8 ; ret
0x000000000003c851 : jne 0x3c896 ; add rsp, 8 ; ret
0x000000000003fb4e : jne 0x3fb27 ; ret
0x0000000000041028 : jne 0x41026 ; mov rax, rbx ; pop rbx ; ret
0x0000000000041e8f : jne 0x41e84 ; xor eax, eax ; ret
0x0000000000041eb5 : jne 0x41e9f ; mov eax, 1 ; ret
0x0000000000041f6f : jne 0x41f64 ; xor eax, eax ; ret
0x0000000000041f95 : jne 0x41f7f ; mov eax, 1 ; ret
0x0000000000042237 : jne 0x42226 ; mov rax, rdx ; ret
0x00000000000428af : jne 0x428a6 ; mov rax, rdx ; ret
0x0000000000043ff1 : jne 0x43fdd ; mov rax, rsi ; ret
0x0000000000044075 : jne 0x44055 ; mov rax, rsi ; ret
0x0000000000058ab8 : jne 0x5a23a ; mov rdx, rax ; jmp 0x58ad9
0x00000000000631b1 : jne 0x631c6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000069cb1 : jne 0x69ca3 ; ret
0x000000000006bfac : jne 0x6bfb3 ; pop rbx ; ret
0x000000000006f940 : jne 0x6f956 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000715c3 : jne 0x715d4 ; xor eax, eax ; ret
0x0000000000072081 : jne 0x72073 ; ret
0x0000000000072b09 : jne 0x72b13 ; pop rbx ; ret
0x0000000000072bd2 : jne 0x72bbd ; pop rbx ; ret
0x0000000000072c0c : jne 0x72c05 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000733e6 : jne 0x733db ; ret
0x00000000000747ef : jne 0x747c1 ; neg rbx ; mov rdi, rbx ; call qword ptr [r14]
0x0000000000074807 : jne 0x74837 ; xor edi, edi ; call qword ptr [r14]
0x0000000000074873 : jne 0x74887 ; jmp 0x748a1
0x000000000007c131 : jne 0x7c123 ; ret
0x000000000007c1db : jne 0x7c1d3 ; ret
0x000000000007c84b : jne 0x7c85d ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000007e433 : jne 0x7e43e ; xor rax, rax ; ret
0x000000000007e6c7 : jne 0x7e6d9 ; lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008037e : jne 0x80344 ; add rsp, 8 ; ret
0x00000000000803a1 : jne 0x803b6 ; add rsp, 8 ; ret
0x0000000000081569 : jne 0x815c5 ; xor rax, rax ; ret
0x0000000000081529 : jne 0x815e9 ; xor rax, rax ; ret
0x0000000000081611 : jne 0x81624 ; lea rax, qword ptr [rip + 0x26] ; ret
0x0000000000081d3a : jne 0x81d23 ; ret
0x0000000000081f23 : jne 0x81e0f ; mov rax, rdi ; ret
0x0000000000081e79 : jne 0x81e65 ; mov rax, rdi ; ret
0x0000000000082437 : jne 0x82449 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008249a : jne 0x824ac ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000084727 : jne 0x84739 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008478a : jne 0x8479c ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000086e9c : jne 0x86eaf ; lea rax, qword ptr [rip + 0x6fbb] ; ret
0x0000000000087008 : jne 0x86ee0 ; ret
0x0000000000086f49 : jne 0x86f33 ; ret
0x00000000000884fb : jne 0x884f3 ; ret
0x00000000000890f6 : jne 0x890e1 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000891a0 : jne 0x891af ; jmp 0x89169
0x00000000000899a5 : jne 0x8999d ; xor eax, eax ; pop rbx ; ret
0x0000000000089977 : jne 0x899ad ; mov rax, rdi ; pop rbx ; ret
0x000000000008ad55 : jne 0x8ad45 ; or byte ptr [rdi], sil ; ret
0x000000000008d126 : jne 0x8d11b ; ret
0x000000000008d16a : jne 0x8d15b ; ret
0x000000000008d1c4 : jne 0x8d1a3 ; ret
0x000000000008d26a : jne 0x8d258 ; cmp r8d, ecx ; je 0x8d258 ; ret
0x000000000008d2a9 : jne 0x8d29c ; xor eax, eax ; ret
0x000000000008d302 : jne 0x8d2e4 ; xor eax, eax ; ret
0x000000000008d362 : jne 0x8d355 ; mov qword ptr [rdx], rcx ; ret
0x000000000008d41b : jne 0x8d410 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008d499 : jne 0x8d481 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008d6cd : jne 0x8d758 ; xor eax, eax ; ret
0x000000000008d70a : jne 0x8d784 ; xor eax, eax ; ret
0x000000000008de4c : jne 0x8de36 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000094bba : jne 0x95476 ; ret
0x000000000009625d : jne 0x96c86 ; ret
0x00000000000987a1 : jne 0x98792 ; ret
0x0000000000098851 : jne 0x98842 ; ret
0x00000000000989c1 : jne 0x989b6 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000098b11 : jne 0x98b06 ; sub rax, 1 ; ret
0x0000000000099457 : jne 0x9944b ; ret
0x000000000009a226 : jne 0x9a2a2 ; ret
0x000000000009a14f : jne 0x9a2a6 ; ret
0x000000000009a12e : jne 0x9a2a8 ; xor eax, eax ; ret
0x000000000009a2d1 : jne 0x9a2e4 ; lea rax, qword ptr [rip + 0xd396] ; ret
0x000000000009a693 : jne 0x9a65b ; ret
0x000000000009a6d6 : jne 0x9a6c9 ; mov dword ptr [rsi + 4], 0 ; ret
0x000000000009a7a9 : jne 0x9a795 ; xor eax, eax ; ret
0x000000000009a866 : jne 0x9a85b ; ret
0x000000000009a898 : jne 0x9a883 ; ret
0x000000000009ab7b : jne 0x9abd6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009ac53 : jne 0x9ac23 ; ret
0x000000000009ac3d : jne 0x9ac33 ; ret
0x000000000009ad0c : jne 0x9ad04 ; xor eax, eax ; ret
0x000000000009ad68 : jne 0x9ad46 ; mov rax, rdi ; ret
0x000000000009ae91 : jne 0x9aea4 ; lea rax, qword ptr [rip + 0xc726] ; ret
0x000000000009af33 : jne 0x9af3e ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009af63 : jne 0x9af5b ; ret
0x000000000009afff : jne 0x9aff6 ; sub rax, 4 ; ret
0x000000000009b01e : jne 0x9b030 ; ret
0x000000000009c0ab : jne 0x9c066 ; mov rax, rdx ; ret
0x000000000009c0ec : jne 0x9c0e3 ; ret
0x000000000009ccc1 : jne 0x9cd06 ; add rsp, 8 ; ret
0x000000000009f2d1 : jne 0x9f316 ; add rsp, 8 ; ret
0x00000000000a16d1 : jne 0xa1716 ; add rsp, 8 ; ret
0x00000000000a7663 : jne 0xa7640 ; ret
0x00000000000a7694 : jne 0xa768b ; ret
0x00000000000a9242 : jne 0xa9258 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ab619 : jne 0xab631 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000b2ca2 : jne 0xb2c86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7422 : jne 0xb7407 ; mov rdi, r12 ; call 0x736b7
0x00000000000b73e8 : jne 0xb7588 ; call 0x73688
0x00000000000b88b1 : jne 0xb887e ; ret
0x00000000000b88f7 : jne 0xb8882 ; mov eax, 0x7d00 ; ret
0x00000000000b89b9 : jne 0xb89e2 ; ret
0x00000000000b8a23 : jne 0xb89e6 ; mov eax, 0x40 ; ret
0x00000000000b8ac0 : jne 0xb8a9f ; xor eax, eax ; ret
0x00000000000b8abc : jne 0xb8b38 ; add byte ptr [rax], al ; jne 0xb8aa3 ; xor eax, eax ; ret
0x00000000000b9860 : jne 0xb983b ; xor eax, eax ; ret
0x00000000000b9b28 : jne 0xb9b0c ; ret
0x00000000000b9b38 : jne 0xb9b25 ; mov eax, 1 ; ret
0x00000000000bc0be : jne 0xbc0b0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bffd3 : jne 0xbffc9 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000c006a : jne 0xc0058 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c01c3 : jne 0xc01be ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000c042c : jne 0xc0433 ; ret
0x00000000000c186a : jne 0xc1873 ; pop rbx ; ret
0x00000000000c28ea : jne 0xc2879 ; mov r12d, 1 ; jmp 0xc28bf
0x00000000000c4bed : jne 0xc4b3d ; pop rbx ; ret
0x00000000000c4bec : jne 0xc4b3e ; pop rbx ; ret
0x00000000000c4b9a : jne 0xc4b99 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xc4b3f ; pop rbx ; ret
0x00000000000d3edf : jne 0xd3ed5 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d3eab : jne 0xd3eeb ; ret
0x00000000000d453b : jne 0xd4529 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000daca1 : jne 0xdad29 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e0e36 : jne 0xe0e47 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e0f46 : jne 0xe0f28 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e0fa7 : jne 0xe0f88 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e249c : jne 0xe24b1 ; jmp 0xe24c6
0x00000000000e4a38 : jne 0xe4a20 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e5d6a : jne 0xe5d68 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e6627 : jne 0xe661e ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000eee87 : jne 0xeee73 ; ret
0x00000000000f206e : jne 0xf20a7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f2290 : jne 0xf2280 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f3755 : jne 0xf3769 ; cmp qword ptr [rdi], 0 ; je 0xf3771 ; ret
0x00000000000f37c8 : jne 0xf37d7 ; mov eax, 1 ; ret
0x00000000000f37f8 : jne 0xf3804 ; xor eax, eax ; ret
0x00000000000f3828 : jne 0xf3834 ; xor eax, eax ; ret
0x00000000000f3858 : jne 0xf3864 ; xor eax, eax ; ret
0x00000000000f3888 : jne 0xf3894 ; xor eax, eax ; ret
0x00000000000f38b8 : jne 0xf38c4 ; xor eax, eax ; ret
0x00000000000f38e8 : jne 0xf38f4 ; xor eax, eax ; ret
0x00000000000f3918 : jne 0xf3924 ; xor eax, eax ; ret
0x00000000000f3948 : jne 0xf3954 ; xor eax, eax ; ret
0x00000000000f3978 : jne 0xf3984 ; xor eax, eax ; ret
0x00000000000f39a8 : jne 0xf39b4 ; xor eax, eax ; ret
0x00000000000f39d8 : jne 0xf39e4 ; xor eax, eax ; ret
0x00000000000f3a08 : jne 0xf3a14 ; xor eax, eax ; ret
0x00000000000f3a38 : jne 0xf3a44 ; xor eax, eax ; ret
0x00000000000f3a68 : jne 0xf3a74 ; xor eax, eax ; ret
0x00000000000f3a98 : jne 0xf3aa4 ; xor eax, eax ; ret
0x00000000000f3ac8 : jne 0xf3ad4 ; xor eax, eax ; ret
0x00000000000f3af8 : jne 0xf3b04 ; xor eax, eax ; ret
0x00000000000f3b28 : jne 0xf3b34 ; xor eax, eax ; ret
0x00000000000f3b58 : jne 0xf3b64 ; xor eax, eax ; ret
0x00000000000f3b88 : jne 0xf3b94 ; xor eax, eax ; ret
0x00000000000f3be8 : jne 0xf3bf4 ; xor eax, eax ; ret
0x00000000000f3c18 : jne 0xf3c24 ; xor eax, eax ; ret
0x00000000000f3c48 : jne 0xf3c54 ; xor eax, eax ; ret
0x00000000000f3c78 : jne 0xf3c84 ; xor eax, eax ; ret
0x00000000000f3ca8 : jne 0xf3cb4 ; xor eax, eax ; ret
0x00000000000f3cd8 : jne 0xf3ce4 ; xor eax, eax ; ret
0x00000000000f3d08 : jne 0xf3d14 ; xor eax, eax ; ret
0x00000000000f3d38 : jne 0xf3d44 ; xor eax, eax ; ret
0x00000000000f3d68 : jne 0xf3d74 ; xor eax, eax ; ret
0x00000000000f3db1 : jne 0xf3da9 ; pop rdx ; pop r10 ; ret
0x00000000000f3ea5 : jne 0xf3eb3 ; ret
0x00000000000f40b4 : jne 0xf4093 ; ret
0x00000000000f40ef : jne 0xf40e7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000f4247 : jne 0xf41e7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000f4744 : jne 0xf472f ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000f4773 : jne 0xf476c ; xor eax, eax ; leave ; ret
0x00000000000f5114 : jne 0xf50be ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000f648a : jne 0xf64a0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f6766 : jne 0xf671a ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000fe099 : jne 0xfe090 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112813 : jno 0x1127a4 ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000147dae : jno 0x147dbd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015f229 : jno 0x15f220 ; jmp qword ptr [rax]
0x000000000015f23d : jno 0x15f234 ; call rax
0x000000000016bc2c : jno 0x16bbf8 ; std ; push qword ptr [rcx - 0x3e] ; std ; push rcx ; ret 0xfffd
0x000000000016bc30 : jno 0x16bbf9 ; std ; push rcx ; ret 0xfffd
0x000000000016bc38 : jno 0x16bc02 ; std ; push rcx ; ret
0x000000000016c7d1 : jno 0x16c7d1 ; jmp qword ptr [rax]
0x000000000016c811 : jno 0x16c811 ; call qword ptr [rax]
0x000000000016d635 : jno 0x16d63d ; add ah, ch ; int1 ; jmp 0x16d641
0x000000000016f7f9 : jno 0x16f7f1 ; call rsp
0x00000000001780f6 : jno 0x178104 ; ret
0x00000000001780f6 : jno 0x17810a ; ret
0x00000000000021d7 : jno 0x2224 ; ret 0x1dd4
0x0000000000033eee : jno 0x33f2a ; add byte ptr [rcx], bh ; ret 0x237f
0x0000000000003957 : jno 0x39a1 ; xchg eax, ebx ; and cl, ah ; ret
0x00000000000426b4 : jno 0x42706 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005b21b : jno 0x5b1a8 ; ret 0x348
0x000000000005b4ab : jno 0x5b438 ; ret 0x348
0x000000000005b963 : jno 0x5b8f0 ; ret 0x348
0x000000000005be04 : jno 0x5bd91 ; ret 0x348
0x0000000000069321 : jno 0x6932f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000008e120 : jno 0x8e129 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000008e35a : jno 0x8e363 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000008e4c1 : jno 0x8e4d2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000008e626 : jno 0x8e6aa ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000008e873 : jno 0x8e87c ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000008eaad : jno 0x8eab6 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000008ec14 : jno 0x8ec25 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000008ed79 : jno 0x8edfd ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000008efc0 : jno 0x8efc9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000008f1fa : jno 0x8f203 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000008f361 : jno 0x8f372 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000008f4c6 : jno 0x8f54a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000009af31 : jno 0x9af3f ; jne 0x9af40 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009af36 : jno 0x9af43 ; ret
0x00000000000ab9e2 : jno 0xab9f1 ; jmp 0xab804
0x00000000000acefa : jno 0xace87 ; ret 0xe283
0x00000000000ad183 : jno 0xad110 ; ret 0xe283
0x00000000000ad20a : jno 0xad197 ; ret 0xe283
0x00000000000ad29a : jno 0xad227 ; ret 0xe283
0x00000000000ad32a : jno 0xad2b7 ; ret 0xe283
0x00000000000ad3b2 : jno 0xad33f ; ret 0xe283
0x00000000000ad482 : jno 0xad40f ; ret 0xe283
0x00000000000ad512 : jno 0xad49f ; ret 0xe283
0x00000000000add85 : jno 0xadd7f ; ret
0x00000000000added : jno 0xadde7 ; ret
0x00000000000ade3d : jno 0xade37 ; ret
0x00000000000adf1f : jno 0xadeac ; ret 0xe283
0x00000000000ae0a8 : jno 0xae035 ; ret 0xe283
0x00000000000ae292 : jno 0xae21f ; ret 0xe283
0x00000000000eedf6 : jno 0xeedfe ; cmovne eax, edx ; ret
0x00000000000eedf6 : jno 0xeedff ; cmovne eax, edx ; ret
0x00000000000eedf5 : jno 0xeee00 ; cmovne eax, edx ; ret
0x0000000000110343 : jnp 0x1103af ; call rax
0x0000000000110d63 : jnp 0x110dbf ; call rax
0x000000000015af45 : jnp 0x15af02 ; ret
0x0000000000161f99 : jnp 0x161f97 ; jmp qword ptr [rax]
0x000000000016c3d5 : jnp 0x16c3d5 ; call qword ptr [rax]
0x000000000016c495 : jnp 0x16c495 ; jmp rdx
0x000000000016c5d1 : jnp 0x16c5d1 ; jmp qword ptr [rax]
0x000000000016d7f5 : jnp 0x16d7fd ; add byte ptr [rdx + rdx*2 - 0x14], bh ; call rsp
0x000000000018a6b5 : jnp 0x18a6be ; add byte ptr [rax], ch ; sbb ah, bh ; jmp qword ptr [rsi]
0x000000000002f344 : jnp 0x2f350 ; add byte ptr [rcx - 0x77], cl ; ret 0x14d
0x0000000000041025 : jnp 0x41031 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000df658 : jnp 0x481a1aab ; add esp, 0x18 ; ret
0x0000000000054ff1 : jnp 0x55056 ; xor al, 0 ; call rax
0x00000000000759b2 : jnp 0x759c8 ; call 0x81c94
0x00000000000a6470 : jnp 0xa6486 ; call 0x22764
0x00000000000b9851 : jnp 0xb9865 ; xchg eax, esp ; ret 0xb60f
0x00000000000c1867 : jnp 0xc18d2 ; add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x00000000000c7811 : jnp 0xc77ba ; sti ; call rcx
0x000000000011d333 : jns 0x11d39b ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000015a04e : jns 0x159fe4 ; ret 0xf869
0x000000000015a04d : jns 0x159fe5 ; ret 0xf869
0x000000000015c45e : jns 0x15c4b5 ; jmp 0x15c3f6
0x000000000015e1fc : jns 0x15e1f3 ; out dx, eax ; jmp rsp
0x000000000015f359 : jns 0x15f350 ; call qword ptr [rax]
0x000000000015f35d : jns 0x15f354 ; jmp qword ptr [rax]
0x000000000017bbf1 : jns 0x17bbe4 ; jmp qword ptr [rbx]
0x0000000000001b2d : jns 0x1b38 ; ret
0x00000000000203c0 : jns 0x202b0 ; jmp 0x20391
0x00000000000289a4 : jns 0x29d4bbab ; ret
0x0000000000002be3 : jns 0x2bb1 ; clc ; ret
0x0000000000003267 : jns 0x3242 ; ret 0x5a51
0x00000000000038ef : jns 0x3942 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000008e127 : jns 0x8e12a ; ret
0x000000000008e361 : jns 0x8e364 ; ret
0x000000000008e4c8 : jns 0x8e4d3 ; ret
0x000000000008e87a : jns 0x8e87d ; ret
0x000000000008eab4 : jns 0x8eab7 ; ret
0x000000000008ec1b : jns 0x8ec26 ; ret
0x000000000008efc7 : jns 0x8efca ; ret
0x000000000008f201 : jns 0x8f204 ; ret
0x000000000008f368 : jns 0x8f373 ; ret
0x00000000000c1b1b : jns 0xc1b07 ; mov eax, 1 ; ret
0x00000000000e0ae4 : jns 0xe0af2 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000112550 : jns 0xffffffffc4946e37 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000098286 : jns 0xffffffffed3985ec ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000982e8 : jns 0xffffffffed398a4e ; mov byte ptr [rdi + 0xb], ch ; ret
0x0000000000098308 : jns 0xffffffffed398b6e ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000107b0 : jo 0x107bb ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010ec03 : jo 0x10ec69 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014c63c : jo 0x14c689 ; in eax, dx ; jmp rax
0x000000000015b0c4 : jo 0x15b13e ; mov ebp, 0xfb67d10d ; ret
0x000000000015f0a4 : jo 0x15f10c ; jmp qword ptr [rax - 0x2f000ca1]
0x000000000015f21d : jo 0x15f218 ; inc eax ; jo 0x15f21c ; jmp rax
0x000000000015f221 : jo 0x15f218 ; jmp rax
0x000000000015f225 : jo 0x15f220 ; inc dword ptr [rax] ; jno 0x15f224 ; jmp qword ptr [rax]
0x000000000016ba78 : jo 0x16baa4 ; sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016bad8 : jo 0x16bb1a ; sti ; jmp qword ptr [rax + 0x10fffb2b]
0x000000000016bafc : jo 0x16bb49 ; sti ; call qword ptr [rax]
0x000000000016bb64 : jo 0x16bbe9 ; sti ; inc eax ; jge 0x16bb6d ; call qword ptr [rax]
0x000000000016bec0 : jo 0x16bebf ; sti ; push qword ptr [rax] ; clc ; sti ; call qword ptr [rax]
0x000000000016bfa8 : jo 0x16bf92 ; sti ; inc eax ; loop 0x16bfb1 ; call qword ptr [rax]
0x000000000016c340 : jo 0x16c382 ; cld ; inc eax ; cmp bh, ah ; call qword ptr [rax]
0x000000000016c394 : jo 0x16c3dd ; cld ; inc eax ; cld ; call qword ptr [rax]
0x000000000016c61d : jo 0x16c61d ; call rsi
0x000000000016cd10 : jo 0x16ccac ; cld ; jmp rax
0x000000000016d014 : jo 0x16cfd6 ; cld ; jmp rax
0x000000000016d218 : jo 0x16d1d9 ; cld ; jmp rax
0x0000000000170781 : jo 0x17077c ; jmp rsp
0x0000000000170780 : jo 0x17077d ; jmp rsp
0x0000000000174290 : jo 0x174312 ; jmp 0x174296
0x0000000000176bf0 : jo 0x176c59 ; cli ; jmp qword ptr [rcx]
0x0000000000177c71 : jo 0x177c62 ; call rdx
0x000000000017997f : jo 0x17998d ; ret
0x0000000000179d03 : jo 0x179d0e ; mov ecx, 0x41380e0a ; ret
0x000000000017b899 : jo 0x17b88c ; call qword ptr [rcx]
0x0000000000181290 : jo 0x1812bb ; call qword ptr [rbx]
0x0000000000182020 : jo 0x18207b ; jmp qword ptr [rcx]
0x0000000000184440 : jo 0x184408 ; hlt ; jmp qword ptr [rcx]
0x0000000000187140 : jo 0x187109 ; cmc ; jmp qword ptr [rcx]
0x000000000018dde0 : jo 0x18ddc7 ; sti ; jmp qword ptr [rdx]
0x0000000000022050 : jo 0x2205b ; mov qword ptr [rbp - 0x58], r15 ; call 0x7e298
0x000000000002819f : jo 0x281b7 ; mov dh, 0x42 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002c6a3 : jo 0x2c6f4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c6a2 : jo 0x2c6f5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003f256 : jo 0x3f261 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069d2a : jo 0x69d42 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006d2aa : jo 0x6d237 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000006d2a9 : jo 0x6d238 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000006ea4e : jo 0x6ea3b ; in al, dx ; ret 6
0x0000000000070d64 : jo 0x70db5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007413e : jo 0x74177 ; add byte ptr [rbp + 0x39], cl ; ret 0x820f
0x000000000009b8b4 : jo 0x9b902 ; mov edi, ebp ; call rbx
0x000000000009be3e : jo 0x9be90 ; mov edi, esp ; call rbx
0x000000000009d337 : jo 0x9d34b ; xchg eax, esp ; ret
0x000000000009f907 : jo 0x9f91b ; xchg eax, esp ; ret
0x00000000000a1d37 : jo 0xa1d4b ; xchg eax, esp ; ret
0x00000000000a69bc : jo 0xa69d0 ; xchg eax, ebp ; ret 0x8b4c
0x00000000000ad688 : jo 0xad615 ; ret 0x8166
0x00000000000bf6c8 : jo 0xbf6b5 ; ret 0xfff2
0x00000000000bf784 : jo 0xbf70b ; ret 0x8d01
0x00000000000c1dbe : jo 0xc1de4 ; xor eax, eax ; ret
0x00000000000cc212 : jo 0xcc204 ; mov byte ptr [rsi - 1], bl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cc8ba : jo 0xcc8ac ; rcr byte ptr [rcx], 1 ; sti ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000cd5f0 : jo 0xcd5f5 ; ret 0xc083
0x00000000000df616 : jo 0xdf63b ; ret
0x00000000001042ed : jp 0x104330 ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x000000000010a93d : jp 0x10a99d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010dbd2 : jp 0x10dbde ; ret
0x00000000001103d2 : jp 0x1103de ; ret
0x00000000001103ea : jp 0x1103f6 ; ret
0x0000000000110c22 : jp 0x110c2e ; ret
0x0000000000110c3a : jp 0x110c46 ; ret
0x0000000000110c6a : jp 0x110c76 ; ret
0x0000000000126566 : jp 0x12655a ; ret
0x00000000001265c9 : jp 0x1265bd ; ret
0x000000000012655f : jp 0x1265e9 ; jb 0x12654c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000126564 : jp 0x1265e9 ; jp 0x12655c ; ret
0x0000000000126a56 : jp 0x126a4a ; ret
0x0000000000126ab9 : jp 0x126aad ; ret
0x0000000000126a4f : jp 0x126ad9 ; jb 0x126a3c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000126a54 : jp 0x126ad9 ; jp 0x126a4c ; ret
0x0000000000126df9 : jp 0x126ded ; ret
0x0000000000126e59 : jp 0x126e4d ; ret
0x0000000000126df2 : jp 0x126e7c ; jb 0x126ddf ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000126df7 : jp 0x126e7c ; jp 0x126def ; ret
0x000000000016c45d : jp 0x16c45d ; jmp qword ptr [rdx]
0x000000000016c461 : jp 0x16c465 ; call qword ptr [rdx + 0x22fffc80]
0x000000000016c5d9 : jp 0x16c5dd ; inc dword ptr [rax + 0x7a] ; cld ; jmp rax
0x000000000016c5dd : jp 0x16c5dd ; jmp rax
0x000000000016c5dc : jp 0x16c5de ; jmp rax
0x000000000016f839 : jp 0x16f831 ; call rsp
0x0000000000173dc9 : jp 0x173dca ; jmp qword ptr [rdi]
0x000000000017bd69 : jp 0x17bd5c ; jmp qword ptr [rax]
0x0000000000002561 : jp 0x2545 ; jmp qword ptr [rbx]
0x0000000000002560 : jp 0x2546 ; jmp qword ptr [rbx]
0x000000000002b518 : jp 0x2b55b ; jae 0x2b538 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000002f46f : jp 0x2f47b ; add byte ptr [rcx - 0x77], cl ; ret 0x8d8b
0x0000000000003956 : jp 0x39d0 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000081632 : jp 0x815b8 ; or al, 0 ; ret
0x0000000000081e05 : jp 0x81dff ; ret 0x7401
0x00000000000a7a81 : jp 0xa7a96 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000f2715 : jp 0xf276c ; mov rsi, rdx ; call rax
0x000000000011476f : jrcxz 0x1147b4 ; call rsi
0x000000000013374a : jrcxz 0x133745 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133749 : jrcxz 0x133746 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013621a : jrcxz 0x136215 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136219 : jrcxz 0x136216 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138d3a : jrcxz 0x138d35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138d39 : jrcxz 0x138d36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014b724 : jrcxz 0x14b775 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000159ea5 : jrcxz 0x159eff ; ret
0x000000000016e8fd : jrcxz 0x16e905 ; add byte ptr [rax + rdx*2 - 0x10], bl ; call rsp
0x000000000016f6a1 : jrcxz 0x16f698 ; call rsp
0x00000000001715e1 : jrcxz 0x1715dd ; call rsp
0x0000000000172a11 : jrcxz 0x172a12 ; call rsp
0x000000000004cb63 : jrcxz 0x4cbdc ; ret
0x00000000000a4bea : jrcxz 0xa4b77 ; ret 0xff25
0x00000000000b8e07 : jrcxz 0xb8df3 ; ret
0x00000000000c1b1c : jrcxz 0xc1adc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c4bd0 : jrcxz 0xc4bdf ; je 0xc4b6f ; pop rbx ; ret
0x00000000000d453c : jrcxz 0xd458e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f3e03 : jrcxz 0xf3dc8 ; cmp r11d, 0xa ; je 0xf3e14 ; ret
0x0000000000119fc3 : js 0x119fd8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015f349 : js 0x15f340 ; call rax
0x000000000015f345 : js 0x15f340 ; inc eax ; js 0x15f344 ; call rax
0x000000000015f34d : js 0x15f344 ; jmp rax
0x000000000015f355 : js 0x15f350 ; inc dword ptr [rax] ; jns 0x15f354 ; call qword ptr [rax]
0x0000000000173218 : js 0x1731a2 ; std ; jmp qword ptr [rdx]
0x00000000001740f1 : js 0x1740f2 ; call qword ptr [rcx]
0x0000000000176158 : js 0x176166 ; in al, dx ; jmp qword ptr [rbx]
0x000000000017bbd9 : js 0x17bbcc ; jmp qword ptr [rdx]
0x000000000017c428 : js 0x17c3d0 ; out dx, eax ; call rsi
0x000000000017f2c8 : js 0x17f289 ; int1 ; jmp qword ptr [rdi]
0x00000000001822f8 : js 0x18235d ; jmp qword ptr [rcx]
0x0000000000182358 : js 0x1823bd ; jmp qword ptr [rcx]
0x0000000000184598 : js 0x184561 ; hlt ; call qword ptr [rdx]
0x0000000000185338 : js 0x18538e ; cmc ; jmp qword ptr [rcx]
0x0000000000185478 : js 0x1854d0 ; cmc ; jmp qword ptr [rcx]
0x00000000001859b8 : js 0x185a22 ; cmc ; jmp qword ptr [rcx]
0x0000000000186678 : js 0x18661a ; cmc ; jmp qword ptr [rcx]
0x0000000000186708 : js 0x1866ab ; cmc ; jmp qword ptr [rcx]
0x0000000000187218 : js 0x1871e2 ; cmc ; jmp qword ptr [rcx]
0x0000000000187ef8 : js 0x187ef6 ; cmc ; jmp qword ptr [rcx]
0x000000000018f360 : js 0x18f36e ; ret
0x0000000000191d18 : js 0x191d4f ; clc ; call qword ptr [rcx]
0x0000000000193648 : js 0x1935de ; clc ; call qword ptr [rdi]
0x0000000000020b02 : js 0x20b0d ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002534f : js 0x25359 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000025aeb : js 0x25a78 ; ret 0xe281
0x000000000002a082 : js 0x2a08d ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002c301 : js 0x2c28d ; loopne 0x2c314 ; movzx eax, ax ; ret
0x000000000002c2ae : js 0x2c2c8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002c341 : js 0x2c2cd ; loopne 0x2c34e ; movzx eax, ax ; ret
0x000000000002c3e1 : js 0x2c36d ; loopne 0x2c3f0 ; movzx eax, ax ; ret
0x000000000002c4c1 : js 0x2c44a ; loopne 0x2c4ca ; ret
0x000000000002c53a : js 0x2c4c3 ; loopne 0x2c543 ; ret
0x000000000002c54a : js 0x2c4d6 ; loopne 0x2c55d ; movzx eax, ax ; ret
0x000000000002c58a : js 0x2c516 ; loopne 0x2c597 ; movzx eax, ax ; ret
0x000000000002c62a : js 0x2c5b6 ; loopne 0x2c639 ; movzx eax, ax ; ret
0x000000000002c6b3 : js 0x2c704 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c6b2 : js 0x2c705 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000006d2ad : js 0x6d2bb ; ret
0x0000000000079a48 : js 0x79a53 ; ret
0x00000000000b8b17 : js 0xb8b23 ; ret
0x00000000000d94cc : js 0xd951e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000d9d99 : js 0xd9deb ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000dfd7b : js 0xdfd4d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1e32 : js 0xe1e45 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000ea558 : js 0xea4e4 ; loopne 0xea56b ; movzx eax, ax ; ret
0x00000000000ea688 : js 0xea611 ; loopne 0xea691 ; ret
0x00000000000ea718 : js 0xea6a4 ; loopne 0xea725 ; movzx eax, ax ; ret
0x00000000000eaa18 : js 0xea9a4 ; loopne 0xeaa27 ; movzx eax, ax ; ret
0x00000000000eaef1 : js 0xeae7d ; loopne 0xeaf04 ; movzx eax, ax ; ret
0x00000000000eaff1 : js 0xeaf7a ; loopne 0xeaffa ; ret
0x00000000000eb071 : js 0xeaffd ; loopne 0xeb07e ; movzx eax, ax ; ret
0x00000000000eb2f1 : js 0xeb27d ; loopne 0xeb300 ; movzx eax, ax ; ret
0x00000000000f7da4 : js 0xf7db9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f7e24 : js 0xf7e37 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000098228 : js 0xffffffffed39848e ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000098256 : js 0xffffffffed3986bc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000982a8 : js 0xffffffffed398b0e ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000024a65 : lahf ; add dword ptr [rax], eax ; add al, ch ; ret 0x77
0x00000000000f4e8e : lahf ; add eax, dword ptr [rax] ; cmove rax, rdx ; ret
0x000000000016ca21 : lahf ; cld ; inc dword ptr [rsi - 4] ; call rsp
0x000000000016d225 : lahf ; cld ; jmp rax
0x0000000000186781 : lahf ; cmc ; jmp qword ptr [rcx]
0x000000000016f921 : lahf ; hlt ; call rsp
0x000000000015c583 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000f5115 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001241bd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000045dea : lahf ; ret
0x000000000006b03e : lahf ; ret 0x3841
0x00000000000c088a : lahf ; ret 0x82eb
0x00000000000e4793 : lahf ; ret 0x8545
0x0000000000159ddd : lahf ; ret 0x871e
0x00000000000fc17f : lahf ; ret 0xc2e9
0x0000000000056b33 : lahf ; ret 0xd129
0x000000000005638b : lahf ; ret 0xd329
0x0000000000058c4c : lahf ; ret 0xd629
0x00000000000e39e3 : lahf ; ret 0xe883
0x00000000000991d9 : lahf ; ret 0xea81
0x00000000000e28d8 : lahf ; stc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000073788 : lahf ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012484d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e3e67 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000014c62b : lcall ptr [rax + 0x8ffed48] ; in eax, dx ; jmp qword ptr [rax]
0x00000000001590e3 : lcall ptr [rax - 0x7b] ; in eax, dx ; jmp rbx
0x00000000000cafad : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fbaf5 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000068c45 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000016f5fb : lcall ptr [rbp + rsi - 0x4503ffff] ; jmp rsp
0x000000000017165b : lcall ptr [rbp + rsi*8 - 0x63ffff] ; clc ; jmp rsp
0x000000000001fb53 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000006af71 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000028dc3 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000a3d71 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x0000000000035882 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000041c7c : lcall ptr [rbx + 0x5d] ; ret
0x000000000016fba3 : lcall ptr [rbx + rbx*2 + 1] ; add byte ptr [rax + rcx*2], bl ; cmc ; call rsp
0x0000000000160d27 : lcall ptr [rcx - 0x5f] ; idiv bh ; ret
0x000000000015e153 : lcall ptr [rdi - 0x14] ; out dx, eax ; inc dword ptr [rbp - 0x14] ; out dx, eax ; call qword ptr [rax]
0x0000000000172193 : lcall ptr [rdx + rax*2 + 0x64bc0002] ; cli ; jmp rsp
0x0000000000171ee3 : lcall ptr [rdx + rsi + 0x257c0002] ; cli ; jmp rsp
0x0000000000171603 : lcall ptr [rdx + rsi*8 - 0x17c3ffff] ; clc ; jmp rsp
0x000000000016d11f : lcall ptr [rsi + 0x44fffcbb] ; ret
0x00000000001727bb : lcall ptr [rsp + rdi*2 - 0x1e3ffff] ; cli ; jmp rsp
0x0000000000133dd6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000006a74f : lea eax, dword ptr [r8 - 1] ; ret
0x000000000010203c : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000a7628 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000d3ef3 : lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x0000000000081594 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x00000000000815a4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000008d744 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x0000000000081574 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000b2be2 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006a750 : lea eax, dword ptr [rax - 1] ; ret
0x000000000017b895 : lea eax, dword ptr [rax] ; add byte ptr [rax], bl ; jo 0x17b890 ; call qword ptr [rcx]
0x00000000001021c0 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000010a3fb : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x000000000010500f : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010203d : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x000000000008015d : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000989c4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000018b875 : lea eax, dword ptr [rcx] ; add al, ch ; ret
0x0000000000095aec : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000095b01 : lea eax, dword ptr [rdi + 0x11] ; ret
0x0000000000095b1f : lea eax, dword ptr [rdi + 0x12] ; ret
0x0000000000095b3f : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000095b62 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000095b81 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000095ba1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000095bc1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000095be4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000095c09 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000095c27 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000095c47 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000095c63 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000095c83 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000095ca3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000095cc3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x0000000000096b13 : lea eax, dword ptr [rdi + 0x20] ; ret
0x0000000000096d79 : lea eax, dword ptr [rdi + 0x40] ; ret
0x0000000000095a3d : lea eax, dword ptr [rdi + 0xa] ; ret
0x0000000000095a5d : lea eax, dword ptr [rdi + 0xb] ; ret
0x0000000000095a7f : lea eax, dword ptr [rdi + 0xc] ; ret
0x0000000000095a9f : lea eax, dword ptr [rdi + 0xd] ; ret
0x0000000000095abf : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000095ad9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000008d0a4 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000008d0b8 : lea eax, dword ptr [rdi + 2] ; ret
0x000000000008d0c3 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000008d0d7 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000008d0e7 : lea eax, dword ptr [rdi + 5] ; ret
0x000000000008d0f7 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000959eb : lea eax, dword ptr [rdi + 6] ; ret
0x000000000008d097 : lea eax, dword ptr [rdi + 7] ; ret
0x0000000000095a0a : lea eax, dword ptr [rdi + 8] ; ret
0x00000000001016e0 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000095a1f : lea eax, dword ptr [rdi + 9] ; ret
0x00000000000815c9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x00000000000815d9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000000814c3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000088e57 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000012315a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000102490 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000002c055 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000080059 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000009aa6e : lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000009abd1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x000000000009abf1 : lea eax, dword ptr [rdi - 4] ; ret
0x000000000009abe1 : lea eax, dword ptr [rdi - 8] ; ret
0x0000000000095973 : lea eax, dword ptr [rdi] ; ret
0x0000000000143bbd : lea eax, dword ptr [rdx + 0xa] ; ret
0x0000000000143bdd : lea eax, dword ptr [rdx + 0xb] ; ret
0x0000000000143bff : lea eax, dword ptr [rdx + 0xc] ; ret
0x0000000000143c1f : lea eax, dword ptr [rdx + 0xd] ; ret
0x0000000000143c3f : lea eax, dword ptr [rdx + 0xe] ; ret
0x0000000000143acf : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000143af7 : lea eax, dword ptr [rdx + 1] ; ret
0x0000000000143b0d : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000143b25 : lea eax, dword ptr [rdx + 3] ; ret
0x0000000000143b3b : lea eax, dword ptr [rdx + 4] ; ret
0x0000000000143b4d : lea eax, dword ptr [rdx + 5] ; ret
0x0000000000143b6b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000143a77 : lea eax, dword ptr [rdx + 7] ; ret
0x0000000000143b7d : lea eax, dword ptr [rdx + 8] ; ret
0x0000000000143b9d : lea eax, dword ptr [rdx + 9] ; ret
0x000000000006a73e : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000992ac : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000143ae5 : lea eax, dword ptr [rdx] ; ret
0x000000000007e6ca : lea eax, dword ptr [rip + 0x10] ; ret
0x000000000007e67e : lea eax, dword ptr [rip + 0x12c0c] ; ret
0x000000000007c3fe : lea eax, dword ptr [rip + 0x1326c] ; ret
0x000000000002b529 : lea eax, dword ptr [rip + 0x1384f0] ; ret
0x0000000000020831 : lea eax, dword ptr [rip + 0x142d34] ; ret
0x0000000000020841 : lea eax, dword ptr [rip + 0x144c00] ; ret
0x0000000000081c3a : lea eax, dword ptr [rip + 0x16f20] ; ret
0x0000000000081096 : lea eax, dword ptr [rip + 0x17614] ; cmove rax, rdx ; ret
0x0000000000081614 : lea eax, dword ptr [rip + 0x26] ; ret
0x00000000000e3ddb : lea eax, dword ptr [rip + 0x2ba4df] ; pop rbp ; pop r12 ; ret
0x00000000000f4e11 : lea eax, dword ptr [rip + 0x31b69] ; ret
0x00000000000f4f01 : lea eax, dword ptr [rip + 0x31e19] ; ret
0x0000000000063174 : lea eax, dword ptr [rip + 0x33a586] ; pop rbx ; pop rbp ; ret
0x0000000000107751 : lea eax, dword ptr [rip + 0x5c2c8] ; ret
0x0000000000086e9f : lea eax, dword ptr [rip + 0x6fbb] ; ret
0x0000000000086e70 : lea eax, dword ptr [rip + 0x721a] ; ret
0x000000000008243a : lea eax, dword ptr [rip + 0x80] ; ret
0x0000000000086eb3 : lea eax, dword ptr [rip + 0xa2bd7] ; ret
0x000000000008060b : lea eax, dword ptr [rip + 0xa2d3f] ; ret
0x000000000008027b : lea eax, dword ptr [rip + 0xa2f9f] ; ret
0x0000000000081de1 : lea eax, dword ptr [rip + 0xa4f49] ; ret
0x000000000007ddeb : lea eax, dword ptr [rip + 0xa52ef] ; ret
0x000000000009a2dc : lea eax, dword ptr [rip + 0xac5be] ; ret
0x000000000009aea8 : lea eax, dword ptr [rip + 0xad6b2] ; ret
0x000000000009aeb0 : lea eax, dword ptr [rip + 0xaff6a] ; ret
0x000000000007ff5e : lea eax, dword ptr [rip + 0xbf95c] ; ret
0x00000000000822ce : lea eax, dword ptr [rip + 0xc016c] ; ret
0x000000000007dcde : lea eax, dword ptr [rip + 0xc042c] ; ret
0x00000000000823ee : lea eax, dword ptr [rip + 0xc185c] ; ret
0x0000000000081628 : lea eax, dword ptr [rip + 0xc58f2] ; ret
0x000000000009ae94 : lea eax, dword ptr [rip + 0xc726] ; ret
0x0000000000081630 : lea eax, dword ptr [rip + 0xc807a] ; ret
0x000000000007c84e : lea eax, dword ptr [rip + 0xc] ; ret
0x0000000000081da0 : lea eax, dword ptr [rip + 0xca3a] ; ret
0x000000000007c5eb : lea eax, dword ptr [rip + 0xccd9f] ; ret
0x000000000009a2d4 : lea eax, dword ptr [rip + 0xd396] ; ret
0x000000000008249d : lea eax, dword ptr [rip + 0xd] ; ret
0x000000000004fc26 : lea eax, dword ptr [rip - 0x2ea] ; add rax, rdx ; jmp rax
0x00000000000d9f46 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00000000000f4f4a : lea eax, dword ptr [rip - 0x5c400] ; ret
0x00000000000f4ec0 : lea eax, dword ptr [rip - 0x666f6] ; ret
0x00000000000f4dd0 : lea eax, dword ptr [rip - 0x66d56] ; ret
0x00000000001022ee : lea eax, dword ptr [rsi + 8] ; ret
0x0000000000192b4a : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000005e058 : lea ebp, dword ptr [rax - 0x17000006] ; sahf ; ret 0
0x0000000000029a3f : lea ebp, dword ptr [rbp + 0x10] ; call rax
0x00000000000b3b57 : lea ebp, dword ptr [rsp + 0x30] ; mov rdi, rbx ; call r12
0x00000000000b2c9f : lea ebx, dword ptr [rax + 1] ; jne 0xb2c89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000041041 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x0000000000052a8b : lea ebx, dword ptr [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000007bc41 : lea ebx, dword ptr [rip - 0x467] ; call 0x67f38
0x000000000015a691 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000009b1d3 : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000009b2fe : lea ecx, dword ptr [rax + 4] ; call rbx
0x000000000009b73e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000aa364 : lea ecx, dword ptr [rax + rbp] ; mov rdx, rax ; jmp 0xaa375
0x0000000000129b10 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000009422e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000034dc5 : lea ecx, dword ptr [rdi + rax] ; mov qword ptr [rsp + 0x10], r9 ; call r14
0x00000000001413c6 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x141919 ; ret
0x00000000001416c4 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x141919 ; ret
0x00000000001416e4 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x141919 ; ret
0x0000000000141704 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x141919 ; ret
0x0000000000141726 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x141919 ; ret
0x0000000000141746 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x141919 ; ret
0x0000000000141766 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x141919 ; ret
0x00000000001415bc : lea ecx, dword ptr [rdx + 1] ; jne 0x141919 ; ret
0x00000000001415de : lea ecx, dword ptr [rdx + 2] ; jne 0x141919 ; ret
0x0000000000141604 : lea ecx, dword ptr [rdx + 3] ; jne 0x141919 ; ret
0x000000000014161c : lea ecx, dword ptr [rdx + 4] ; jne 0x141919 ; ret
0x000000000006a3d1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000068686 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000141642 : lea ecx, dword ptr [rdx + 5] ; jne 0x141919 ; ret
0x0000000000141664 : lea ecx, dword ptr [rdx + 6] ; jne 0x141919 ; ret
0x0000000000141682 : lea ecx, dword ptr [rdx + 7] ; jne 0x141919 ; ret
0x000000000014135e : lea ecx, dword ptr [rdx + 8] ; jne 0x141919 ; ret
0x00000000001416a4 : lea ecx, dword ptr [rdx + 9] ; jne 0x141919 ; ret
0x0000000000042100 : lea ecx, dword ptr [rdx] ; jmp 0x42156
0x0000000000043840 : lea ecx, dword ptr [rdx] ; jmp 0x43896
0x0000000000052a08 : lea ecx, dword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x00000000000eae67 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000006c7b4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000108d38 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000006c890 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000108b79 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000009b699 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000009b2f9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009b1ce : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001091cb : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000a745c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000009bb7a : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000011264f : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009be3b : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x000000000009b8b1 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000020b01 : lea edi, dword ptr [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000010e6ce : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00000000000759b1 : lea edi, dword ptr [rbx + 0x10] ; call 0x81c95
0x0000000000110d62 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000110342 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x000000000010db35 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x0000000000081e76 : lea edi, dword ptr [rdi + 0x10] ; jne 0x81e68 ; mov rax, rdi ; ret
0x0000000000086f46 : lea edi, dword ptr [rdi + 0x10] ; jne 0x86f36 ; ret
0x0000000000094d9d : lea edi, dword ptr [rdi + 0x10] ; jne 0x95479 ; ret
0x0000000000096481 : lea edi, dword ptr [rdi + 0x10] ; jne 0x96c89 ; ret
0x0000000000094dc0 : lea edi, dword ptr [rdi + 0x11] ; jne 0x95479 ; ret
0x00000000000964a4 : lea edi, dword ptr [rdi + 0x11] ; jne 0x96c89 ; ret
0x0000000000094de5 : lea edi, dword ptr [rdi + 0x12] ; jne 0x95479 ; ret
0x00000000000964c9 : lea edi, dword ptr [rdi + 0x12] ; jne 0x96c89 ; ret
0x0000000000094e03 : lea edi, dword ptr [rdi + 0x13] ; jne 0x95479 ; ret
0x00000000000964f7 : lea edi, dword ptr [rdi + 0x13] ; jne 0x96c89 ; ret
0x0000000000094e23 : lea edi, dword ptr [rdi + 0x14] ; jne 0x95479 ; ret
0x0000000000096527 : lea edi, dword ptr [rdi + 0x14] ; jne 0x96c89 ; ret
0x0000000000094e46 : lea edi, dword ptr [rdi + 0x15] ; jne 0x95479 ; ret
0x000000000009655a : lea edi, dword ptr [rdi + 0x15] ; jne 0x96c89 ; ret
0x0000000000094e65 : lea edi, dword ptr [rdi + 0x16] ; jne 0x95479 ; ret
0x0000000000096589 : lea edi, dword ptr [rdi + 0x16] ; jne 0x96c89 ; ret
0x0000000000094e85 : lea edi, dword ptr [rdi + 0x17] ; jne 0x95479 ; ret
0x00000000000965b9 : lea edi, dword ptr [rdi + 0x17] ; jne 0x96c89 ; ret
0x0000000000094ea5 : lea edi, dword ptr [rdi + 0x18] ; jne 0x95479 ; ret
0x00000000000965e9 : lea edi, dword ptr [rdi + 0x18] ; jne 0x96c89 ; ret
0x0000000000094ec8 : lea edi, dword ptr [rdi + 0x19] ; jne 0x95479 ; ret
0x000000000009661c : lea edi, dword ptr [rdi + 0x19] ; jne 0x96c89 ; ret
0x0000000000094efd : lea edi, dword ptr [rdi + 0x1a] ; jne 0x95479 ; ret
0x0000000000096651 : lea edi, dword ptr [rdi + 0x1a] ; jne 0x96c89 ; ret
0x0000000000094f2b : lea edi, dword ptr [rdi + 0x1b] ; jne 0x95479 ; ret
0x000000000009667f : lea edi, dword ptr [rdi + 0x1b] ; jne 0x96c89 ; ret
0x0000000000094f5b : lea edi, dword ptr [rdi + 0x1c] ; jne 0x95479 ; ret
0x00000000000966af : lea edi, dword ptr [rdi + 0x1c] ; jne 0x96c89 ; ret
0x0000000000094f87 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x95479 ; ret
0x00000000000966db : lea edi, dword ptr [rdi + 0x1d] ; jne 0x96c89 ; ret
0x0000000000094fb7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x95479 ; ret
0x000000000009670b : lea edi, dword ptr [rdi + 0x1e] ; jne 0x96c89 ; ret
0x0000000000094fe7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x95479 ; ret
0x000000000009673b : lea edi, dword ptr [rdi + 0x1f] ; jne 0x96c89 ; ret
0x0000000000095017 : lea edi, dword ptr [rdi + 0x20] ; jne 0x95479 ; ret
0x000000000009676b : lea edi, dword ptr [rdi + 0x20] ; jne 0x96c89 ; ret
0x0000000000094ce3 : lea edi, dword ptr [rdi + 0xa] ; jne 0x95479 ; ret
0x0000000000096387 : lea edi, dword ptr [rdi + 0xa] ; jne 0x96c89 ; ret
0x0000000000094d01 : lea edi, dword ptr [rdi + 0xb] ; jne 0x95479 ; ret
0x00000000000963b5 : lea edi, dword ptr [rdi + 0xb] ; jne 0x96c89 ; ret
0x0000000000094d21 : lea edi, dword ptr [rdi + 0xc] ; jne 0x95479 ; ret
0x00000000000963d5 : lea edi, dword ptr [rdi + 0xc] ; jne 0x96c89 ; ret
0x0000000000094d43 : lea edi, dword ptr [rdi + 0xd] ; jne 0x95479 ; ret
0x00000000000963f7 : lea edi, dword ptr [rdi + 0xd] ; jne 0x96c89 ; ret
0x0000000000094d63 : lea edi, dword ptr [rdi + 0xe] ; jne 0x95479 ; ret
0x0000000000096427 : lea edi, dword ptr [rdi + 0xe] ; jne 0x96c89 ; ret
0x0000000000094d83 : lea edi, dword ptr [rdi + 0xf] ; jne 0x95479 ; ret
0x0000000000096457 : lea edi, dword ptr [rdi + 0xf] ; jne 0x96c89 ; ret
0x0000000000094bb7 : lea edi, dword ptr [rdi + 1] ; jne 0x95479 ; ret
0x000000000009625a : lea edi, dword ptr [rdi + 1] ; jne 0x96c89 ; ret
0x0000000000094bdb : lea edi, dword ptr [rdi + 2] ; jne 0x95479 ; ret
0x000000000009627f : lea edi, dword ptr [rdi + 2] ; jne 0x96c89 ; ret
0x0000000000094bfe : lea edi, dword ptr [rdi + 3] ; jne 0x95479 ; ret
0x00000000000962a2 : lea edi, dword ptr [rdi + 3] ; jne 0x96c89 ; ret
0x0000000000094c19 : lea edi, dword ptr [rdi + 4] ; jne 0x95479 ; ret
0x00000000000962bd : lea edi, dword ptr [rdi + 4] ; jne 0x96c89 ; ret
0x0000000000094c3c : lea edi, dword ptr [rdi + 5] ; jne 0x95479 ; ret
0x00000000000962e0 : lea edi, dword ptr [rdi + 5] ; jne 0x96c89 ; ret
0x0000000000094c61 : lea edi, dword ptr [rdi + 6] ; jne 0x95479 ; ret
0x0000000000096305 : lea edi, dword ptr [rdi + 6] ; jne 0x96c89 ; ret
0x0000000000094c7f : lea edi, dword ptr [rdi + 7] ; jne 0x95479 ; ret
0x0000000000096323 : lea edi, dword ptr [rdi + 7] ; jne 0x96c89 ; ret
0x0000000000094c9b : lea edi, dword ptr [rdi + 8] ; jne 0x95479 ; ret
0x000000000009633f : lea edi, dword ptr [rdi + 8] ; jne 0x96c89 ; ret
0x0000000000094cbe : lea edi, dword ptr [rdi + 9] ; jne 0x95479 ; ret
0x0000000000096362 : lea edi, dword ptr [rdi + 9] ; jne 0x96c89 ; ret
0x00000000000fec31 : lea edi, dword ptr [rip + 0x2a0b25] ; call rax
0x0000000000078817 : lea edi, dword ptr [rip + 0x323303] ; call 0x74ac8
0x00000000000f4747 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00000000000d9fb5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x00000000000733eb : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000fdf85 : lea edx, dword ptr [rax - 1] ; cmp rdx, -3 ; jbe 0xfdf99 ; ret
0x0000000000033ef9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x367186], edx ; ret
0x00000000000759ad : lea edx, dword ptr [rbp - 0x10] ; lea rdi, qword ptr [rbx + 0x10] ; call 0x81c99
0x0000000000129be4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000008d428 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000006a86d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000007c8e6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000000eac43 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000129fd8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000109fe1 : lea edx, dword ptr [rip + 0x290b99] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000111f01 : lea edx, dword ptr [rip + 0x2a69] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000f4e8b : lea edx, dword ptr [rip + 0x39f8f] ; cmove rax, rdx ; ret
0x0000000000081be5 : lea edx, dword ptr [rip + 0xad245] ; cmove rax, rdx ; ret
0x000000000002204f : lea esi, dword ptr [rax + 1] ; mov qword ptr [rbp - 0x58], r15 ; call 0x7e299
0x000000000005ad2b : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000b9a70 : lea esi, dword ptr [rbp - 0xc0] ; mov rdi, r12 ; call qword ptr [rcx]
0x000000000010f13c : lea esi, dword ptr [rbx + 0x40] ; mov rdi, rbp ; call 0x10b3d8
0x000000000010f17f : lea esi, dword ptr [rbx + 0x68] ; mov rdi, rbp ; call 0x10b458
0x0000000000069320 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eea : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000003128a : lea esi, dword ptr [rip + 0x127e50] ; add rdx, rsi ; jmp rdx
0x0000000000047d77 : lea esi, dword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00000000000230b6 : lea esi, dword ptr [rip + 0x1480a4] ; jmp 0x23087
0x000000000003f29f : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x00000000000673ea : lea esi, dword ptr [rip + 0x30] ; call rax
0x0000000000072efa : lea esi, dword ptr [rip - 0x1490] ; call rax
0x000000000007334a : lea esi, dword ptr [rip - 0x18e0] ; call rax
0x00000000000676e3 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x0000000000071da2 : lea esi, dword ptr [rip - 0x338] ; call rax
0x0000000000071fea : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000010a815 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000114b1d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000035452 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000065421 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000f01eb : lea esp, dword ptr [rbx + rcx] ; jmp 0xf0200
0x000000000007c8e5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000f01ea : lea r12, qword ptr [rbx + r9] ; jmp 0xf0201
0x00000000000230b5 : lea r14, qword ptr [rip + 0x1480a4] ; jmp 0x23088
0x0000000000129b0f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000420ff : lea r9, qword ptr [rdx] ; jmp 0x42157
0x000000000004383f : lea r9, qword ptr [rdx] ; jmp 0x43897
0x000000000006c7b3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000108d37 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000006c88f : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000108b78 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000009b698 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009b2f8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009b1cd : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001091ca : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000a745b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000009bb79 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000011264e : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009be3a : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x000000000009b8b0 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000b8ad9 : lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000081593 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000815a3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008d743 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000081573 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000b2be1 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010a3fa : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x000000000008015c : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000989c3 : lea rax, qword ptr [rcx - 1] ; ret
0x0000000000095aeb : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095b00 : lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000095b1e : lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000095b3e : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000095b61 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000095b80 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000095ba0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000095bc0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000095be3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000095c08 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000095c26 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000095c46 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000095c62 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000095c82 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000095ca2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000095cc2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000096b12 : lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000096d78 : lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000095a3c : lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000095a5c : lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000095a7e : lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000095a9e : lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000095abe : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000095ad8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000008d0a3 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000008d0b7 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000008d0c2 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000008d0d6 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000008d0e6 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000008d0f6 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000959ea : lea rax, qword ptr [rdi + 6] ; ret
0x000000000008d096 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000095a09 : lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095a1e : lea rax, qword ptr [rdi + 9] ; ret
0x00000000000815c8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000815d8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000814c2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000088e56 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000123159 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000010248f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000002c054 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000080058 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000009aa6d : lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009abd0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009abf0 : lea rax, qword ptr [rdi - 4] ; ret
0x000000000009abe0 : lea rax, qword ptr [rdi - 8] ; ret
0x0000000000095972 : lea rax, qword ptr [rdi] ; ret
0x0000000000143bbc : lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000143bdc : lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000143bfe : lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000143c1e : lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000143c3e : lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000143ace : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000143af6 : lea rax, qword ptr [rdx + 1] ; ret
0x0000000000143b0c : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000143b24 : lea rax, qword ptr [rdx + 3] ; ret
0x0000000000143b3a : lea rax, qword ptr [rdx + 4] ; ret
0x0000000000143b4c : lea rax, qword ptr [rdx + 5] ; ret
0x0000000000143b6a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000143a76 : lea rax, qword ptr [rdx + 7] ; ret
0x0000000000143b7c : lea rax, qword ptr [rdx + 8] ; ret
0x0000000000143b9c : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000143ae4 : lea rax, qword ptr [rdx] ; ret
0x000000000007e6c9 : lea rax, qword ptr [rip + 0x10] ; ret
0x000000000007e67d : lea rax, qword ptr [rip + 0x12c0c] ; ret
0x000000000007c3fd : lea rax, qword ptr [rip + 0x1326c] ; ret
0x000000000002b528 : lea rax, qword ptr [rip + 0x1384f0] ; ret
0x0000000000020830 : lea rax, qword ptr [rip + 0x142d34] ; ret
0x0000000000020840 : lea rax, qword ptr [rip + 0x144c00] ; ret
0x0000000000081c39 : lea rax, qword ptr [rip + 0x16f20] ; ret
0x0000000000081613 : lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000f4e10 : lea rax, qword ptr [rip + 0x31b69] ; ret
0x00000000000f4f00 : lea rax, qword ptr [rip + 0x31e19] ; ret
0x0000000000063173 : lea rax, qword ptr [rip + 0x33a586] ; pop rbx ; pop rbp ; ret
0x0000000000107750 : lea rax, qword ptr [rip + 0x5c2c8] ; ret
0x0000000000086e9e : lea rax, qword ptr [rip + 0x6fbb] ; ret
0x0000000000086e6f : lea rax, qword ptr [rip + 0x721a] ; ret
0x0000000000082439 : lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000086eb2 : lea rax, qword ptr [rip + 0xa2bd7] ; ret
0x000000000008060a : lea rax, qword ptr [rip + 0xa2d3f] ; ret
0x000000000008027a : lea rax, qword ptr [rip + 0xa2f9f] ; ret
0x0000000000081de0 : lea rax, qword ptr [rip + 0xa4f49] ; ret
0x000000000007ddea : lea rax, qword ptr [rip + 0xa52ef] ; ret
0x000000000009a2db : lea rax, qword ptr [rip + 0xac5be] ; ret
0x000000000009aea7 : lea rax, qword ptr [rip + 0xad6b2] ; ret
0x000000000009aeaf : lea rax, qword ptr [rip + 0xaff6a] ; ret
0x000000000007ff5d : lea rax, qword ptr [rip + 0xbf95c] ; ret
0x00000000000822cd : lea rax, qword ptr [rip + 0xc016c] ; ret
0x000000000007dcdd : lea rax, qword ptr [rip + 0xc042c] ; ret
0x00000000000823ed : lea rax, qword ptr [rip + 0xc185c] ; ret
0x0000000000081627 : lea rax, qword ptr [rip + 0xc58f2] ; ret
0x000000000009ae93 : lea rax, qword ptr [rip + 0xc726] ; ret
0x000000000008162f : lea rax, qword ptr [rip + 0xc807a] ; ret
0x000000000007c84d : lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000081d9f : lea rax, qword ptr [rip + 0xca3a] ; ret
0x000000000007c5ea : lea rax, qword ptr [rip + 0xccd9f] ; ret
0x000000000009a2d3 : lea rax, qword ptr [rip + 0xd396] ; ret
0x000000000008249c : lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000f4f49 : lea rax, qword ptr [rip - 0x5c400] ; ret
0x00000000000f4ebf : lea rax, qword ptr [rip - 0x666f6] ; ret
0x00000000000f4dcf : lea rax, qword ptr [rip - 0x66d56] ; ret
0x000000000009aba9 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x0000000000029a3e : lea rbp, qword ptr [r13 + 0x10] ; call rax
0x00000000000b3b56 : lea rbp, qword ptr [rsp + 0x30] ; mov rdi, rbx ; call r12
0x0000000000041040 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x000000000007bc40 : lea rbx, qword ptr [rip - 0x467] ; call 0x67f39
0x000000000009422d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000009b1d2 : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000009b2fd : lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009b73d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000aa363 : lea rcx, qword ptr [rax + rbp] ; mov rdx, rax ; jmp 0xaa376
0x0000000000068685 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000eae66 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010e6cd : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000759b0 : lea rdi, qword ptr [rbx + 0x10] ; call 0x81c96
0x0000000000110d61 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000110341 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000010db34 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000081e75 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x81e69 ; mov rax, rdi ; ret
0x0000000000086f45 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x86f37 ; ret
0x00000000000fec30 : lea rdi, qword ptr [rip + 0x2a0b25] ; call rax
0x0000000000078816 : lea rdi, qword ptr [rip + 0x323303] ; call 0x74ac9
0x00000000000f4746 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000d9fb4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x0000000000129be3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000eac42 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000129fd7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000010f13b : lea rsi, qword ptr [rbx + 0x40] ; mov rdi, rbp ; call 0x10b3d9
0x000000000010f17e : lea rsi, qword ptr [rbx + 0x68] ; mov rdi, rbp ; call 0x10b459
0x000000000003f29e : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000673e9 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x0000000000072ef9 : lea rsi, qword ptr [rip - 0x1490] ; call rax
0x0000000000073349 : lea rsi, qword ptr [rip - 0x18e0] ; call rax
0x00000000000676e2 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x0000000000071da1 : lea rsi, qword ptr [rip - 0x338] ; call rax
0x0000000000071fe9 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000010a814 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000114b1c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000035451 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000003394b : leave ; add edi, esi ; ret 0
0x0000000000028934 : leave ; call r15
0x0000000000002bec : leave ; clc ; ret
0x000000000016ce85 : leave ; cld ; call qword ptr [rdx + 0x22fffcc8]
0x000000000016ce01 : leave ; cld ; call qword ptr [rsi]
0x000000000016cfc1 : leave ; cld ; call rax
0x000000000016cfbd : leave ; cld ; inc dword ptr [rax - 0x37] ; cld ; call rax
0x000000000016cf41 : leave ; cld ; jmp rsp
0x0000000000080326 : leave ; cmove rax, rdx ; ret
0x0000000000123191 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000177589 : leave ; in al, dx ; jmp qword ptr [rdx]
0x0000000000177da9 : leave ; in eax, dx ; jmp qword ptr [rax]
0x0000000000029eb6 : leave ; je 0x29ebe ; call rcx
0x0000000000063939 : leave ; je 0x63944 ; ret
0x00000000000b4793 : leave ; jg 0xb47ca ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000103dcc : leave ; jne 0x103d1b ; ret
0x000000000008d169 : leave ; jne 0x8d15c ; ret
0x000000000008d2a8 : leave ; jne 0x8d29d ; xor eax, eax ; ret
0x00000000000987a0 : leave ; jne 0x98793 ; ret
0x0000000000098850 : leave ; jne 0x98843 ; ret
0x0000000000098b10 : leave ; jne 0x98b07 ; sub rax, 1 ; ret
0x000000000009ac3c : leave ; jne 0x9ac34 ; ret
0x000000000009c0aa : leave ; jne 0x9c067 ; mov rax, rdx ; ret
0x00000000000eee86 : leave ; jne 0xeee74 ; ret
0x0000000000123158 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000093d11 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000032851 : leave ; mov dword ptr [rdi], ecx ; ret
0x0000000000099454 : leave ; mov dword ptr [rdx], ecx ; jne 0x9944e ; ret
0x00000000000d7d17 : leave ; mov edx, 0xa ; call 0x43fb8
0x000000000008d06f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000008cfcf : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00000000000ab966 : leave ; movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x00000000000215a0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000017c999 : leave ; out dx, eax ; call qword ptr [rdi]
0x000000000002cd01 : leave ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000ba4a3 : leave ; pop rdx ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000003c945 : leave ; ret
0x000000000012ff13 : leave ; ret 3
0x000000000009b695 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000016d0df : ljmp ptr [rax + 0x4efffcbb] ; ret
0x000000000015df7f : ljmp ptr [rax - 0x18] ; out dx, eax ; call qword ptr [rdx]
0x0000000000160af7 : ljmp ptr [rax] ; cmc ; push qword ptr [rsi + rbx*8] ; cmc ; jmp rsp
0x000000000016e57b : ljmp ptr [rbp + rcx*8] ; add byte ptr [rbp + rsi*8 - 0x11], ch ; jmp rsp
0x0000000000172af3 : ljmp ptr [rbx + rcx] ; add al, byte ptr [rax] ; cmp al, 0xee ; std ; jmp rsp
0x000000000016fa93 : ljmp ptr [rbx + rdx*2 - 0x37c3ffff] ; hlt ; call rsp
0x000000000015e88b : ljmp ptr [rbx - 0x10] ; call qword ptr [rdi]
0x000000000015e887 : ljmp ptr [rbx - 0x10] ; ljmp ptr [rbx - 0x10] ; call qword ptr [rdi]
0x000000000017272b : ljmp ptr [rbx - 0xa53fffe] ; cli ; call rsp
0x00000000001715db : ljmp ptr [rcx + rsi*8 - 0x1c73ffff] ; clc ; call rsp
0x0000000000161455 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000045015 : ljmp ptr [rcx] ; ret
0x000000000015ff97 : ljmp ptr [rdi - 0x19] ; hlt ; call rbx
0x0000000000171b63 : ljmp ptr [rdx + rbx - 0x42c3fffe] ; stc ; jmp rsp
0x000000000017199b : ljmp ptr [rdx + rcx - 0x7213fffe] ; stc ; jmp rsp
0x000000000016cc9f : ljmp ptr [rdx - 0x6b] ; cld ; call qword ptr [rax]
0x00000000000884f6 : ljmp ptr [rdx] ; cmp rcx, rdx ; jne 0x884f8 ; ret
0x000000000016d16b : ljmp ptr [rdx] ; ret 0xfffc
0x000000000016c71f : ljmp ptr [rsi + 0x54fffc6f] ; ja 0x16c72b ; call rsp
0x000000000016ce5b : ljmp ptr [rsi + rax*8 - 4] ; call qword ptr [rdx]
0x0000000000171c03 : ljmp ptr [rsi + rbx - 0x2f83fffe] ; stc ; jmp rsp
0x0000000000171a7b : ljmp ptr [rsp + rdx + 2] ; add byte ptr [rdx + rbp*4], bl ; stc ; call rsp
0x000000000016dfb3 : ljmp ptr [rsp] ; add byte ptr [rax], al ; cld ; ret 0xffed
0x00000000001472fe : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000181c1d : lock add byte ptr [rax], al ; and byte ptr [rdi - 0xd], al ; call rsi
0x000000000002dacd : lock add byte ptr ss:[rax - 0x77], cl ; ret 0x8348
0x00000000001715bd : lock add dword ptr [rax], eax ; mov esi, ds ; clc ; call rsp
0x00000000000df214 : lock and byte ptr [rax - 0x77], cl ; ret
0x00000000001147c2 : lock dec dword ptr [rax - 0x77] ; ret
0x00000000001186b0 : lock sub dword ptr [rdi + 0x18], 1 ; je 0x1186c9 ; xor eax, eax ; ret
0x000000000007becc : lock xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000016fd50 : lodsb al, byte ptr [rsi] ; adc esi, esi ; call rsp
0x000000000011e270 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000061207 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c2f90 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x9d78b37], al ; ret
0x000000000014a890 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000010a0a0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000000000016e0dd : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; pop rbx ; out dx, eax ; call rsp
0x000000000011cc6c : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000a3f62 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011adb7 : lodsb al, byte ptr [rsi] ; and al, 0xc0 ; add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000115f7a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d77ab : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000163051 : lodsb al, byte ptr [rsi] ; cli ; dec eax ; lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x0000000000163055 : lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x0000000000172730 : lodsb al, byte ptr [rsi] ; cmc ; cli ; call rsp
0x000000000017650c : lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], dl ; in al, dx ; call qword ptr [rax]
0x000000000016de50 : lodsb al, byte ptr [rsi] ; in eax, dx ; call rsp
0x00000000001715dc : lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; mov ebx, fs ; clc ; call rsp
0x000000000016f7f8 : lodsb al, byte ptr [rsi] ; jno 0x16f7f2 ; call rsp
0x0000000000170c74 : lodsb al, byte ptr [rsi] ; mov dh, 1 ; add ah, ch ; ret
0x0000000000170c70 : lodsb al, byte ptr [rsi] ; mov esi, 0xb6acfff7 ; add dword ptr [rax], eax ; in al, dx ; ret
0x000000000011e894 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015cd1d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000c54ab : lodsb al, byte ptr [rsi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017880c : lodsb al, byte ptr [rsi] ; pop rsp ; add byte ptr [rax], al ; mov al, 0xd7 ; out dx, al ; jmp qword ptr [rax]
0x000000000016fa94 : lodsb al, byte ptr [rsi] ; push rbx ; add dword ptr [rax], eax ; cmp al, 0xc8 ; hlt ; call rsp
0x0000000000187f0c : lodsb al, byte ptr [rsi] ; push rbx ; add dword ptr [rax], eax ; nop ; stc ; cmc ; jmp qword ptr [rcx]
0x000000000011a95a : lodsb al, byte ptr [rsi] ; ret
0x000000000017ee0c : lodsb al, byte ptr [rsi] ; ret 0
0x000000000016f628 : lodsb al, byte ptr [rsi] ; sal ebx, -1 ; add al, 0x37 ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff3
0x000000000016e4e0 : lodsb al, byte ptr [rsi] ; salc ; out dx, eax ; jmp rsp
0x000000000018560c : lodsb al, byte ptr [rsi] ; sub al, byte ptr [rcx] ; add al, dh ; push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000006d3af : lodsd eax, dword ptr [rsi] ; add byte ptr [r8], r8b ; mov edx, eax ; jmp 0x6d354
0x000000000009ca96 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001709e5 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; in al, dx ; test al, 0xf7 ; call rsp
0x00000000001714d1 : lodsd eax, dword ptr [rsi] ; clc ; jmp rsp
0x000000000016d289 : lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000016fcd9 : lodsd eax, dword ptr [rsi] ; cmc ; call rsp
0x00000000000e3e65 : lodsd eax, dword ptr [rsi] ; idiv bh ; pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x0000000000122400 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000003773f : lodsd eax, dword ptr [rsi] ; ret
0x000000000011aa3b : lodsd eax, dword ptr [rsi] ; ret 4
0x000000000016017c : lodsd eax, dword ptr [rsi] ; sbb al, 0xf5 ; call qword ptr [rax]
0x000000000009ca95 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000112066 : loop 0x111ff8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001121f9 : loop 0x11218b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001336ba : loop 0x1336b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001336b9 : loop 0x1336b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013618a : loop 0x136185 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136189 : loop 0x136186 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138caa : loop 0x138ca5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138ca9 : loop 0x138ca6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d0ba : loop 0x15d10f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000015ee81 : loop 0x15ee7b ; inc dword ptr [rax] ; loop 0x15ee7f ; jmp qword ptr [rax]
0x000000000015ee85 : loop 0x15ee7b ; jmp qword ptr [rax]
0x000000000015ee9d : loop 0x15ee93 ; call qword ptr [rax]
0x000000000016bfad : loop 0x16bfac ; call qword ptr [rax]
0x000000000018dde1 : loop 0x18dde0 ; jmp qword ptr [rdx]
0x00000000000025e5 : loop 0x25bf ; ret 0x23cb
0x0000000000036179 : loop 0x361a3 ; mov rax, rcx ; or rax, rdx ; ret
0x000000000004ac2e : loop 0x4ac37 ; call 0x86ed4
0x0000000000054fed : loop 0x5503f ; mov esi, dword ptr [rip + 0x345f7b] ; call rax
0x00000000000641a2 : loop 0x64134 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006d184 : loop 0x6d18b ; mov eax, edx ; ret
0x000000000006d274 : loop 0x6d27b ; mov eax, edx ; ret
0x000000000008de4d : loop 0x8de85 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000094e8a : loop 0x94e95 ; add byte ptr [rax], al ; ret
0x0000000000099295 : loop 0x992af ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x000000000009b019 : loop 0x9b026 ; mov rax, rdi ; jne 0x9b035 ; ret
0x000000000009b8af : loop 0x9b906 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000009bb78 : loop 0x9bbcf ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000c780c : loop 0xc7818 ; xor esi, esi ; call 0x81c98
0x00000000000c7934 : loop 0xc7939 ; add esi, esi ; ret
0x000000000010dafe : loope 0x10da93 ; ret
0x000000000013362a : loope 0x133625 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133629 : loope 0x133626 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001360fa : loope 0x1360f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001360f9 : loope 0x1360f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138c1a : loope 0x138c15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000138c19 : loope 0x138c16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014172b : loope 0x141732 ; add byte ptr [rax], al ; ret
0x00000000001495bb : loope 0x1495c5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014b793 : loope 0x14b7e7 ; and eax, 0x58d4800 ; ret 0x1f9
0x000000000014bd76 : loope 0x14bdd5 ; ret
0x000000000015d399 : loope 0x15d39c ; jmp qword ptr [rdi]
0x000000000015d419 : loope 0x15d41c ; jmp qword ptr [rdi]
0x000000000015d499 : loope 0x15d49c ; jmp qword ptr [rdi]
0x000000000015d519 : loope 0x15d51c ; jmp qword ptr [rdi]
0x000000000015d599 : loope 0x15d59c ; jmp qword ptr [rdi]
0x000000000015d619 : loope 0x15d61c ; jmp qword ptr [rdi]
0x000000000015ecc1 : loope 0x15ecb6 ; jmp qword ptr [rax]
0x000000000015ee4d : loope 0x15ee43 ; jmp rax
0x000000000015ee69 : loope 0x15ee5f ; call rsp
0x000000000015ee65 : loope 0x15ee5f ; inc esp ; loope 0x15ee63 ; call rsp
0x000000000015ee6d : loope 0x15ee63 ; jmp rsp
0x000000000016039c : loope 0x1603bd ; cmc ; push qword ptr [rax] ; mov ebp, esi ; call rax
0x0000000000161a69 : loope 0x161a73 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000016bfa9 : loope 0x16bfac ; inc eax ; loop 0x16bfb0 ; call qword ptr [rax]
0x0000000000171ce9 : loope 0x171ce6 ; jmp rsp
0x0000000000175399 : loope 0x175388 ; jmp qword ptr [rcx]
0x0000000000194ab4 : loope 0x194ac1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000041eb6 : loope 0x41e76 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000041f96 : loope 0x41f56 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000426b7 : loope 0x42709 ; mov dword ptr [rdi], ecx ; ret
0x00000000000426e8 : loope 0x4273b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000004275d : loope 0x427b0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000006d091 : loope 0x6d066 ; mov dword ptr [rdi], ecx ; ret
0x000000000007868e : loope 0x78694 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000008734b : loope 0x8735d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000874f2 : loope 0x87549 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000875bb : loope 0x875cd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000098699 : loope 0x98708 ; nop dword ptr [rax + rax] ; ret
0x00000000000992d7 : loope 0x99298 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000993be : loope 0x993b5 ; ret
0x000000000009a55e : loope 0x9a573 ; je 0x9a584 ; ret
0x00000000000b3a0d : loope 0xb399a ; ret 0xf631
0x00000000000bca5d : loope 0xbca66 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000c4b59 : loope 0xc4b5e ; add esi, esi ; ret
0x00000000000f4283 : loope 0xf423c ; sub al, byte ptr [rax] ; test rax, rax ; je 0xf4299 ; ret
0x00000000001016e4 : loopne 0x1016e3 ; add eax, 0x10 ; ret
0x0000000000101c28 : loopne 0x101c1f ; ret
0x000000000010245b : loopne 0x102468 ; cdqe ; shr rax, 4 ; ret
0x0000000000105a7c : loopne 0x105af1 ; idiv edi ; xor eax, eax ; ret
0x00000000001068db : loopne 0x1068e8 ; sub eax, 1 ; pop r13 ; pop r14 ; ret
0x0000000000111f70 : loopne 0x111f7d ; sub eax, 1 ; add rsp, 0x18 ; ret
0x0000000000112927 : loopne 0x112930 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000115e31 : loopne 0x115ea1 ; nop dword ptr [rax + rax] ; ret
0x0000000000126562 : loopne 0x12652f ; jp 0x1265eb ; jp 0x12655e ; ret
0x0000000000126a52 : loopne 0x126a1f ; jp 0x126adb ; jp 0x126a4e ; ret
0x0000000000126df5 : loopne 0x126dc2 ; jp 0x126e7e ; jp 0x126df1 ; ret
0x000000000012a031 : loopne 0x12a048 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a030 : loopne 0x12a049 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a181 : loopne 0x12a198 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a180 : loopne 0x12a199 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a2d1 : loopne 0x12a2e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a2d0 : loopne 0x12a2e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a421 : loopne 0x12a438 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a420 : loopne 0x12a439 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a571 : loopne 0x12a588 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a570 : loopne 0x12a589 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a6c1 : loopne 0x12a6d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a6c0 : loopne 0x12a6d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a811 : loopne 0x12a828 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a810 : loopne 0x12a829 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a95f : loopne 0x12a976 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a95e : loopne 0x12a977 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aab1 : loopne 0x12aac8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aab0 : loopne 0x12aac9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ac01 : loopne 0x12ac18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ac00 : loopne 0x12ac19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ad51 : loopne 0x12ad68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ad50 : loopne 0x12ad69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aea1 : loopne 0x12aeb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aea0 : loopne 0x12aeb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aff1 : loopne 0x12b008 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aff0 : loopne 0x12b009 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b141 : loopne 0x12b158 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b140 : loopne 0x12b159 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b291 : loopne 0x12b2a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b290 : loopne 0x12b2a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ca01 : loopne 0x12ca18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ca00 : loopne 0x12ca19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cb51 : loopne 0x12cb68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cb50 : loopne 0x12cb69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cca1 : loopne 0x12ccb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cca0 : loopne 0x12ccb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cdf1 : loopne 0x12ce08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cdf0 : loopne 0x12ce09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cf41 : loopne 0x12cf58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cf40 : loopne 0x12cf59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d091 : loopne 0x12d0a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d090 : loopne 0x12d0a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d1e1 : loopne 0x12d1f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d1e0 : loopne 0x12d1f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d32f : loopne 0x12d346 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d32e : loopne 0x12d347 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d481 : loopne 0x12d498 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d480 : loopne 0x12d499 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d5d1 : loopne 0x12d5e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d5d0 : loopne 0x12d5e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d721 : loopne 0x12d738 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d720 : loopne 0x12d739 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d871 : loopne 0x12d888 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d870 : loopne 0x12d889 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d9c1 : loopne 0x12d9d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d9c0 : loopne 0x12d9d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012db11 : loopne 0x12db28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012db10 : loopne 0x12db29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dc61 : loopne 0x12dc78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dc60 : loopne 0x12dc79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f3d1 : loopne 0x12f3e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f3d0 : loopne 0x12f3e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f521 : loopne 0x12f538 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f520 : loopne 0x12f539 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f671 : loopne 0x12f688 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f670 : loopne 0x12f689 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f7c1 : loopne 0x12f7d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f7c0 : loopne 0x12f7d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f911 : loopne 0x12f928 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f910 : loopne 0x12f929 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fa61 : loopne 0x12fa78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fa60 : loopne 0x12fa79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fbb1 : loopne 0x12fbc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fbb0 : loopne 0x12fbc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fcff : loopne 0x12fd16 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fcfe : loopne 0x12fd17 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fe51 : loopne 0x12fe68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fe50 : loopne 0x12fe69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ffa1 : loopne 0x12ffb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ffa0 : loopne 0x12ffb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001300f1 : loopne 0x130108 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001300f0 : loopne 0x130109 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130241 : loopne 0x130258 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130240 : loopne 0x130259 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130391 : loopne 0x1303a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130390 : loopne 0x1303a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001304e1 : loopne 0x1304f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001304e0 : loopne 0x1304f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130631 : loopne 0x130648 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130630 : loopne 0x130649 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014b5d5 : loopne 0x14b626 ; sub eax, edx ; vzeroupper ; ret
0x000000000014b5d4 : loopne 0x14b627 ; sub eax, edx ; vzeroupper ; ret
0x000000000015a694 : loopne 0x15a674 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000015e0d8 : loopne 0x15e0d4 ; out dx, eax ; call qword ptr [rax]
0x000000000015e0e8 : loopne 0x15e0e4 ; out dx, eax ; jmp rax
0x000000000015e0ec : loopne 0x15e0e8 ; out dx, eax ; jmp rax
0x000000000015e0f0 : loopne 0x15e0ec ; out dx, eax ; jmp rax
0x000000000015e0f4 : loopne 0x15e0f0 ; out dx, eax ; jmp rax
0x000000000015e0f8 : loopne 0x15e0f4 ; out dx, eax ; jmp rax
0x000000000015e0fc : loopne 0x15e0f8 ; out dx, eax ; jmp rax
0x000000000015e100 : loopne 0x15e0fc ; out dx, eax ; jmp rax
0x000000000015e104 : loopne 0x15e100 ; out dx, eax ; jmp rax
0x000000000015e108 : loopne 0x15e104 ; out dx, eax ; jmp rax
0x000000000015e10c : loopne 0x15e108 ; out dx, eax ; jmp rax
0x000000000015e118 : loopne 0x15e114 ; out dx, eax ; jmp rax
0x000000000015e11c : loopne 0x15e118 ; out dx, eax ; jmp rax
0x000000000015e120 : loopne 0x15e11c ; out dx, eax ; jmp rax
0x000000000015e124 : loopne 0x15e120 ; out dx, eax ; call qword ptr [rax]
0x000000000015e12c : loopne 0x15e128 ; out dx, eax ; jmp rax
0x000000000015e138 : loopne 0x15e134 ; out dx, eax ; jmp rax
0x000000000015e13c : loopne 0x15e138 ; out dx, eax ; jmp rax
0x000000000015e140 : loopne 0x15e13c ; out dx, eax ; jmp rax
0x000000000015e144 : loopne 0x15e140 ; out dx, eax ; jmp rax
0x000000000015e148 : loopne 0x15e144 ; out dx, eax ; call qword ptr [rax]
0x000000000015e170 : loopne 0x15e16c ; out dx, eax ; jmp rax
0x000000000015e174 : loopne 0x15e170 ; out dx, eax ; jmp rax
0x000000000015e178 : loopne 0x15e174 ; out dx, eax ; jmp rax
0x000000000015ecb0 : loopne 0x15ec91 ; int1 ; jmp qword ptr [rax]
0x000000000015ecc0 : loopne 0x15eca6 ; int1 ; jmp qword ptr [rax]
0x000000000015ecbd : loopne 0x15ecb2 ; jmp rax
0x000000000015ecd0 : loopne 0x15ecbb ; int1 ; jmp qword ptr [rax]
0x000000000015ece0 : loopne 0x15ecd0 ; int1 ; jmp qword ptr [rax]
0x000000000015f03c : loopne 0x15f0a0 ; inc dword ptr [rax] ; pop rsp ; jmp qword ptr [rax]
0x000000000015f05c : loopne 0x15f0c1 ; inc dword ptr [rax] ; pop rbp ; jmp qword ptr [rax]
0x000000000015f07c : loopne 0x15f0e2 ; inc dword ptr [rax] ; pop rsi ; jmp qword ptr [rax]
0x000000000015f098 : loopne 0x15f0fb ; call qword ptr [rax]
0x000000000015f224 : loopne 0x15f29d ; inc dword ptr [rax] ; jno 0x15f225 ; jmp qword ptr [rax]
0x000000000015f284 : loopne 0x15f2fd ; call qword ptr [rax]
0x000000000015f2bc : loopne 0x15f33a ; inc dword ptr [rax] ; jbe 0x15f2bd ; jmp qword ptr [rax]
0x00000000001603b8 : loopne 0x160349 ; cmc ; push rax ; mov ch, dh ; jmp rax
0x0000000000160af9 : loopne 0x160af6 ; push qword ptr [rsi + rbx*8] ; cmc ; jmp rsp
0x000000000016babc : loopne 0x16baf3 ; sti ; call rax
0x000000000016beb4 : loopne 0x16beb8 ; sti ; jmp rax
0x000000000016beb8 : loopne 0x16bebe ; cld ; jmp rax
0x000000000016bfa0 : loopne 0x16bf80 ; sti ; jmp qword ptr [rax]
0x000000000016bfe5 : loopne 0x16bfe4 ; jmp rax
0x000000000016c2d4 : loopne 0x16c327 ; cld ; jmp rax
0x000000000016c2d8 : loopne 0x16c32d ; cld ; jmp rax
0x000000000016c2ec : loopne 0x16c33b ; cld ; call rax
0x000000000016c5e0 : loopne 0x16c658 ; cld ; jmp qword ptr [rax + 0x20fffc77]
0x00000000001738f0 : loopne 0x173926 ; jmp 0x1738f6
0x0000000000174ce0 : loopne 0x174ca5 ; jmp 0x174ce4
0x0000000000176070 : loopne 0x17607a ; in al, dx ; jmp rsp
0x0000000000178260 : loopne 0x17821a ; out dx, al ; jmp qword ptr [rcx]
0x0000000000180f00 : loopne 0x180f22 ; jmp rsp
0x00000000001837f0 : loopne 0x183811 ; hlt ; jmp qword ptr [rdi]
0x0000000000186290 : loopne 0x18622a ; cmc ; jmp qword ptr [rcx]
0x0000000000187a71 : loopne 0x187a6a ; call qword ptr [rdx]
0x0000000000187f70 : loopne 0x187f6e ; cmc ; call qword ptr [rax]
0x0000000000188070 : loopne 0x18806f ; cmc ; jmp qword ptr [rcx]
0x0000000000188190 : loopne 0x188190 ; cmc ; jmp qword ptr [rcx]
0x0000000000190f50 : loopne 0x190f6c ; clc ; call qword ptr [rbx]
0x0000000000191390 : loopne 0x1913b4 ; clc ; call qword ptr [rdx]
0x00000000001917d0 : loopne 0x1917ff ; clc ; call qword ptr [rdx]
0x0000000000192900 : loopne 0x19289d ; sti ; jmp qword ptr [rdx]
0x00000000000266c9 : loopne 0x266e2 ; test byte ptr [rax - 0x77000000], dh ; ret 0xe283
0x000000000002c303 : loopne 0x2c312 ; movzx eax, ax ; ret
0x000000000002c343 : loopne 0x2c34c ; movzx eax, ax ; ret
0x000000000002c3e3 : loopne 0x2c3ee ; movzx eax, ax ; ret
0x000000000002c4c3 : loopne 0x2c4c8 ; ret
0x000000000002c53c : loopne 0x2c541 ; ret
0x000000000002c54c : loopne 0x2c55b ; movzx eax, ax ; ret
0x000000000002c58c : loopne 0x2c595 ; movzx eax, ax ; ret
0x000000000002c513 : loopne 0x2c596 ; ret
0x000000000002c62c : loopne 0x2c637 ; movzx eax, ax ; ret
0x000000000002cecb : loopne 0x2cf2d ; pop rbp ; pop r12 ; ret
0x0000000000032c55 : loopne 0x32c61 ; ret
0x0000000000032f67 : loopne 0x32f4e ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000033c64 : loopne 0x33cb4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000344dc : loopne 0x3450f ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000400aa : loopne 0x400c4 ; test ch, dh ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000421dd : loopne 0x421e6 ; sub eax, 1 ; ret
0x000000000004c5b5 : loopne 0x4c542 ; ret 0xe680
0x000000000004cbe2 : loopne 0x4cbd7 ; wait ; nop dword ptr [rax] ; call 0x68e68
0x000000000004e236 : loopne 0x4e1c3 ; ret 0xe680
0x0000000000064cdd : loopne 0x64d4b ; nop ; mov qword ptr [rdi], rcx ; ret
0x00000000000657f7 : loopne 0x6585e ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000065fcf : loopne 0x65fd5 ; add byte ptr [rax], al ; jmp rax
0x0000000000065ffb : loopne 0x66001 ; add byte ptr [rax], al ; call rax
0x000000000006603d : loopne 0x66043 ; add byte ptr [rax], al ; call rax
0x000000000006607f : loopne 0x66085 ; add byte ptr [rax], al ; jmp rax
0x000000000006a39e : loopne 0x6a337 ; mov eax, 0xffffffff ; ret
0x000000000006a49d : loopne 0x6a50d ; nop ; mov eax, 0xffffffff ; ret
0x000000000006f6e6 : loopne 0x6f6eb ; ret
0x000000000006f6f6 : loopne 0x6f6fb ; ret
0x00000000000708c9 : loopne 0x70930 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070977 : loopne 0x709de ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072541 : loopne 0x7254a ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000007b893 : loopne 0x7b8f9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000877bd : loopne 0x87815 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000890f7 : loopne 0x8914d ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000890fa : loopne 0x8915c ; pop rbp ; pop r12 ; ret
0x0000000000094f8c : loopne 0x94f96 ; add byte ptr [rax], al ; ret
0x00000000000992cd : loopne 0x992e7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000ad8c1 : loopne 0xad8cb ; dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000000b85d0 : loopne 0xb8636 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000bbfc2 : loopne 0xbc024 ; pop rbp ; pop r12 ; ret
0x00000000000bc0c2 : loopne 0xbc124 ; pop rbp ; pop r12 ; ret
0x00000000000c039e : loopne 0xc03a9 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c4a89 : loopne 0xc4a92 ; add eax, 8 ; ret
0x00000000000c4ad5 : loopne 0xc4adb ; ret
0x00000000000c4b89 : loopne 0xc4b8f ; pop rbx ; ret
0x00000000000c6a13 : loopne 0xc6a27 ; ret
0x00000000000ca90d : loopne 0xca97e ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000cafc3 : loopne 0xcb02a ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d3f05 : loopne 0xd3f18 ; ret
0x00000000000d5e17 : loopne 0xd5e7d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d95ec : loopne 0xd95ef ; dec ecx ; ret
0x00000000000e0d7c : loopne 0xe0dde ; pop rbp ; pop r12 ; ret
0x00000000000e3cd0 : loopne 0xe3cd6 ; jmp 0xe3c9a
0x00000000000e50b3 : loopne 0xe50ab ; mov r15, r8 ; jmp 0xe5082
0x00000000000e633e : loopne 0xe63a4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ea53e : loopne 0xea544 ; ret
0x00000000000ea55a : loopne 0xea569 ; movzx eax, ax ; ret
0x00000000000ea5ce : loopne 0xea5d4 ; ret
0x00000000000ea66e : loopne 0xea674 ; ret
0x00000000000ea68a : loopne 0xea68f ; ret
0x00000000000ea6fe : loopne 0xea704 ; ret
0x00000000000ea71a : loopne 0xea723 ; movzx eax, ax ; ret
0x00000000000ea78e : loopne 0xea794 ; ret
0x00000000000ea81e : loopne 0xea824 ; ret
0x00000000000ea8be : loopne 0xea8c4 ; ret
0x00000000000ea95e : loopne 0xea964 ; ret
0x00000000000ea9fe : loopne 0xeaa04 ; ret
0x00000000000eaa1a : loopne 0xeaa25 ; movzx eax, ax ; ret
0x00000000000eaa8e : loopne 0xeaa94 ; ret
0x00000000000eab29 : loopne 0xeab2f ; ret
0x00000000000eabbe : loopne 0xeabc4 ; ret
0x00000000000ead9a : loopne 0xeada0 ; ret
0x00000000000eaee0 : loopne 0xeaee6 ; ret
0x00000000000eaef3 : loopne 0xeaf02 ; movzx eax, ax ; ret
0x00000000000eaf60 : loopne 0xeaf66 ; ret
0x00000000000eafe0 : loopne 0xeafe6 ; ret
0x00000000000eaff3 : loopne 0xeaff8 ; ret
0x00000000000eb060 : loopne 0xeb066 ; ret
0x00000000000eb073 : loopne 0xeb07c ; movzx eax, ax ; ret
0x00000000000eb0e0 : loopne 0xeb0e6 ; ret
0x00000000000eb160 : loopne 0xeb166 ; ret
0x00000000000eb1e0 : loopne 0xeb1e6 ; ret
0x00000000000eb260 : loopne 0xeb266 ; ret
0x00000000000eb2e0 : loopne 0xeb2e6 ; ret
0x00000000000eb2f3 : loopne 0xeb2fe ; movzx eax, ax ; ret
0x00000000000eb360 : loopne 0xeb366 ; ret
0x00000000000eb3dd : loopne 0xeb3e3 ; ret
0x00000000000eb460 : loopne 0xeb466 ; ret
0x00000000000eb60a : loopne 0xeb610 ; ret
0x00000000000f12df : loopne 0xf12d9 ; ret 0x7508
0x00000000000f163c : loopne 0xf1641 ; dec dword ptr [rcx] ; ret
0x00000000000f169c : loopne 0xf16a1 ; dec dword ptr [rcx] ; ret
0x00000000000f373b : loopne 0xf3740 ; ret
0x00000000000f3e68 : loopne 0xf3e7d ; cmp eax, 4 ; je 0xf3e77 ; ret
0x00000000000f4039 : loopne 0xf404c ; pop rbp ; pop r12 ; ret
0x00000000000f4745 : loopne 0xf4797 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x000000000010db97 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000015a0aa : mov ah, 0x13 ; ret
0x0000000000187214 : mov ah, 0x46 ; add dword ptr [rax], eax ; js 0x1871e6 ; cmc ; jmp qword ptr [rcx]
0x00000000001724dc : mov ah, 0x56 ; add al, byte ptr [rax] ; sub al, 0xba ; cli ; jmp rsp
0x0000000000188b14 : mov ah, 0x5f ; add dword ptr [rax], eax ; cwde ; adc dh, dh ; call qword ptr [rdx]
0x000000000016c534 : mov ah, 0x7e ; cld ; inc dword ptr [rsi + rdi*2 - 4] ; call rsp
0x000000000017b314 : mov ah, 0x87 ; add byte ptr [rax], al ; pop rbp ; out dx, eax ; call rcx
0x000000000018b814 : mov ah, 0x8c ; add dword ptr [rax], eax ; clc ; ret 0xfff6
0x000000000015a550 : mov ah, 0xa5 ; ret
0x000000000016e0dc : mov ah, 0xac ; add byte ptr [rax], al ; pop rbx ; out dx, eax ; call rsp
0x000000000017f414 : mov ah, 0xc8 ; add byte ptr [rax], al ; test al, 0xbf ; int1 ; call qword ptr [rdx]
0x000000000015ee64 : mov ah, 0xe1 ; inc esp ; loope 0x15ee64 ; call rsp
0x00000000001714cc : mov ah, 0xe6 ; add dword ptr [rax], eax ; pushfq ; lodsd eax, dword ptr [rsi] ; clc ; jmp rsp
0x00000000000fea1c : mov ah, 0xe9 ; ret 0xfffd
0x0000000000174ac9 : mov ah, 0xeb ; call qword ptr [rdx]
0x0000000000191d14 : mov ah, 0xf1 ; add dword ptr [rax], eax ; js 0x191d53 ; clc ; call qword ptr [rcx]
0x000000000017f161 : mov ah, 0xf1 ; call rdx
0x000000000017168c : mov ah, 0xf6 ; add dword ptr [rax], eax ; sbb al, 6 ; stc ; call rsp
0x0000000000170b89 : mov ah, 0xf7 ; jmp rsp
0x0000000000192814 : mov ah, 0xfc ; add dword ptr [rax], eax ; cwde ; cdq ; sti ; jmp qword ptr [rdx]
0x000000000016d25d : mov ah, 0xfc ; jmp qword ptr [rax - 0x1f000362]
0x000000000018e02d : mov ah, 1 ; add al, dl ; idiv al ; call qword ptr [rax]
0x00000000000bff9b : mov ah, 1 ; add byte ptr [rax], al ; call 0x2c236
0x0000000000022e04 : mov ah, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000173214 : mov ah, 6 ; add byte ptr [rax], al ; js 0x1731a6 ; std ; jmp qword ptr [rdx]
0x0000000000187158 : mov ah, al ; cmc ; jmp qword ptr [rcx]
0x0000000000184548 : mov ah, al ; hlt ; call qword ptr [rdi]
0x0000000000188208 : mov ah, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000159ea4 : mov ah, bl ; push rsi ; ret
0x000000000017db65 : mov al, 0 ; add byte ptr [rax], cl ; pop rcx ; cli ; call qword ptr [rax]
0x000000000010a2ac : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000010a264 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000181470 : mov al, 0x28 ; call rdi
0x000000000003fd34 : mov al, 0x35 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000191ff0 : mov al, 0x35 ; clc ; jmp qword ptr [rbx]
0x00000000000305ca : mov al, 0x36 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000192390 : mov al, 0x38 ; clc ; jmp qword ptr [rcx]
0x0000000000110bd9 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b8bfe : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000b0559 : mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000115e28 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000103e8d : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x000000000015f094 : mov al, 0x5e ; jmp rax
0x000000000015f0bc : mov al, 0x5f ; inc eax ; pop rdi ; call rax
0x000000000017b410 : mov al, 0x61 ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000182460 : mov al, 0x66 ; jmp qword ptr [rdi]
0x000000000015f23c : mov al, 0x71 ; call rax
0x000000000016c7d0 : mov al, 0x71 ; cld ; jmp qword ptr [rax]
0x000000000015f280 : mov al, 0x74 ; jmp rax
0x000000000015f2d8 : mov al, 0x76 ; call rax
0x000000000016c7e8 : mov al, 0x76 ; cld ; jmp qword ptr [rax]
0x000000000015f2f8 : mov al, 0x77 ; call rax
0x000000000015f344 : mov al, 0x78 ; inc eax ; js 0x15f345 ; call rax
0x000000000016c5d8 : mov al, 0x7a ; cld ; inc dword ptr [rax + 0x7a] ; cld ; jmp rax
0x000000000017be40 : mov al, 0x7c ; out dx, eax ; call qword ptr [rsi]
0x000000000016c3c0 : mov al, 0x7d ; cld ; inc dword ptr [rax + 0x7d] ; cld ; call rax
0x000000000017ed80 : mov al, 0x80 ; int1 ; jmp rbx
0x000000000016cac4 : mov al, 0xa2 ; cld ; inc dword ptr [rax - 0x5e] ; cld ; call rax
0x000000000016c8ac : mov al, 0xa5 ; cld ; inc dword ptr [rax - 0x5b] ; cld ; call rax
0x000000000015ec6c : mov al, 0xa9 ; int1 ; call qword ptr [rax]
0x000000000016d1a8 : mov al, 0xc2 ; cld ; jmp qword ptr [rax]
0x000000000016cfbc : mov al, 0xc9 ; cld ; inc dword ptr [rax - 0x37] ; cld ; call rax
0x0000000000174d80 : mov al, 0xcb ; jmp 0x174d86
0x000000000016cda4 : mov al, 0xcc ; cld ; inc dword ptr [rax - 0x34] ; cld ; call rax
0x00000000001785d0 : mov al, 0xce ; out dx, al ; jmp rax
0x0000000000178810 : mov al, 0xd7 ; out dx, al ; jmp qword ptr [rax]
0x000000000015c356 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000072411 : mov al, 0xf ; mov dh, 0 ; pop rbx ; ret
0x00000000001147c1 : mov al, 0xf0 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e0cf3 : mov al, 0xf3 ; ret
0x0000000000186ca1 : mov al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000187e20 : mov al, 0xf8 ; cmc ; jmp qword ptr [rcx]
0x0000000000188160 : mov al, 0xfb ; cmc ; jmp qword ptr [rcx]
0x000000000016d291 : mov al, 0xfc ; jmp rax
0x0000000000170ae5 : mov al, 1 ; add byte ptr [rdi + rbp*4 - 9], bl ; call rsp
0x0000000000175e10 : mov al, 1 ; in al, dx ; call qword ptr [rcx]
0x000000000017c050 : mov al, 3 ; std ; jmp rsp
0x0000000000094fbc : mov al, 4 ; add byte ptr [rax], al ; ret
0x0000000000094bbc : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000017b57d : mov al, byte ptr [rax] ; add byte ptr [rax + 0x68], dl ; out dx, eax ; call qword ptr [rdx]
0x000000000000ed70 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000910eb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000091119 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009119d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000515ff : mov al, byte ptr [rcx] ; add byte ptr [rbx - 0x7af00008], al ; ret 0xffee
0x0000000000143ae0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000910c5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000515fe : mov al, byte ptr cs:[rcx] ; add byte ptr [rbx - 0x7af00008], al ; ret 0xffee
0x000000000005c6e4 : mov al, ch ; xor eax, dword ptr [rax] ; call rax
0x00000000000910d5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001343f1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000e1098 : mov bh, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x0000000000028d42 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00000000000314bd : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x0000000000149458 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a88fa : mov bh, 0x5f ; adc byte ptr [rcx], ch ; ret 0x428d
0x000000000006e215 : mov bh, 0x86 ; std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000002c057 : mov bh, 0x8b ; add al, 0x10 ; ret
0x0000000000002be8 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x000000000015b384 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002c306 : mov bh, 0xc0 ; ret
0x00000000000f7dfc : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000016d4b1 : mov bh, 0xeb ; call rsp
0x0000000000170bc9 : mov bh, 0xf7 ; call rsp
0x00000000000e8e23 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c2ff : mov bh, 4 ; js 0x2c28f ; loopne 0x2c316 ; movzx eax, ax ; ret
0x000000000002c33f : mov bh, 4 ; js 0x2c2cf ; loopne 0x2c350 ; movzx eax, ax ; ret
0x000000000002c3df : mov bh, 4 ; js 0x2c36f ; loopne 0x2c3f2 ; movzx eax, ax ; ret
0x000000000002c4bf : mov bh, 4 ; js 0x2c44c ; loopne 0x2c4cc ; ret
0x000000000002c538 : mov bh, 4 ; js 0x2c4c5 ; loopne 0x2c545 ; ret
0x000000000002c548 : mov bh, 4 ; js 0x2c4d8 ; loopne 0x2c55f ; movzx eax, ax ; ret
0x000000000002c588 : mov bh, 4 ; js 0x2c518 ; loopne 0x2c599 ; movzx eax, ax ; ret
0x000000000002c628 : mov bh, 4 ; js 0x2c5b8 ; loopne 0x2c63b ; movzx eax, ax ; ret
0x00000000000ea556 : mov bh, 4 ; js 0xea4e6 ; loopne 0xea56d ; movzx eax, ax ; ret
0x00000000000ea686 : mov bh, 4 ; js 0xea613 ; loopne 0xea693 ; ret
0x00000000000ea716 : mov bh, 4 ; js 0xea6a6 ; loopne 0xea727 ; movzx eax, ax ; ret
0x00000000000eaa16 : mov bh, 4 ; js 0xea9a6 ; loopne 0xeaa29 ; movzx eax, ax ; ret
0x00000000000eaeef : mov bh, 4 ; js 0xeae7f ; loopne 0xeaf06 ; movzx eax, ax ; ret
0x00000000000eafef : mov bh, 4 ; js 0xeaf7c ; loopne 0xeaffc ; ret
0x00000000000eb06f : mov bh, 4 ; js 0xeafff ; loopne 0xeb080 ; movzx eax, ax ; ret
0x00000000000eb2ef : mov bh, 4 ; js 0xeb27f ; loopne 0xeb302 ; movzx eax, ax ; ret
0x000000000015ca93 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000d94e1 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000188448 : mov bh, bh ; cmc ; jmp qword ptr [rcx]
0x00000000000fffed : mov bh, dh ; inc dword ptr [rbp - 0x769b8740] ; ret
0x000000000014ad4e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e1ed : mov bl, 0 ; add byte ptr [rdi + rax*4], bl ; out dx, eax ; call rsp
0x000000000009c0ac : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000001b13 : mov bl, 0x5a ; ret 0x2a63
0x000000000015c463 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000087c3d : mov bl, 0xf ; test dword ptr [rax + rax - 0x76b80000], esi ; ret 0xf748
0x00000000000b455b : mov bl, 0xf6 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000003af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000018f241 : mov bl, 0xf7 ; jmp rsi
0x00000000001724c1 : mov bl, 0xfa ; jmp rsp
0x000000000016d299 : mov bl, 0xfc ; jmp rax
0x0000000000184458 : mov bl, al ; hlt ; jmp qword ptr [rcx]
0x000000000016bb89 : mov bl, bh ; call qword ptr [rax - 0x1f000477]
0x000000000016bb88 : mov bl, dil ; call qword ptr [rax - 0x1f000477]
0x0000000000103e91 : mov byte ptr [r11], 0 ; ret
0x000000000003fbaf : mov byte ptr [r8 + rdx], 0 ; ret
0x000000000006ee1c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e1ede : mov byte ptr [r8 - 1], 0 ; ret
0x00000000000cf6f6 : mov byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000116e1c : mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000004cc43 : mov byte ptr [rax + rax + 0x63480000], bl ; ret 0x8d49
0x000000000010f384 : mov byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000003fbb0 : mov byte ptr [rax + rdx], 0 ; ret
0x00000000000740d4 : mov byte ptr [rax + rsi], dl ; ret
0x00000000000740d3 : mov byte ptr [rax + rsi], r10b ; ret
0x000000000006ee1d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e1edf : mov byte ptr [rax - 1], 0 ; ret
0x00000000000321a6 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000017f18d : mov byte ptr [rax], 0 ; mov sil, 0xf1 ; jmp rsi
0x00000000000efcfe : mov byte ptr [rax], 0x20 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000020ad6 : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x0000000000020b04 : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000efcdf : mov byte ptr [rax], 0xa ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e519e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033804 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000113247 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000093d12 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000017aa58 : mov byte ptr [rbp - 0x11], al ; jmp qword ptr [rax]
0x0000000000025676 : mov byte ptr [rbp - 0x9000000], dl ; ret 0xf800
0x00000000000e0ae6 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000103e92 : mov byte ptr [rbx], 0 ; ret
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000c0417 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0xf631
0x00000000001417a3 : mov byte ptr [rcx + 2], dl ; ret
0x00000000001417c2 : mov byte ptr [rcx + 4], dl ; ret
0x0000000000141803 : mov byte ptr [rcx + 8], dl ; ret
0x000000000008d073 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002a7d6 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x00000000000e452d : mov byte ptr [rcx - 0x75], 0x45 ; add byte ptr [rcx], bh ; ret
0x00000000001603e0 : mov byte ptr [rcx - 0x76ef000b], cl ; cmc ; call qword ptr [rax]
0x000000000008d42b : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000008d370 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000008d4aa : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001016c2 : mov byte ptr [rcx], 0x31 ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000002b914 : mov byte ptr [rcx], 0x83 ; ret
0x00000000001727d5 : mov byte ptr [rcx], al ; add byte ptr [rdx + rax], cl ; sti ; jmp rsp
0x000000000017da50 : mov byte ptr [rcx], al ; ret
0x0000000000141780 : mov byte ptr [rcx], dl ; ret
0x000000000009838a : mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009692b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009514b : mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009839b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x0000000000095ae8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000094478 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000983a0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000983c2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000983e0 : mov byte ptr [rdi + 0x13], ch ; ret
0x0000000000098400 : mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000095b5e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000944ce : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000969b1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000951a1 : mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000098421 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000098426 : mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000098442 : mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000098462 : mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000098482 : mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000096a33 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000095223 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000984a3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000095be0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000094550 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000984a8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000984ca : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000984e8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000098508 : mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000098524 : mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000098544 : mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000098564 : mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000098584 : mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000095325 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000985a5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000985aa : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000985fa : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000982d0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000982ee : mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009830e : mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000098330 : mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000098350 : mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000098370 : mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000098206 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000101f42 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000101f41 : mov byte ptr [rdi + 1], sil ; ret
0x0000000000102110 : mov byte ptr [rdi + 2], 0 ; jne 0x102168 ; mov eax, r8d ; ret
0x000000000008d0b3 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008d023 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000098218 : mov byte ptr [rdi + 2], ch ; ret
0x0000000000095996 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000094396 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000967b9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000095069 : mov byte ptr [rdi + 2], dl ; ret
0x0000000000098229 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009822e : mov byte ptr [rdi + 3], ch ; ret
0x000000000008d0d2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008d042 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x0000000000098246 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000959b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000943b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000967e7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000095087 : mov byte ptr [rdi + 4], dl ; ret
0x0000000000098257 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009825c : mov byte ptr [rdi + 5], ch ; ret
0x000000000008d059 : mov byte ptr [rdi + 6], 0 ; ret
0x000000000009826e : mov byte ptr [rdi + 6], ch ; ret
0x000000000009828c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000c0100 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000c00c1 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000c0130 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000c0157 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000c01a0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000c018d : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000c00f0 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000c00d0 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000098298 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000943f3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000096839 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000950c9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000982a9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000982ae : mov byte ptr [rdi + 9], ch ; ret
0x0000000000102126 : mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000160810 : mov byte ptr [rdi - 0x70ef000b], cl ; cmc ; call qword ptr [rax]
0x000000000010c06e : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x10c069 ; ret
0x000000000008cfb6 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000012b65b : mov byte ptr [rdi - 1], dl ; ret
0x000000000008d000 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000020ad9 : mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x0000000000020b07 : mov byte ptr [rdi], 0 ; ret
0x00000000000c0120 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000c0179 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000981f2 : mov byte ptr [rdi], ch ; ret
0x000000000008e202 : mov byte ptr [rdi], cl ; ret
0x000000000008cf51 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x0000000000095970 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000094370 : mov byte ptr [rdi], dh ; ret
0x0000000000096792 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000095042 : mov byte ptr [rdi], dl ; ret
0x0000000000098202 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000093e9a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000143b09 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000910ee : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000143b37 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000009111c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000093e30 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000911a0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000fbaa8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e6201 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000175ea8 : mov byte ptr [rdx], al ; in al, dx ; call qword ptr [rcx]
0x0000000000143ae2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000910c7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000694aa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x000000000006f71a : mov byte ptr [rdx], bh ; ret
0x00000000000694a9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x000000000006f719 : mov byte ptr [rdx], dil ; ret
0x00000000000fe128 : mov byte ptr [rip + 0x2a15b9], 1 ; pop rbx ; ret
0x000000000002b4d8 : mov byte ptr [rip + 0x3715bf], dl ; ret
0x0000000000002478 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000010243b : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x000000000010243a : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00000000000883f4 : mov byte ptr [rsi + rdx + 1], al ; jg 0x883e7 ; ret
0x0000000000185578 : mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x00000000000cc214 : mov byte ptr [rsi - 1], bl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000044073 : mov byte ptr [rsi], al ; jne 0x44057 ; mov rax, rsi ; ret
0x00000000000b3eec : mov byte ptr [rsi], ch ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000173978 : mov byte ptr [rsi], dh ; jmp 0x17397e
0x0000000000043fef : mov byte ptr [rsi], dl ; jne 0x43fdf ; mov rax, rsi ; ret
0x0000000000076621 : mov byte ptr [rsp + 0x30], bl ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x00000000000c5e83 : mov byte ptr [rsp + 0x38], 0xa ; call 0xc20a7
0x000000000010602d : mov byte ptr [rsp + 4], 0x5f ; call 0x822e7
0x00000000000d9547 : mov ch, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000006ccdf : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000066707 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000159ea2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x000000000015b1e3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000015c57f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000015cf2a : mov ch, 0xab ; ret
0x0000000000178261 : mov ch, 0xee ; jmp qword ptr [rcx]
0x0000000000147e76 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e3da8 : mov ch, byte ptr [rbx] ; add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00000000001603a5 : mov ch, dh ; call rax
0x00000000001603bd : mov ch, dh ; jmp rax
0x0000000000185ed9 : mov ch, dh ; jmp rcx
0x00000000001603b9 : mov ch, dh ; push rax ; mov ch, dh ; jmp rax
0x000000000008152b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000003bac : mov cl, 0x22 ; xchg eax, ebp ; ret
0x0000000000041431 : mov cl, 0x35 ; cdq ; ret 0x35
0x0000000000074878 : mov cl, 0x35 ; ret 0x328f
0x0000000000002be9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000b5bbb : mov cl, 0x6b ; add byte ptr cs:[rax - 0x77], cl ; ret 0x9ce9
0x00000000000b2b0e : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d06b3 : mov cl, 0xa8 ; sub al, 0 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000011c290 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000017f0c9 : mov cl, 0xf1 ; jmp qword ptr [rbx]
0x000000000016f5a9 : mov cl, 0xf3 ; call rsp
0x00000000000f1a45 : mov cl, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0x000000000016fa11 : mov cl, 0xf4 ; call rsp
0x0000000000186d31 : mov cl, 0xf5 ; jmp rdi
0x000000000018af81 : mov cl, 0xf6 ; call qword ptr [rax]
0x000000000018afb1 : mov cl, 0xf6 ; call qword ptr [rbx]
0x000000000016d255 : mov cl, 0xfc ; jmp rax
0x000000000004bf4c : mov cl, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8ee9
0x000000000014bee2 : mov cl, byte ptr [rax + 0x25] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000002b23f : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000003799 : mov cl, byte ptr [rbp + 2] ; ret
0x00000000000846c5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000008cfd3 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x0000000000041b83 : mov cl, byte ptr [rcx + rax - 0x2f] ; jmp rcx
0x00000000000ae512 : mov cl, byte ptr [rcx + rax - 0x36] ; jmp rdx
0x000000000007c8e4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000015c352 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000008e200 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009a55b : mov cl, dl ; and cl, 0xf ; je 0x9a587 ; ret
0x0000000000042939 : mov cs, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015c60c : mov cs, edi ; ret 0x8b36
0x00000000000cbfbe : mov cs, word ptr [rax + 0x63] ; ret 0x8b48
0x00000000000cd825 : mov cs, word ptr [rax + 1] ; int1 ; jmp rcx
0x0000000000123cce : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000094390 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000194c04 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000007175e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070ad8 : mov dh, 0 ; pop rbx ; ret
0x000000000006f743 : mov dh, 0 ; ret
0x000000000008ca00 : mov dh, 0x14 ; adc byte ptr [rax + rcx*4 + 0x14], al ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000bedd3 : mov dh, 0x14 ; and al, 0x39 ; ret 0x840f
0x0000000000134461 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000081714 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000031a40 : mov dh, 0x17 ; test dl, dl ; jne 0x31a26 ; ret
0x00000000000b985c : mov dh, 0x17 ; test dl, dl ; jne 0xb983f ; xor eax, eax ; ret
0x00000000000cc007 : mov dh, 0x34 ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000010a0b2 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000c4f06 : mov dh, 0x41 ; cmp eax, esi ; jge 0xc4ee7 ; mov edx, eax ; jmp 0xc4ef0
0x0000000000102284 : mov dh, 0x42 ; add dword ptr [rbp + 0x75020254], ecx ; ret
0x00000000000281a1 : mov dh, 0x42 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000402b3 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000454c4 : mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000014a921 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000014a911 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000014a8e1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000014a901 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000014a8f1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000002592a : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000015b342 : mov dh, 0x4e ; ret 0x474c
0x000000000010222d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000bc14e : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bc141 : mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000065131 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000101755 : mov dh, 0x55 ; add dh, dh ; ret
0x000000000014a925 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000014a915 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000014a8e5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000004f9fd : mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000004f9ca : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000014a8f5 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000cd80d : mov dh, 0x7a ; xor byte ptr [rax + 0x63], cl ; cmp byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x000000000016c408 : mov dh, 0x7c ; cld ; inc dword ptr [rsi + 0x7c] ; cld ; call rsi
0x000000000016c8f4 : mov dh, 0xa4 ; cld ; inc dword ptr [rsi - 0x5c] ; cld ; call rsi
0x000000000007c035 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000010a808 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001151ac : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a38d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011ab28 : mov dh, 0xc0 ; add rsp, 8 ; ret
0x00000000000d09ff : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00000000000a7626 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000b8ad7 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003300d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000647e5 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x0000000000064710 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000abeab : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000dbfe5 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006382d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000000637fa : mov dh, 0xc0 ; neg eax ; ret
0x000000000010f195 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000010b40b : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000b281c : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000033b0a : mov dh, 0xc0 ; ret
0x0000000000099228 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000099250 : mov dh, 0xc2 ; pop rbx ; ret
0x00000000000718c8 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7dee : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000006f713 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000694ae : mov dh, 0xc7 ; ret
0x000000000015c584 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000ab965 : mov dh, 0xc9 ; movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x000000000016cdec : mov dh, 0xcb ; cld ; inc dword ptr [rsi - 0x35] ; cld ; call rsi
0x00000000000ae50d : mov dh, 0xcf ; movsxd r9, dword ptr [rdx + r9*4] ; add rdx, r9 ; jmp rdx
0x00000000000cd820 : mov dh, 0xcf ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x00000000000ae49b : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000008173a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000007dc91 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000146f54 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000000ca903 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x000000000017c609 : mov dh, 0xef ; jmp rsp
0x000000000017f191 : mov dh, 0xf1 ; jmp rsi
0x000000000016eff1 : mov dh, 0xf1 ; jmp rsp
0x000000000009b122 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000018b2b1 : mov dh, 0xf6 ; jmp rbx
0x000000000018b261 : mov dh, 0xf6 ; jmp rdi
0x00000000000314b8 : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x000000000018f389 : mov dh, 0xf7 ; call qword ptr [rdi]
0x0000000000170c75 : mov dh, 1 ; add ah, ch ; ret
0x0000000000071771 : mov dh, 2 ; ret
0x00000000000cc5b6 : mov dh, 4 ; adc byte ptr [rcx], bh ; call 0xffffffffc345db39
0x00000000000c4aac : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000146f51 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000081711 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000007dc94 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000065ef8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000993bc : mov dh, byte ptr [rcx - 0xd] ; ret
0x000000000016e1cd : mov dl, 0 ; add byte ptr [rax + rax*4 - 0x11], bl ; call rsp
0x0000000000003aa4 : mov dl, 0x1e ; ret
0x00000000000b04f3 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x000000000010610d : mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000016c46c : mov dl, 0x7f ; cld ; inc dword ptr [rdx + 0x7f] ; cld ; call rdx
0x000000000016cb90 : mov dl, 0x97 ; cld ; jmp qword ptr [rdx]
0x0000000000177558 : mov dl, 0xa ; ret
0x000000000016d098 : mov dl, 0xbc ; cld ; jmp qword ptr [rdx]
0x000000000016ce90 : mov dl, 0xc7 ; cld ; inc dword ptr [rdx - 0x39] ; cld ; call rdx
0x000000000009aeaa : mov dl, 0xd6 ; or al, byte ptr [rax] ; ret
0x000000000017e3c1 : mov dl, 0xf0 ; jmp rax
0x000000000018b001 : mov dl, 0xf6 ; call qword ptr [rax]
0x000000000018dddd : mov dl, 1 ; add byte ptr [rax - 0x1e], dh ; sti ; jmp qword ptr [rdx]
0x00000000000eac45 : mov dl, 3 ; add al, 0xa ; ret
0x0000000000032895 : mov dl, byte ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x0000000000095063 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000095082 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000950c3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000012b6e0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000096790 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000095040 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000098200 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000160178 : mov ds, word ptr [rsi*8 - 0xae35201] ; call qword ptr [rax]
0x00000000000e7802 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000b8144 : mov dword ptr [0x2d0], eax ; ret
0x00000000000b7500 : mov dword ptr [0x2d4], eax ; call 0x73729
0x00000000000a7a7f : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000074f46 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000109b1e : mov dword ptr [r14], 0 ; ret
0x00000000000df614 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000df60f : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000102295 : mov dword ptr [r8], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x00000000000367b3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000102234 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f4410 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000008e1f6 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000008e1e1 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000020916 : mov dword ptr [r9], eax ; jmp 0x208e1
0x00000000000e4851 : mov dword ptr [rax + 0x10], ecx ; ret
0x0000000000069ce9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000069d29 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006a249 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000006ec49 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000c1d8b : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000c1dbd : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000df615 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000000df610 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000069ced : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000006a2e7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000006394b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000014c567 : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x00000000000729ca : mov dword ptr [rax + 8], 0 ; ret
0x00000000000e4819 : mov dword ptr [rax + 8], ecx ; ret
0x0000000000081d5e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000004028b : mov dword ptr [rax - 0x7d], ecx ; ret
0x0000000000055092 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x00000000000c1cba : mov dword ptr [rax - 4], edx ; cmp esi, dword ptr [rdi + 4] ; jl 0xc1cb9 ; ret
0x0000000000115c8d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000e0188 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000000e4458 : mov dword ptr [rax], 0x16 ; ret
0x00000000000a7b78 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000031c80 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x0000000000076f56 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x0000000000077438 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000016e4dd : mov dword ptr [rax], 0xefd6ac00 ; jmp rsp
0x000000000017f2c5 : mov dword ptr [rax], 0xf1bc7800 ; jmp qword ptr [rdi]
0x000000000017f2dd : mov dword ptr [rax], 0xf1bc9000 ; call qword ptr [rsi]
0x000000000017f2f5 : mov dword ptr [rax], 0xf1bd9800 ; call qword ptr [rsi]
0x00000000000dfcd4 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000b3380 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000020f48 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x000000000009a213 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d0964 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000102296 : mov dword ptr [rax], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x000000000006a3d5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006868a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000d5479 : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x0000000000078526 : mov dword ptr [rax], edi ; ret
0x00000000000e76b1 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009af61 : mov dword ptr [rax], edx ; jne 0x9af5d ; ret
0x000000000010203a : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000367b4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000d09ba : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000102235 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002bfc3 : mov dword ptr [rax], edx ; ret
0x000000000006a871 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000005a7a7 : mov dword ptr [rax], esi ; jmp 0x5a771
0x00000000000d0963 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000d9201 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004ac29 : mov dword ptr [rbp - 0x48], edx ; shl rdx, 3 ; call 0x86ed9
0x00000000000627ab : mov dword ptr [rbp - 0x498], eax ; jmp 0x6277d
0x0000000000046dae : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000060024 : mov dword ptr [rbp - 0x548], ebx ; jmp 0x5c2b3
0x000000000005e057 : mov dword ptr [rbp - 0x558], ecx ; call 0x6a308
0x0000000000022053 : mov dword ptr [rbp - 0x58], edi ; call 0x7e295
0x000000000005eb81 : mov dword ptr [rbp - 0x5f8], edx ; call 0xeae38
0x0000000000022043 : mov dword ptr [rbp - 0x68], esi ; call 0x7e295
0x00000000000f2b4d : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000f33a3 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r14 ; call rax
0x00000000000f3683 : mov dword ptr [rbp - 0x80], eax ; call r9
0x00000000000f2b53 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000f2cfa : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f34f8 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f2c9c : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000f2c22 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000004b877 : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x000000000007af67 : mov dword ptr [rbp], eax ; je 0x7b041 ; call rax
0x000000000011b28d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ee51 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010156f : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a7e56 : mov dword ptr [rbp], ebx ; call r12
0x00000000000f7ca5 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106bf8 : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000360ea : mov dword ptr [rbp], edx ; call rax
0x0000000000068a42 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000068a41 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000293d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000006fc37 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000b34f9 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor eax, eax ; jmp 0xb34ce
0x000000000011c8a6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000070459 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000eec84 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115905 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000011c85e : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000eecb4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e385 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000722e3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000115959 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce96b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000a94fa : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ec75 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000c1f38 : mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; ret
0x000000000007be69 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x00000000000c1f37 : mov dword ptr [rbx + 0x30], r8d ; xor eax, eax ; pop rbx ; ret
0x000000000007be68 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000c1e46 : mov dword ptr [rbx + 0x34], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003300f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000df231 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000007bf1e : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x000000000007234b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000070d62 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000069d6e : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006fb07 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000002f343 : mov dword ptr [rbx + 5], edi ; add byte ptr [rcx - 0x77], cl ; ret 0x14d
0x00000000000c06cc : mov dword ptr [rbx + 8], eax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xc069f
0x00000000000293e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000eec54 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000339f8 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000724d7 : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007c1ad : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104c61 : mov dword ptr [rbx], 0 ; jmp 0x104c33
0x00000000000e4442 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000115b23 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000072536 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000011ca61 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011278f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000e43e2 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000111fc7 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000111cb6 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000dd0b7 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000066116 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101921 : mov dword ptr [rbx], ecx ; add rsp, 0x10 ; ret
0x000000000006a24c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000007be66 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000003368e : mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x00000000000722e6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000007bf1b : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000010dbb4 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00000000000e4815 : mov dword ptr [rcx + 0x10], edx ; mov qword ptr [rax + 8], r9 ; ret
0x0000000000110438 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000110395 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000110465 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000001417e2 : mov dword ptr [rcx + 3], edx ; ret
0x000000000009a690 : mov dword ptr [rcx + 4], eax ; jne 0x9a65e ; ret
0x00000000001417d3 : mov dword ptr [rcx + 4], edx ; ret
0x000000000009af30 : mov dword ptr [rcx + 4], esi ; jne 0x9af41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009a68f : mov dword ptr [rcx + 4], r8d ; jne 0x9a65f ; ret
0x0000000000141844 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000141854 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000141823 : mov dword ptr [rcx + 7], edx ; ret
0x00000000000e484d : mov dword ptr [rcx + 8], edx ; mov qword ptr [rax + 0x10], r9 ; ret
0x0000000000141814 : mov dword ptr [rcx + 8], edx ; ret
0x000000000009af35 : mov dword ptr [rcx + 8], esi ; ret
0x000000000008cf86 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00000000000e942f : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x000000000008e1f7 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000008e1e2 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000008e1d1 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000009a860 : mov dword ptr [rcx], 0 ; jne 0x9a861 ; ret
0x0000000000030955 : mov dword ptr [rcx], 0x4d934e8 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000308c5 : mov dword ptr [rcx], 0x4d9c4e8 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000056386 : mov dword ptr [rcx], 0x9f0fdb85 ; ret 0xd329
0x00000000000b9b24 : mov dword ptr [rcx], 0xdf75d284 ; ret
0x00000000000b984d : mov dword ptr [rcx], 0xf7bfa80 ; xchg eax, esp ; ret 0xb60f
0x00000000000c2112 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000020917 : mov dword ptr [rcx], eax ; jmp 0x208e0
0x000000000009a896 : mov dword ptr [rcx], eax ; jne 0x9a885 ; ret
0x000000000003354a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000069327 : mov dword ptr [rcx], eax ; ret
0x000000000006ce34 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000069181 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000102279 : mov dword ptr [rcx], edi ; ret
0x0000000000081287 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x00000000001417a1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001417c0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000141801 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001417e0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000141821 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000141831 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000141841 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000141851 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000141861 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000141871 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000007494c : mov dword ptr [rcx], edx ; mov rax, rdx ; ret
0x00000000001417d0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000141811 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000102238 : mov dword ptr [rcx], edx ; ret
0x000000000009a895 : mov dword ptr [rcx], r8d ; jne 0x9a886 ; ret
0x00000000000d9d9b : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000d9dd2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x0000000000095afd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009694d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000095b3b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009698b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000095bbd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000096a0d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000944cb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009519e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009454d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000e47ca : mov dword ptr [rdi + 0x10], ecx ; mov qword ptr [rdx], rdi ; ret
0x000000000004286f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000983bd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000983fb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009847d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000095220 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x0000000000094590 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000945b0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000094571 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000d9dc0 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000095c23 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000096a73 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000094593 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000984e3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000001155f0 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x0000000000072273 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000006f027 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000095c05 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000096a55 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000095c43 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000096a93 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000094575 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000984c5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098503 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000115682 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x00000000001155b6 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000010b1be : mov dword ptr [rdi + 0x20], ecx ; ret
0x0000000000110c4c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000115731 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000c171a : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000c1719 : mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000c171e : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c171d : mov dword ptr [rdi + 0x30], r8d ; ret
0x0000000000087731 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000110c04 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000207ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x00000000000722a3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073e2d : mov dword ptr [rdi + 0x58], ecx ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000033c29 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000d94ce : mov dword ptr [rdi + 0x80], edx ; ret
0x000000000010170f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x0000000000095b7d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000969cd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000944ed : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000009843d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000095b1b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009696b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000095b9d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000969ed : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000944ab : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000983db : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009845d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001342a5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001340e8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134388 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000134235 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134078 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000036e73 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000959e7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000096817 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001341c5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134008 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000943d7 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000098287 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000008d093 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000008cff3 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x0000000000073e1a : mov dword ptr [rdi + 4], eax ; ret
0x0000000000036e6d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000008d0e3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000967f9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000133f98 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000008cfe3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000943c9 : mov dword ptr [rdi + 4], edx ; ret
0x0000000000098269 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000d9520 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000008d092 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000008cff2 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x0000000000095a7b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000968bb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000133f28 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009443b : mov dword ptr [rdi + 5], edx ; ret
0x000000000009832b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000095a9b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000968db : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000133eb8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009444b : mov dword ptr [rdi + 6], edx ; ret
0x000000000009834b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000095a39 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000096879 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000095abb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000968fb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000133e48 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000094419 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000982e9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009836b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e1e48 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000010b97b : mov dword ptr [rdi + 8], eax ; pop rbx ; ret
0x0000000000072277 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000427f4 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000009685b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000095a59 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000096899 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000095a1b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000042064 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000036794 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000006f73f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x0000000000036785 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000982cb : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000098309 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000df3a2 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000102388 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x0000000000102383 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x0000000000126663 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x0000000000081d65 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000081d6e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000012b3a5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012b3e3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004275f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000012b72c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001338f8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012b90c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133878 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bafc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001337f8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bccd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133769 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012becd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001336d9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c0cd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133649 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000095360 : mov dword ptr [rdi - 1], edx ; ret
0x000000000012baad : mov dword ptr [rdi - 2], ecx ; ret
0x000000000012b8c5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000012baa9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000008cf3f : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000012be89 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000012b55f : mov dword ptr [rdi - 4], edx ; ret
0x000000000008cf9b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000012be86 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008cf25 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000012c086 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008cfb9 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000012c286 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000426ea : mov dword ptr [rdi - 8], ecx ; ret
0x000000000012b3e7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000012b55c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012b658 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012b5a4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133978 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000036290 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000c30ff : mov dword ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e1e35 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000043f0b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00000000000426e4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000427ee : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000036798 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000004e086 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008cf62 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000008d0c0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000959b5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000095a07 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095994 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000094394 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000967b7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000095067 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000008d040 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000967e5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000095085 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000096837 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000950c7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000959e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000096815 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000943d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000008cff0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x0000000000095a37 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000096877 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000094417 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000095a57 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000096897 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000094427 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000081d63 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000098c37 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000094438 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000094448 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000094458 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000081d6b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000008d030 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000008cfe0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000943c6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000094408 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000098c43 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000874f7 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x000000000001f9a3 : mov dword ptr [rdi], ecx ; ret
0x0000000000095984 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000967a4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000959a2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000967d2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000959f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096824 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095380 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000953c1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000953e1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000953f1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000095401 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000095411 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000010b978 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000095390 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000953d1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000032bb6 : mov dword ptr [rdi], edx ; ret
0x0000000000098214 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000098242 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x0000000000098294 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000032ea9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x000000000008d0a1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008d021 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000008e1df : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000012664b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000004394d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008e1ce : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000012662e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000008d011 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000008e1f3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000126660 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000043973 : mov dword ptr [rdi], esi ; ret
0x00000000000d9501 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x0000000000110d0c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000065ef7 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000006fc95 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x00000000000877bf : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006917e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000069324 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000010a960 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000010a93c : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010a940 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000010dc50 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000110bec : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00000000000a7a80 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000143b67 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000009115c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000143b49 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009113e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000143bfb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000143b79 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000013f829 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000143c1b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000143b99 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000013f839 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000143bb9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000143c3b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000911e0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000638f4 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000143bd9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000143acb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000911c2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000c2090 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010dbd1 : mov dword ptr [rdx + 8], edi ; ret
0x0000000000066744 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x0000000000143af4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000143b22 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000143a74 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000070231 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003322a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004394f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000b4f2d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000070b30 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000910d9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000b4712 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002c78d : mov dword ptr [rdx], eax ; ret
0x000000000006daaf : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000f2463 : mov dword ptr [rdx], ebp ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000008076e : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x0000000000099455 : mov dword ptr [rdx], ecx ; jne 0x9944d ; ret
0x000000000006a026 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000d06b7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000008d365 : mov dword ptr [rdx], ecx ; ret
0x00000000000ce0cb : mov dword ptr [rdx], edi ; ret
0x00000000000b4d83 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000b4e4d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000010dbce : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000879e7 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4f2c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000014bd6f : mov dword ptr [rip + 0x2519cb], ebx ; jne 0x14bd61 ; pop rbx ; ret
0x00000000000f46e8 : mov dword ptr [rip + 0x2aaa92], eax ; pop rbp ; ret
0x00000000000e9920 : mov dword ptr [rip + 0x2b191a], ebx ; pop rbx ; ret
0x00000000000e331a : mov dword ptr [rip + 0x2b7ef0], edi ; ret
0x00000000000e1095 : mov dword ptr [rip + 0x2bb705], eax ; mov rdx, rax ; jmp 0xe1037
0x0000000000033f0b : mov dword ptr [rip + 0x36717b], eax ; mov eax, edx ; ret
0x0000000000033efc : mov dword ptr [rip + 0x367186], edx ; ret
0x000000000001f908 : mov dword ptr [rip + 0x380a3a], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000692a3 : mov dword ptr [rip - 0x3d770000], ecx ; jmp 0x6923f
0x00000000000cec84 : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000036d96 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x00000000000366fe : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000c2064 : mov dword ptr [rsi + 0x18], edx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x0000000000036702 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x000000000006f716 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00000000000c2067 : mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000df217 : mov dword ptr [rsi + 0x48], eax ; ret
0x000000000006a795 : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000de5e6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000d943f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x0000000000036de0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x0000000000036e27 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x000000000009a6d8 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000cec67 : mov dword ptr [rsi + 8], 0 ; ret
0x0000000000109b01 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000cec80 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000b89eb : mov dword ptr [rsi + rbp], esp ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000a7691 : mov dword ptr [rsi + rcx], edx ; jne 0xa768e ; ret
0x0000000000098c46 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000098c39 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000109b1f : mov dword ptr [rsi], 0 ; ret
0x000000000008cf23 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x0000000000109bb0 : mov dword ptr [rsi], 0xa ; ret
0x0000000000109ba0 : mov dword ptr [rsi], 0xb ; ret
0x0000000000109bd0 : mov dword ptr [rsi], 0xc ; ret
0x0000000000109bc0 : mov dword ptr [rsi], 8 ; ret
0x00000000001186d0 : mov dword ptr [rsi], eax ; mov eax, 0xffffffff ; ret
0x00000000001039ff : mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x00000000000741f4 : mov dword ptr [rsi], eax ; mov rax, r10 ; ret
0x000000000006f02b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000101713 : mov dword ptr [rsi], edi ; ret
0x00000000000f7d51 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x00000000000367b6 : mov dword ptr [rsi], edx ; ret
0x0000000000032d15 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000034dc9 : mov dword ptr [rsp + 0x10], ecx ; call r14
0x0000000000076697 : mov dword ptr [rsp + 0x10], edx ; call rdi
0x00000000000765d1 : mov dword ptr [rsp + 0x10], edx ; xor edi, edi ; call qword ptr [rax]
0x0000000000074f47 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x0000000000076692 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], rdx ; call rdi
0x00000000000c5e20 : mov dword ptr [rsp + 0x20], ebp ; call 0xc20a6
0x00000000000762c2 : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00000000000c5e64 : mov dword ptr [rsp + 0x20], esi ; call 0xc20a6
0x0000000000076626 : mov dword ptr [rsp + 0x28], edx ; call rax
0x00000000000cb02d : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00000000000c7a85 : mov dword ptr [rsp + 0x7c], ebx ; mov r10, rax ; jmp 0xc7abe
0x0000000000109457 : mov dword ptr [rsp + 0xc0], eax ; call 0x115729
0x000000000007bed0 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000115a2c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00000000000f64a2 : mov dword ptr [rsp + 8], ecx ; call 0x72726
0x0000000000032de3 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000043ae6 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000032f85 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000007ae2d : mov dword ptr [rsp], eax ; je 0x7aef9 ; call rax
0x000000000007b11a : mov dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001128fa : mov dword ptr [rsp], ecx ; pop rbp ; pop r12 ; ret
0x00000000000b8143 : mov dword ptr fs:[0x2d0], eax ; ret
0x0000000000020915 : mov dword ptr fs:[r9], eax ; jmp 0x208e2
0x00000000000e0187 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000e4457 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000a7b77 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000077437 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000017f2c4 : mov dword ptr fs:[rax], 0xf1bc7800 ; jmp qword ptr [rdi]
0x00000000000b337f : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000020f47 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000d09b9 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x000000000005a7a6 : mov dword ptr fs:[rax], esi ; jmp 0x5a772
0x00000000000d0962 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000100430 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033549 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000066743 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000070230 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000033229 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000b4d82 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000b4e4c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000012664a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012b8c0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000094380 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000de8c6 : mov eax, 0 ; cmova eax, edx ; ret
0x00000000000e8e66 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00000000000c1b6c : mov eax, 0 ; cmove eax, esi ; ret
0x00000000001082a4 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x0000000000099302 : mov eax, 0x10 ; pop rbx ; ret
0x00000000000dfbad : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000d9db3 : mov eax, 0x16 ; jbe 0xd9dc8 ; ret
0x000000000007abc4 : mov eax, 0x16 ; je 0x7abd7 ; ret
0x00000000000d94f5 : mov eax, 0x16 ; je 0xd9508 ; ret
0x000000000007ac18 : mov eax, 0x16 ; ret
0x00000000000d9de8 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00000000000b89fa : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000992fb : mov eax, 0x20 ; pop rbx ; ret
0x00000000000b89df : mov eax, 0x20 ; ret
0x000000000002c4e7 : mov eax, 0x200 ; ret
0x0000000000007470 : mov eax, 0x21000016 ; add byte ptr [rax], ah ; add al, al ; ret
0x00000000000992f4 : mov eax, 0x30 ; pop rbx ; ret
0x000000000004ac2b : mov eax, 0x3e2c148 ; call 0x86ed7
0x00000000000992ed : mov eax, 0x40 ; pop rbx ; ret
0x00000000000b8a25 : mov eax, 0x40 ; ret
0x000000000015a49b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008224a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000000da3b0 : mov eax, 0x5f ; syscall ; ret
0x00000000000992e6 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000b8160 : mov eax, 0x66 ; syscall ; ret
0x00000000000b8180 : mov eax, 0x68 ; syscall ; ret
0x00000000000b8170 : mov eax, 0x6b ; syscall ; ret
0x00000000000b8190 : mov eax, 0x6c ; syscall ; ret
0x00000000000b8150 : mov eax, 0x6e ; syscall ; ret
0x00000000000b83a0 : mov eax, 0x6f ; syscall ; ret
0x00000000000b88f9 : mov eax, 0x7d00 ; ret
0x00000000000b8928 : mov eax, 0x7e ; ret
0x00000000000b88ca : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000b887b : mov eax, 0x7f ; ret
0x00000000000992df : mov eax, 0x80 ; pop rbx ; ret
0x000000000005ffbb : mov eax, 0x89fffffa ; ret
0x000000000006c2c1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fda47 : mov eax, 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000003184 : mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000010dcdf : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c1df2 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000c2bed : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1f50 : mov eax, 0xc ; pop rbx ; ret
0x00000000000c1e7a : mov eax, 0xc ; ret
0x00000000000787b6 : mov eax, 0xc031ffff ; pop rbx ; ret
0x00000000000a83f0 : mov eax, 0xc9 ; syscall ; ret
0x00000000000f7d40 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000000f7cd9 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00000000000f3dd2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000112926 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015e114 : mov eax, 0xe0ffefee ; imul edi ; jmp rax
0x00000000000e7be0 : mov eax, 0xe4 ; syscall ; ret
0x000000000005ff03 : mov eax, 0xe9fffffa ; lahf ; ret
0x00000000000d3e5d : mov eax, 0xf ; je 0xd3eb8 ; ret
0x00000000000329a4 : mov eax, 0xf00126b ; push rsp ; ret
0x00000000000b891f : mov eax, 0xfa ; ret
0x00000000000b8940 : mov eax, 0xfc17 ; ret
0x00000000000b88ac : mov eax, 0xfde8 ; jne 0xb8883 ; ret
0x00000000000b8930 : mov eax, 0xfffa ; ret
0x00000000000b6f1c : mov eax, 0xfffffff2 ; ret
0x0000000000101860 : mov eax, 0xffffffff ; add rsp, 0x10 ; ret
0x00000000000d9fea : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x000000000007dfa2 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x000000000006a941 : mov eax, 0xffffffff ; ja 0x6a958 ; ret
0x0000000000068c41 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000003587e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006850c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000031cee : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000028ef0 : mov eax, 0xffffffff ; ret
0x00000000000e11fe : mov eax, 1 ; add rsp, 8 ; ret
0x000000000014b420 : mov eax, 1 ; jg 0x14b439 ; neg eax ; ret
0x000000000009a2a0 : mov eax, 1 ; jg 0x9a2b2 ; neg eax ; ret
0x0000000000149376 : mov eax, 1 ; jl 0x149389 ; neg eax ; ret
0x00000000000b8b12 : mov eax, 1 ; js 0xb8b28 ; ret
0x000000000010b1b8 : mov eax, 1 ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000004396d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000ca5c6 : mov eax, 1 ; mov rdx, r8 ; jmp 0xca5e1
0x0000000000068c2d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x0000000000072912 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000022974 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000006a1ff : mov eax, 1 ; pop rbx ; ret
0x0000000000033df7 : mov eax, 1 ; ret
0x000000000009a5c1 : mov eax, 2 ; ret
0x00000000000f4406 : mov eax, 3 ; cmovne eax, edx ; ret
0x000000000009a5d1 : mov eax, 3 ; ret
0x00000000000e09a2 : mov eax, 3 ; syscall ; mov eax, edx ; ret
0x0000000000100753 : mov eax, 3 ; syscall ; ret
0x000000000009a5e1 : mov eax, 4 ; ret
0x00000000000d60bc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000e67bf : mov eax, 5 ; pop rbx ; pop rbp ; ret
0x000000000009a5f1 : mov eax, 5 ; ret
0x000000000009a601 : mov eax, 6 ; ret
0x00000000000f239c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000009a611 : mov eax, 7 ; ret
0x00000000000992d8 : mov eax, 8 ; pop rbx ; ret
0x00000000000d9317 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f367f : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000031c6a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e6651 : mov eax, dword ptr [rax + 0x108] ; ret
0x000000000011ca21 : mov eax, dword ptr [rax + 0x10] ; jmp rax
0x000000000011c7cf : mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00000000000e9d00 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000006a05c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000e9d3a : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007237c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000105847 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x105857 ; ret
0x00000000000e0258 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xe026b ; ret
0x000000000006a499 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006a39a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000f36e9 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000ea407 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e639c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000070627 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00000000001102e4 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000067a93 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000067c81 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000006c744 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000110b84 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000036216 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002b55e : mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000114a25 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000000e662a : mov eax, dword ptr [rax + 8] ; ret
0x000000000007c12b : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x7c129 ; ret
0x0000000000029b65 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x29b77 ; call rax
0x000000000002c4e5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002c6a7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c00f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002c058 : mov eax, dword ptr [rax + rdx] ; ret
0x00000000000ead94 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x0000000000114a1a : mov eax, dword ptr [rax] ; jmp rax
0x000000000002b55c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002c4bc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000036213 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001059e9 : mov eax, dword ptr [rax] ; ret
0x0000000000075037 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x75047 ; call rax
0x0000000000079796 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x797a6 ; call rax
0x00000000000e4acf : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000021f91 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x000000000006ec71 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000f2b50 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000001fbe3 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a8e1 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000011275a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x112770 ; pop rbx ; ret
0x0000000000091159 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000013f826 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000013f836 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000911dd : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000911fd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000ef018 : mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x000000000011f7da : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001210b2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000031c6b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000143b20 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000010dc60 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000091105 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000143a71 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000013f741 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000143af1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000910d6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000006a7ef : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000073400 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000073428 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000014c54c : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x14c560 ; pop rbx ; ret
0x00000000000f3ea0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0xf3eb8 ; ret
0x00000000000b752d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xb7542 ; call rax
0x0000000000115923 : mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000115551 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000109afe : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000b38a1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000014b9c8 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x14b9df ; call rax
0x000000000009a220 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0x9a2a8 ; ret
0x000000000009a235 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0x9a2a8 ; ret
0x0000000000109b57 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001158a0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000006ecb1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000009a240 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9a2a8 ; ret
0x000000000009a25b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0x9a2a8 ; ret
0x000000000009a270 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0x9a2a8 ; ret
0x000000000009a285 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0x9a2a8 ; ret
0x000000000009a290 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9a2a8 ; ret
0x0000000000109b8f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006eba1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000006c741 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000c4ae0 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000736a1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000006d2a8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x6d2c0 ; ret
0x00000000000d9510 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000df350 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000010a811 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000115349 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000115359 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000114a21 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000114a16 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000112f39 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000114b01 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000001087e7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000009ac4d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0x9ac29 ; ret
0x000000000006ec10 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000006ebe0 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000110c70 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000733ef : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000f3eb5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000b39b0 : mov eax, dword ptr [rdi] ; ret
0x000000000006f6e0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000006f6f0 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x000000000010e8f4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10e906 ; ret
0x000000000010e8f3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10e907 ; ret
0x00000000001135e4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1135f6 ; ret
0x00000000001135e3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1135f7 ; ret
0x000000000009ad08 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x9ad08 ; xor eax, eax ; ret
0x00000000000d3ee1 : mov eax, dword ptr [rdx + 8] ; ret
0x000000000002c473 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000993b7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x993a9 ; ret
0x00000000000846c6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000109fe8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000002b51d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000006bf40 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ce0c8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000006a3d7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006868c : mov eax, dword ptr [rdx] ; ret
0x00000000000733e1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x733e0 ; ret
0x000000000011a244 : mov eax, dword ptr [rip + 0x2821c6] ; call qword ptr [rax]
0x0000000000119c41 : mov eax, dword ptr [rip + 0x2827c9] ; call qword ptr [rax]
0x00000000000ff4f1 : mov eax, dword ptr [rip + 0x29d381] ; ret
0x00000000000ea401 : mov eax, dword ptr [rip + 0x2b0a69] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007851f : mov eax, dword ptr [rip + 0x3229bb] ; mov qword ptr [rax], rdi ; ret
0x00000000000766b4 : mov eax, dword ptr [rip + 0x324716] ; xor edi, edi ; call qword ptr [rax]
0x00000000000764df : mov eax, dword ptr [rip + 0x3248eb] ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000073681 : mov eax, dword ptr [rip + 0x328e99] ; ret
0x0000000000033ed0 : mov eax, dword ptr [rip + 0x3671b2] ; ret
0x0000000000033ec0 : mov eax, dword ptr [rip + 0x3671c6] ; ret
0x000000000002bfbc : mov eax, dword ptr [rip + 0x36ee2e] ; mov qword ptr [rax], rdx ; ret
0x0000000000028c41 : mov eax, dword ptr [rip + 0x373ca9] ; ret
0x0000000000021711 : mov eax, dword ptr [rip + 0x37ec39] ; ret
0x0000000000021701 : mov eax, dword ptr [rip + 0x37ec59] ; ret
0x00000000000d0afe : mov eax, dword ptr [rsi + 0x14] ; ret
0x00000000000f3680 : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x000000000002c6a1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c6b1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000c1db9 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x000000000002b539 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000ee0cb : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b4264 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000011c966 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x000000000002072a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000023d12 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x00000000000245bd : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000033609 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d9fc8 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000011c91d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000a64e4 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002cbc2 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000b72fa : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xb730e ; call rax
0x00000000000e0cf0 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000b71e0 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ea463 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000ea4c4 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000102124 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000020dd1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000004c280 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000690a0 : mov eax, eax ; pop rbx ; ret
0x0000000000049c1a : mov eax, eax ; ret
0x0000000000070a3a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000111b67 : mov eax, ebp ; mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000669ab : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000671c9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000066485 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000065663 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049842 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000058862 : mov eax, ebp ; test edx, edx ; je 0x5882f ; jmp 0x58811
0x00000000000421a3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000070fcd : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000878d7 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b40d4 : mov eax, ebx ; call rax
0x0000000000088909 : mov eax, ebx ; jmp 0x88807
0x00000000000e61ff : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000106af5 : mov eax, ebx ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000029536 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000336f7 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003061b : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003659f : mov eax, ebx ; pop rbx ; ret
0x00000000000e3e6a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000042067 : mov eax, ecx ; adc eax, eax ; ret
0x00000000000440d2 : mov eax, ecx ; add rsp, 0x28 ; ret
0x000000000003617c : mov eax, ecx ; or rax, rdx ; ret
0x000000000011994d : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002cc90 : mov eax, ecx ; pop rbp ; pop r12 ; ret
0x0000000000054904 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007aec5 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007affa : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000031c87 : mov eax, ecx ; ret
0x00000000000f5011 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002c510 : mov eax, edi ; and eax, 0x7f ; ret
0x00000000000f7da6 : mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f7d80 : mov eax, edi ; bswap eax ; ret
0x0000000000037916 : mov eax, edi ; cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000036191 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000009b01c : mov eax, edi ; jne 0x9b032 ; ret
0x00000000000e1edc : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000008d057 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000020f3b : mov eax, edi ; neg eax ; ret
0x000000000008db55 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008997a : mov eax, edi ; pop rbx ; ret
0x0000000000020f4e : mov eax, edi ; ret
0x00000000000f7d90 : mov eax, edi ; ror ax, 8 ; ret
0x0000000000036122 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f7aaa : mov eax, edi ; sar rax, 6 ; ret
0x00000000000f7e26 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000a7c08 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000e0bd7 : mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000063260 : mov eax, edx ; add rsp, 0x98 ; ret
0x00000000000785fd : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000041933 : mov eax, edx ; add rsp, 8 ; ret
0x00000000000eefe5 : mov eax, edx ; cmove eax, ecx ; ret
0x0000000000089c96 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000d0a3d : mov eax, edx ; je 0xd0a96 ; ret
0x00000000000b811b : mov eax, edx ; jle 0xb812d ; ret
0x0000000000102298 : mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x0000000000102276 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000b4b8f : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ce875 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004de9b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000b3543 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078ae2 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006658f : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000042d75 : mov eax, edx ; pop rbx ; ret
0x000000000002156d : mov eax, edx ; ret
0x0000000000032ce1 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000c4b83 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00000000000b4f2f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010aa71 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b4715 : mov eax, esi ; add rsp, 8 ; ret
0x0000000000043eba : mov eax, esi ; cmovae rax, rdi ; ret
0x00000000000330c6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000f58ef : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000780d9 : mov eax, esi ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000000f55b1 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035d64 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000063b13 : mov eax, esi ; pop rbx ; ret
0x0000000000043ff4 : mov eax, esi ; ret
0x000000000014b5eb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000007becb : mov eax, esi ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000657f6 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002ceca : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006987b : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007303c : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102123 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000004c27f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006909f : mov eax, r8d ; pop rbx ; ret
0x0000000000049c19 : mov eax, r8d ; ret
0x0000000000119978 : mov eax, r9d ; ret
0x00000000000e1109 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000008d731 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008d741 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000008d721 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000cebdf : mov ebp, 0x48fffff5 ; add esp, 0x18 ; ret
0x00000000000e2415 : mov ebp, 0x5d5b002b ; pop r12 ; pop r13 ; ret
0x0000000000182fc7 : mov ebp, 0x80ec30a ; or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000016d215 : mov ebp, 0xbc70fffc ; cld ; jmp rax
0x000000000016d095 : mov ebp, 0xbcb2fffc ; cld ; jmp qword ptr [rdx]
0x0000000000154724 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x000000000015905d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000008d7a1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008d781 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008d761 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000008d852 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000007ffc8 : mov ebp, 0xf80148c0 ; ret
0x000000000008024c : mov ebp, 0xf80148c6 ; ret
0x000000000015b0c6 : mov ebp, 0xfb67d10d ; ret
0x0000000000047386 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000047916 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000004f6ef : mov ebp, 0xfffffb58 ; call rax
0x00000000000ba1b3 : mov ebp, 0xfffffbd8 ; call r15
0x000000000010fd51 : mov ebp, 0xffffff1c ; push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x2a
0x000000000015ecac : mov ebp, dword ptr [rbx - 0x231f000f] ; int1 ; jmp qword ptr [rax]
0x0000000000001bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000c35ec : mov ebp, eax ; call 0x1f88c
0x00000000000e4677 : mov ebp, eax ; call rax
0x0000000000112ae9 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x112afd
0x00000000000e4acc : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000330cc : mov ebp, ecx ; jmp rdx
0x00000000000747dd : mov ebp, edx ; call qword ptr [r14]
0x00000000001603e1 : mov ebp, esi ; call qword ptr [rax]
0x00000000001603a1 : mov ebp, esi ; call rax
0x00000000001603b1 : mov ebp, esi ; inc dword ptr [rax] ; mov ebp, esi ; jmp rax
0x00000000001603b5 : mov ebp, esi ; jmp rax
0x00000000000f45d4 : mov ebp, esp ; pop rbp ; ret
0x0000000000002d12 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x000000000016bcb4 : mov ebx, 0x3bfffdc2 ; ret
0x0000000000078521 : mov ebx, 0x48003229 ; mov dword ptr [rax], edi ; ret
0x000000000016fa61 : mov ebx, 0x5244fff4 ; add dword ptr [rax], eax ; cld ; ret 0xfff4
0x0000000000108df0 : mov ebx, 0x8d4c0000 ; and al, 0x18 ; call qword ptr [rax]
0x0000000000003671 : mov ebx, 0x952a6c41 ; ret
0x00000000000c0883 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000f3e04 : mov ebx, 0xafb8341 ; je 0xf3e13 ; ret
0x000000000016d1dd : mov ebx, 0xbb80fffc ; cld ; jmp qword ptr [rax]
0x000000000016d19d : mov ebx, 0xbb8afffc ; cld ; push qword ptr [rax] ; ret
0x000000000015905b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000016d121 : mov ebx, 0xc344fffc ; cld ; inc esp ; ret 0xfffc
0x000000000016d0e1 : mov ebx, 0xc34efffc ; cld ; dec esi ; ret 0xfffc
0x000000000016d061 : mov ebx, 0xc362fffc ; cld ; jmp rdx
0x000000000016cfe1 : mov ebx, 0xc390fffc ; cld ; call qword ptr [rax]
0x0000000000160590 : mov ebx, 0xc7fff590 ; nop ; cmc ; call rcx
0x000000000010db36 : mov ebx, 0xc8 ; call rax
0x00000000000f40f2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000005ffbf : mov ebx, eax ; jmp 0x5c2af
0x000000000010a41b : mov ebx, eax ; jne 0x10a3b9 ; xor eax, eax ; pop rbx ; ret
0x0000000000103e8f : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00000000000df9a7 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c0031 : mov ebx, eax ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000016bb8d : mov ebx, edi ; jmp rax
0x000000000002ad46 : mov ebx, edi ; test rax, rax ; je 0x2ad56 ; call rax
0x00000000000ee00a : mov ebx, edx ; jmp 0xedf50
0x00000000000bffff : mov ebx, edx ; mov rdi, rbp ; mov rsi, rbx ; call r12
0x00000000001715e0 : mov ebx, fs ; clc ; call rsp
0x00000000000fe12a : mov ecx, 0x1002a15 ; pop rbx ; ret
0x0000000000179d05 : mov ecx, 0x41380e0a ; ret
0x000000000015f9c4 : mov ecx, 0x6dfff4c2 ; ret 0xfff4
0x00000000000ca953 : mov ecx, 0x83000005 ; ret 0x3902
0x00000000000e73d3 : mov ecx, 0x89fffa6c ; ret 0xe8c1
0x0000000000159059 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000029eb1 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x29ec3 ; call rcx
0x0000000000110f03 : mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x0000000000107df7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x000000000008e1dc : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000eedf2 : mov ecx, dword ptr [rcx] ; test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x0000000000115690 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x1156a9 ; xor eax, eax ; ret
0x00000000001156d0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x1156e9 ; xor eax, eax ; ret
0x0000000000041aa6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x0000000000129b0e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000006c71b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000000846c3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000009ac39 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0x9ac37 ; ret
0x0000000000041e26 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012be83 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c083 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c283 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000943b0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000943f1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000001342a3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134233 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001341c3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001340e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134075 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134005 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133f95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133f25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133eb5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133e45 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134385 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000094391 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000010e025 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x000000000010de2d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000010977d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000ca5c4 : mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xca5e3
0x000000000008d374 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000109b6c : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000008d386 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000006ca61 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000009bc8a : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000002a7d1 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000008d06e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009bf65 : mov ecx, edi ; call rbx
0x000000000009d212 : mov ecx, edi ; setne dl ; jmp 0x9d22b
0x000000000009f7e2 : mov ecx, edi ; setne dl ; jmp 0x9f7fb
0x00000000000a1c12 : mov ecx, edi ; setne dl ; jmp 0xa1c2b
0x00000000000ea539 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000bf0d1 : mov ecx, edi ; xor eax, eax ; mov rdx, r8 ; jmp 0xbf0fc
0x0000000000126761 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000126764 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000106be3 : mov ecx, edx ; xor edx, edx ; call rax
0x00000000000728b7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000021523 : mov ecx, esi ; call rbx
0x0000000000106af8 : mov ecx, esi ; mov rdi, r13 ; call r12
0x00000000000ef894 : mov edi, 0x2000004 ; call rax
0x00000000000e6110 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000e20de : mov edi, 0x3880002b ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000172509 : mov edi, 0x57f4fffa ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x00000000000735e8 : mov edi, 0x80 ; call 0x1f887
0x00000000000415cf : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000016d205 : mov edi, 0xbe90fffc ; cld ; call qword ptr [rax]
0x000000000016d1c5 : mov edi, 0xbea0fffc ; cld ; jmp qword ptr [rax]
0x000000000016d081 : mov edi, 0xbf52fffc ; cld ; call rdx
0x000000000015f98d : mov edi, 0xbff2fff4 ; hlt ; jmp qword ptr [rbp - 0x3d]
0x000000000016bce5 : mov edi, 0xc020fffd ; std ; jmp qword ptr [rax]
0x0000000000065ffa : mov edi, 0xe0 ; call rax
0x0000000000065fce : mov edi, 0xe0 ; jmp rax
0x00000000000fcea7 : mov edi, dword ptr [rax] ; call 0xdad48
0x00000000000a7461 : mov edi, dword ptr [rax] ; call r14
0x000000000006ea4c : mov edi, dword ptr [rbp + 0x70] ; call 0xdad45
0x00000000000ba1b2 : mov edi, dword ptr [rbp - 0x428] ; call r15
0x000000000004f6ee : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x000000000009b125 : mov edi, dword ptr [rbp] ; call r12
0x00000000000a646f : mov edi, dword ptr [rbx + 0x10] ; call 0x22765
0x00000000000a6478 : mov edi, dword ptr [rbx] ; mov rsi, qword ptr [rbx + 8] ; call 0x22768
0x000000000010e8f1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10e909 ; ret
0x00000000001135e1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1135f9 ; ret
0x0000000000041aaa : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x0000000000065ff9 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x0000000000065fcd : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000f2714 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000015b386 : mov edi, dword ptr [rdx] ; ret
0x00000000000e48da : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000023b21 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00000000000b425f : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000023d0d : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000245b8 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000241b8 : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000023931 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000024113 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002499e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024da0 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000024b60 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x000000000002733f : mov edi, dword ptr [rsp + 0x38] ; call r14
0x00000000000270d8 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025310 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000025e78 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00000000000255c6 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000c35e7 : mov edi, dword ptr [rsp + 0x58] ; mov r13d, eax ; call 0x1f891
0x0000000000109799 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00000000000a64c7 : mov edi, dword ptr [rsp + 8] ; call 0x22766
0x0000000000031fd1 : mov edi, dword ptr [rsp + 8] ; call 0x7e296
0x0000000000034d86 : mov edi, dword ptr [rsp] ; call r14
0x0000000000111b6d : mov edi, eax ; call qword ptr [r10]
0x000000000007b267 : mov edi, eax ; call rax
0x00000000000e50b6 : mov edi, eax ; jmp 0xe507f
0x0000000000043fed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x43fe1 ; mov rax, rsi ; ret
0x00000000000f649f : mov edi, eax ; mov qword ptr [rsp + 8], rcx ; call 0x72729
0x0000000000107df4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000bac40 : mov edi, eax ; mov rdx, r14 ; call 0x86ed7
0x000000000011476b : mov edi, ebp ; add rbx, r12 ; call r14
0x000000000014b650 : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010f140 : mov edi, ebp ; call 0x10b3d4
0x000000000010f183 : mov edi, ebp ; call 0x10b454
0x0000000000077dfd : mov edi, ebp ; call 0x74054
0x000000000010a4be : mov edi, ebp ; call qword ptr [rbx]
0x00000000000bffd9 : mov edi, ebp ; call r12
0x000000000010835d : mov edi, ebp ; call r14
0x000000000002d4f9 : mov edi, ebp ; call rax
0x000000000009b8b6 : mov edi, ebp ; call rbx
0x0000000000115761 : mov edi, ebp ; call rcx
0x000000000010a075 : mov edi, ebp ; call rdx
0x0000000000108d35 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000108b76 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000010e022 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010de2a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c0002 : mov edi, ebp ; mov rsi, rbx ; call r12
0x000000000015deb1 : mov edi, ebp ; push qword ptr [rbp - 0x2e] ; out dx, eax ; jmp rsi
0x00000000000a7ded : mov edi, ebp ; sub rsp, 8 ; call r12
0x00000000001099cd : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000030628 : mov edi, ebx ; call 0x7c864
0x00000000000747f5 : mov edi, ebx ; call qword ptr [r14]
0x000000000010a8e8 : mov edi, ebx ; call qword ptr [rax]
0x0000000000028be8 : mov edi, ebx ; call r12
0x00000000000218a7 : mov edi, ebx ; call r14
0x0000000000064f11 : mov edi, ebx ; call r8
0x000000000004b87e : mov edi, ebx ; call rax
0x000000000014bb3b : mov edi, ebx ; jne 0x14bb30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c5e81 : mov edi, ebx ; mov byte ptr [rsp + 0x38], 0xa ; call 0xc20a9
0x0000000000021f8e : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000011c38b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000eeda9 : mov edi, ebx ; mov rdx, r15 ; mov rsi, r13 ; call r14
0x000000000004cbc9 : mov edi, ebx ; mov rdx, rbp ; call 0x68e67
0x000000000006a495 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006a396 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000001148f0 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000014bcc8 : mov edi, ebx ; test rdi, rdi ; jne 0x14bcc2 ; pop rbx ; ret
0x000000000007bf18 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000005e013 : mov edi, edi ; call 0x6a304
0x00000000000de932 : mov edi, edi ; call 0xdab94
0x0000000000112f40 : mov edi, edi ; call qword ptr [rax]
0x000000000011484e : mov edi, edi ; call r14
0x0000000000044bde : mov edi, edi ; call rax
0x00000000000762bf : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000007b733 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000eafec : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000006ca64 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000000f3eb8 : mov edi, edx ; jmp rax
0x0000000000044071 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x44059 ; mov rax, rsi ; ret
0x000000000011af3e : mov edi, esi ; call 0xb7174
0x000000000006eadf : mov edi, esi ; call 0xdad44
0x00000000000764e6 : mov edi, esi ; call qword ptr [rax]
0x0000000000109518 : mov edi, esi ; call rax
0x0000000000022040 : mov edi, esi ; mov qword ptr [rbp - 0x68], rsi ; call 0x7e298
0x000000000010977a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000b7401 : mov edi, esp ; call 0x736a4
0x00000000000b7416 : mov edi, esp ; call 0x736b4
0x00000000000b9a77 : mov edi, esp ; call qword ptr [rcx]
0x0000000000034e8d : mov edi, esp ; call r14
0x000000000007b918 : mov edi, esp ; call rax
0x000000000006c7b9 : mov edi, esp ; call rbx
0x0000000000114961 : mov edi, esp ; call rdx
0x000000000009bf62 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000110f00 : mov edi, esp ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x00000000000ef2bc : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000015dd71 : mov edi, gs ; call qword ptr [rcx]
0x000000000015dd6d : mov edi, gs ; dec eax ; mov edi, gs ; call qword ptr [rcx]
0x00000000000ef2bb : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000011af3d : mov edi, r14d ; call 0xb7175
0x000000000006eade : mov edi, r14d ; call 0xdad45
0x00000000000b6ee9 : mov edx, 0 ; cmove rax, rdx ; ret
0x000000000006fc96 : mov edx, 0x130 ; pop rbx ; ret
0x00000000000bff7b : mov edx, 0x17c ; call 0x2c237
0x00000000000bff5c : mov edx, 0x182 ; call 0x2c237
0x00000000000bff9a : mov edx, 0x1b4 ; call 0x2c237
0x000000000016d168 : mov edx, 0x2afffcc2 ; ret 0xfffc
0x000000000018a7dd : mov edx, 0x41200e0a ; ret
0x0000000000001b0e : mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x00000000000d7d18 : mov edx, 0xa ; call 0x43fb7
0x000000000016e2c5 : mov edx, 0xa50c0000 ; out dx, eax ; call rsp
0x000000000015a83e : mov edx, 0xcac982a4 ; call 0xffffffffaed846be
0x0000000000103e0a : mov edx, 0xf480029 ; ret 0xff81
0x0000000000023697 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000006803e : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000ecfc8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x00000000000361df : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000011500f : mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x00000000000267d0 : mov edx, 1 ; mov r10d, r8d ; jmp 0x267fe
0x0000000000021568 : mov edx, 8 ; mov eax, edx ; ret
0x000000000006ec45 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000b74a4 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xb74b9 ; call rdx
0x000000000006a028 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020727 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f2c99 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000f3093 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000f2dc0 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000f2cf7 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000070040 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000f34f5 : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f724f : mov edx, dword ptr [rbx] ; jmp 0xf7218
0x00000000001210af : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000011f7dd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000006b91e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000006cc96 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000000f3eb1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000009b385 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007c1d5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x7c1d9 ; ret
0x000000000014b8b0 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x14b8c2 ; call rdx
0x00000000000f2c1f : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000c1d87 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000943d2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000943c3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000094413 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a765d : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xa7646 ; ret
0x0000000000094423 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000012b8c1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000012bc80 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012b511 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000959a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000967d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000943a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000098240 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000959f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096821 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000943e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000095981 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000967a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000094381 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ef890 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x00000000000ef78c : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000681c5 : mov edx, eax ; je 0x681d7 ; mov eax, edx ; pop rbx ; ret
0x00000000000267d6 : mov edx, eax ; jmp 0x267f8
0x0000000000058abf : mov edx, eax ; jmp 0x58ad2
0x00000000000692a7 : mov edx, eax ; jmp 0x6923b
0x0000000000069438 : mov edx, eax ; jmp 0x693d2
0x000000000006d3b3 : mov edx, eax ; jmp 0x6d350
0x000000000006dd03 : mov edx, eax ; jmp 0x6dca0
0x000000000006e4b0 : mov edx, eax ; jmp 0x6e437
0x000000000006f8cb : mov edx, eax ; jmp 0x6f861
0x000000000008cc7a : mov edx, eax ; jmp 0x8ccc1
0x00000000000a8bf5 : mov edx, eax ; jmp 0xa8c05
0x00000000000aa368 : mov edx, eax ; jmp 0xaa371
0x00000000000bab0d : mov edx, eax ; jmp 0xbab2f
0x00000000000bf0d6 : mov edx, eax ; jmp 0xbf0f7
0x00000000000c4f0c : mov edx, eax ; jmp 0xc4eea
0x00000000000c7a8a : mov edx, eax ; jmp 0xc7ab9
0x00000000000ca5cc : mov edx, eax ; jmp 0xca5db
0x00000000000dd059 : mov edx, eax ; jmp 0xdd01a
0x00000000000e109c : mov edx, eax ; jmp 0xe1030
0x00000000000f04f3 : mov edx, eax ; jmp 0xf0506
0x00000000000fe3d8 : mov edx, eax ; jmp 0xfe367
0x00000000000ef2c3 : mov edx, eax ; jmp rcx
0x000000000006cce3 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000011cd1e : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000004cbcc : mov edx, ebp ; call 0x68e64
0x00000000000f34fc : mov edx, ebp ; call rax
0x000000000007b264 : mov edx, ebp ; mov rdi, r8 ; call rax
0x000000000009b9d2 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x000000000010b33b : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000b34fd : mov edx, ebp ; xor eax, eax ; jmp 0xb34ca
0x00000000000f2c26 : mov edx, ebx ; call rax
0x000000000014bfc7 : mov edx, ebx ; jne 0x14bfbe ; pop rbx ; ret
0x000000000010b235 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007b736 : mov edx, ebx ; mov rsi, r13 ; call rax
0x000000000007b912 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000005c6df : mov edx, edi ; mov rsi, qword ptr [rip + 0x33e888] ; call rax
0x00000000000eedac : mov edx, edi ; mov rsi, r13 ; call r14
0x00000000000fb89f : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000016ffc0 : mov edx, es ; idiv bh ; mov esp, 0x3c00017c ; ret
0x00000000000bac43 : mov edx, esi ; call 0x86ed4
0x00000000000f2ca0 : mov edx, esi ; call rax
0x00000000000f2cfe : mov edx, esp ; call rax
0x0000000000054fec : mov edx, esp ; mov rsi, qword ptr [rip + 0x345f7b] ; call rax
0x000000000002662a : mov es, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000000eae69 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000000965ee : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000eed61 : mov esi, 0x14be0f41 ; and al, 0x39 ; ret 0xb575
0x00000000000312e9 : mov esi, 0x24448b48 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000e227f : mov esi, 0x3880002b ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008d256 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x000000000007ad29 : mov esi, 0x3948feda ; ret 0x2f74
0x000000000009ab0e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000e224b : mov esi, 0x5d5b002b ; pop r12 ; ret
0x000000000008d281 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000008d141 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000000eee83 : mov esi, 0x75c9840a ; out 0xf3, eax ; ret
0x000000000008d2a5 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x0000000000038534 : mov esi, 0x8349016a ; ret 0xe901
0x000000000008d1be : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x000000000003dcc7 : mov esi, 0x850f026a ; ret 0xe
0x000000000007afcf : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000008037f : mov esi, 0x8c48348 ; ret
0x0000000000170c71 : mov esi, 0xb6acfff7 ; add dword ptr [rax], eax ; in al, dx ; ret
0x000000000016d011 : mov esi, 0xbd70fffc ; cld ; jmp rax
0x000000000016d1cd : mov esi, 0xbda0fffc ; cld ; call qword ptr [rax]
0x0000000000038c9f : mov esi, 0xbe0f2414 ; ret 0x8349
0x000000000016d089 : mov esi, 0xbe52fffc ; cld ; call rdx
0x000000000015fac5 : mov esi, 0xbe9afff4 ; hlt ; call rsp
0x000000000008d2fd : mov esi, 0xc0844507 ; jne 0x8d2e9 ; xor eax, eax ; ret
0x000000000015905e : mov esi, 0xc2c1c0bf ; ret
0x00000000000eec00 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d165 : mov esi, 0xc984070c ; jne 0x8d160 ; ret
0x000000000008d121 : mov esi, 0xd2840714 ; jne 0x8d120 ; ret
0x00000000000991d4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000008d1f5 : mov esi, 0xf2390714 ; je 0x8d1f8 ; ret
0x0000000000002bf1 : mov esi, 0xf8cbeb8f ; ret
0x00000000000fb996 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x000000000007a6a3 : mov esi, 1 ; call 0x668b7
0x0000000000064f0b : mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000000648c8 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000e46c1 : mov esi, 2 ; jmp rax
0x00000000000e46db : mov esi, 3 ; jmp rax
0x00000000001715c0 : mov esi, ds ; clc ; call rsp
0x0000000000034d82 : mov esi, dword ptr [rbp] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000a646b : mov esi, dword ptr [rbx + 0x18] ; mov rdi, qword ptr [rbx + 0x10] ; call 0x22769
0x00000000000a647b : mov esi, dword ptr [rbx + 8] ; call 0x22765
0x000000000005c6e2 : mov esi, dword ptr [rip + 0x33e888] ; call rax
0x0000000000054fef : mov esi, dword ptr [rip + 0x345f7b] ; call rax
0x0000000000054993 : mov esi, dword ptr [rip + 0x3465d7] ; call rax
0x00000000000497ab : mov esi, dword ptr [rip + 0x3517bf] ; call rax
0x0000000000046b2f : mov esi, dword ptr [rip + 0x35443b] ; call rax
0x0000000000041e2a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000c4f04 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xc4ee9 ; mov edx, eax ; jmp 0xc4ef2
0x0000000000126649 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000108358 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000002151e : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00000000000a81be : mov esi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000079271 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000270d3 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000025e73 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000ef791 : mov esi, dword ptr [rsp + 8] ; call rax
0x00000000000fe539 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000078cd1 : mov esi, dword ptr [rsp] ; jmp rax
0x000000000008919a : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x891b5 ; jmp 0x8916f
0x000000000011c28f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000006e212 : mov esi, ebp ; call 0x468d9
0x00000000000eedaf : mov esi, ebp ; call r14
0x000000000007b739 : mov esi, ebp ; call rax
0x0000000000034e8a : mov esi, ebp ; mov rdi, r12 ; call r14
0x000000000007b915 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000030634 : mov esi, ebp ; mov rdi, rbx ; call 0x7c867
0x000000000007b10b : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000c0005 : mov esi, ebx ; call r12
0x000000000007b81c : mov esi, ebx ; mov rdi, r13 ; call rax
0x0000000000112f3d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000011484b : mov esi, ebx ; mov rdi, r15 ; call r14
0x0000000000111b6a : mov esi, ebx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000bffd6 : mov esi, ebx ; mov rdi, rbp ; call r12
0x000000000011575e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000b27f3 : mov esi, edi ; xor edi, edi ; call rax
0x000000000010e66a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00000000000f2718 : mov esi, edx ; call rax
0x0000000000001bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000b0554 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x0000000000020224 : mov esi, esi ; call 0x990a8
0x000000000004f6eb : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000a6b32 : mov esi, esi ; mov rdi, r12 ; call rbx
0x00000000000a69a2 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000fb8a2 : mov esi, esi ; mov rdi, r13 ; call rax
0x0000000000044bdb : mov esi, esi ; mov rdi, r15 ; call rax
0x0000000000110bd4 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000b8bf9 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000010db84 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000b04ee : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x0000000000114b05 : mov esi, esp ; call qword ptr [rax]
0x0000000000077dfa : mov esi, esp ; mov rdi, r13 ; call 0x74057
0x000000000010b238 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000010a8e5 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000020223 : mov esi, r14d ; call 0x990a9
0x000000000018931c : mov esp, 0x10000167 ; xor esi, esi ; call rdx
0x000000000016dbf4 : mov esp, 0x1c00008d ; xchg eax, ebp ; in al, dx ; call rsp
0x0000000000181c1c : mov esp, 0x200000f0 ; call rsi
0x000000000016d894 : mov esp, 0x2c00007d ; pop rdx ; in al, dx ; call rsp
0x0000000000170414 : mov esp, 0x2c000191 ; sub esi, edi ; call rsp
0x0000000000170bc4 : mov esp, 0x2c0001b3 ; mov bh, 0xf7 ; call rsp
0x000000000016f5a4 : mov esp, 0x3c000133 ; mov cl, 0xf3 ; call rsp
0x000000000016ffc4 : mov esp, 0x3c00017c ; ret
0x0000000000082287 : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000001131f1 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000081571 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000815a1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000081591 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000016d714 : mov esp, 0x4c000074 ; stc ; jmp 0x16d722
0x000000000016e0ac : mov esp, 0x4c0000ab ; in eax, dx ; out dx, al ; call rsp
0x000000000016df74 : mov esp, 0x5c0000a2 ; insb byte ptr [rdi], dx ; in eax, dx ; call rsp
0x0000000000171a9c : mov esp, 0x5c000215 ; stosd dword ptr [rdi], eax ; stc ; call rsp
0x000000000016d060 : mov esp, 0x62fffcbb ; ret
0x0000000000172244 : mov esp, 0x6c000247 ; ja 0x17224c ; call rsp
0x000000000018201c : mov esp, 0x700000f4 ; push rsi ; jmp qword ptr [rcx]
0x00000000000c4bce : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x00000000000a470a : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000016dc2c : mov esp, 0x8c00008e ; cwde ; in al, dx ; call rsp
0x000000000016f3b4 : mov esp, 0x8c000125 ; div edx ; call rsp
0x000000000016f91c : mov esp, 0x8c00014c ; lahf ; hlt ; call rsp
0x00000000001701a4 : mov esp, 0x8c000183 ; fdivr st(6), st(0) ; call rsp
0x000000000017a91c : mov esp, 0x9000007d ; out dx, eax ; jmp qword ptr [rdi]
0x000000000018671c : mov esp, 0x9000013b ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000016d3a4 : mov esp, 0x9c00005b ; cmp al, 0xeb ; call rsp
0x000000000016d844 : mov esp, 0x9c00007c ; push rsi ; in al, dx ; call rsp
0x000000000016ea2c : mov esp, 0x9c0000e9 ; movsxd rsi, eax ; call rsp
0x000000000016f404 : mov esp, 0x9c000128 ; call rsp
0x000000000016f69c : mov esp, 0x9c000139 ; jrcxz 0x16f69d ; call rsp
0x000000000016fa0c : mov esp, 0x9c000150 ; mov cl, 0xf4 ; call rsp
0x000000000018521c : mov esp, 0xa0000126 ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000018821c : mov esp, 0xa0000156 ; cld ; cmc ; jmp qword ptr [rcx]
0x000000000016de4c : mov esp, 0xac00009c ; in eax, dx ; call rsp
0x0000000000187e1c : mov esp, 0xb0000152 ; clc ; cmc ; jmp qword ptr [rcx]
0x000000000016d05d : mov esp, 0xbbbcfffc ; cld ; jmp qword ptr [rdx - 0x3d]
0x0000000000171d0c : mov esp, 0xbc000225 ; in eax, dx ; stc ; call rsp
0x000000000018871c : mov esp, 0xc000015b ; add al, 0xf6 ; jmp qword ptr [rbx]
0x00000000001702f4 : mov esp, 0xc00018c ; sbb bh, dh ; jmp rsp
0x0000000000171f34 : mov esp, 0xc000234 ; xor dl, bh ; call rsp
0x00000000001725e4 : mov esp, 0xc00025c ; sar edx, 1 ; jmp rsp
0x00000000001726ac : mov esp, 0xc000261 ; out dx, eax ; cli ; call rsp
0x0000000000082276 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x0000000000171ce4 : mov esp, 0xcc000224 ; loope 0x171ceb ; jmp rsp
0x000000000016348c : mov esp, 0xccfffacf ; iretd ; cli ; jmp rsp
0x000000000007e423 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000015e2ac : mov esp, 0xd5ffeff9 ; stc ; out dx, eax ; jmp rsp
0x00000000001706fc : mov esp, 0xdc00019e ; movsxd rsi, edi ; call rsp
0x0000000000171e24 : mov esp, 0xdc00022d ; adc edi, edx ; call rsp
0x000000000017e83d : mov esp, 0xdcf00000 ; cld ; call qword ptr [rax]
0x00000000001709e4 : mov esp, 0xec0001ad ; test al, 0xf7 ; call rsp
0x000000000017ed1c : mov esp, 0xf00000c1 ; push rdx ; int1 ; jmp qword ptr [rbx]
0x000000000002048c : mov esp, 0xf3fffffd ; ret
0x0000000000172508 : mov esp, 0xf4fffabf ; push rdi ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x0000000000088c5b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000081581 : mov esp, 0xf80148c0 ; ret
0x000000000016e734 : mov esp, 0xfc0000d8 ; and al, dh ; call rsp
0x00000000000c28ed : mov esp, 1 ; jmp 0xc28bc
0x0000000000060045 : mov esp, 2 ; jmp 0x5c2b2
0x0000000000112aec : mov esp, dword ptr [rax] ; jmp 0x112afa
0x00000000000b7409 : mov esp, eax ; call 0x73694
0x0000000000020328 : mov esp, eax ; call 0x991c8
0x00000000000330c9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000000f0f3c : mov esp, ebx ; jmp 0xf0f52
0x00000000000e4674 : mov esp, edx ; mov rbp, rax ; call rax
0x00000000000747d8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x00000000000877be : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101920 : mov qword ptr [r11], rcx ; add rsp, 0x10 ; ret
0x000000000007b119 : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001128f9 : mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x00000000000d5478 : mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000000000e4814 : mov qword ptr [r9 + 0x10], rdx ; mov qword ptr [rax + 8], r9 ; ret
0x00000000000e484c : mov qword ptr [r9 + 8], rdx ; mov qword ptr [rax + 0x10], r9 ; ret
0x000000000008e1d0 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000102237 : mov qword ptr [r9], r10 ; ret
0x0000000000102278 : mov qword ptr [r9], rdi ; ret
0x000000000007494b : mov qword ptr [r9], rdx ; mov rax, rdx ; ret
0x00000000000e4850 : mov qword ptr [rax + 0x10], r9 ; ret
0x0000000000069ce8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000069d28 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006a248 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000006ec48 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c1d8a : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000c1dbc : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000069cec : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006a2e6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000014c566 : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x00000000000729c9 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000e4818 : mov qword ptr [rax + 8], r9 ; ret
0x00000000000dfcd3 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000102039 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000006a3d4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000068689 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000078525 : mov qword ptr [rax], rdi ; ret
0x000000000002bfc2 : mov qword ptr [rax], rdx ; ret
0x000000000006a870 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000627aa : mov qword ptr [rbp - 0x498], rax ; jmp 0x6277e
0x0000000000046dad : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x000000000005e056 : mov qword ptr [rbp - 0x558], rcx ; call 0x6a309
0x0000000000022052 : mov qword ptr [rbp - 0x58], r15 ; call 0x7e296
0x000000000005eb80 : mov qword ptr [rbp - 0x5f8], rdx ; call 0xeae39
0x0000000000022042 : mov qword ptr [rbp - 0x68], rsi ; call 0x7e296
0x00000000000f33a2 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x00000000000a7e55 : mov qword ptr [rbp], rbx ; call r12
0x00000000000360e9 : mov qword ptr [rbp], rdx ; call rax
0x00000000000293d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000006fc36 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000011c8a5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000070458 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000011c85d : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000006e384 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115958 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000722e2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000ce96a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000a94f9 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ec74 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007bf1d : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000df230 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007234a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000006fb06 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x00000000000c06cb : mov qword ptr [rbx + 8], rax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xc06a0
0x00000000000724d6 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007c1ac : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104c60 : mov qword ptr [rbx], 0 ; jmp 0x104c34
0x00000000000e4441 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x000000000011ca60 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011278e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000dd0b6 : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007be65 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000007ac0c : mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007bf1a : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000010dbb3 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x0000000000141843 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000141853 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000141863 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000141873 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000c2111 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006ce33 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000141800 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000141820 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000141830 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000141840 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000141850 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000141860 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000141870 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000141810 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001417f0 : mov qword ptr [rcx], rdx ; ret
0x00000000000d9d9a : mov qword ptr [rdi + 0x100], rdx ; ret
0x00000000000e47c9 : mov qword ptr [rdi + 0x10], r9 ; mov qword ptr [rdx], rdi ; ret
0x000000000004286e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000095bbc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000096a0c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009454c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009452c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009847c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009521f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009458f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000945af : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000094570 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000072272 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000006f026 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001155b5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000010b1bd : mov qword ptr [rdi + 0x20], rcx ; ret
0x0000000000110c4b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000087730 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000110c03 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x00000000000722a2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000033c28 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000d94cd : mov qword ptr [rdi + 0x80], rdx ; ret
0x0000000000095b7c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000969cc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000944ec : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009843c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000095b9c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000969ec : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009450c : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009845c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001340e7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134077 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134007 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133f97 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000095a7a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000968ba : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000133f27 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009443a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000009832a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000095a9a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000968da : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000133eb7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009444a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000009834a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000095aba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000968fa : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000133e47 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009445a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000009836a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e1e47 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000042063 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000427f3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000010b97a : mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000072276 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000036793 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000006f73e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x0000000000036784 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000e1e37 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000102387 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x0000000000081d6d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000012b3a4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012b3e2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004275e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000012b72b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001338f7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012b90b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133877 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bafb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001337f7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bccc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133768 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012becc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001336d8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c0cc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133648 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000953a0 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000426e9 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000012b3a8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000012b3e6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000012b55b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012b657 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012b5a3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133977 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004e085 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000874f6 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000426b8 : mov qword ptr [rdi], r9 ; ret
0x00000000000e1e34 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000043f0a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000036797 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000095a06 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000950c6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000094416 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000094426 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000094437 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000094447 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000094457 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000081d6a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000094407 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001f9a2 : mov qword ptr [rdi], rcx ; ret
0x00000000000959f3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096823 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000953c0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000953e0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000953f0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000095400 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000095410 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000010b977 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000953d0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008d41f : mov qword ptr [rdi], rdx ; ret
0x0000000000098293 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000008e1cd : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000012662d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000043972 : mov qword ptr [rdi], rsi ; ret
0x0000000000065ef6 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000006fc94 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000006917d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000069323 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000010a95f : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000010a93b : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010a93f : mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000143bfa : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000013f86a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000143c1a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000013f88a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000143c3a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000013f8aa : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x00000000000638f3 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000143aca : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000013f79a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000010dbd0 : mov qword ptr [rdx + 8], rdi ; ret
0x0000000000143a73 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000010dc9a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013f743 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002c78c : mov qword ptr [rdx], rax ; ret
0x000000000006daae : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008076d : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000006a025 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000008d364 : mov qword ptr [rdx], rcx ; ret
0x00000000000ce0ca : mov qword ptr [rdx], rdi ; ret
0x000000000010dbcd : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000f46e7 : mov qword ptr [rip + 0x2aaa92], rax ; pop rbp ; ret
0x00000000000e991f : mov qword ptr [rip + 0x2b191a], rbx ; pop rbx ; ret
0x00000000000e1094 : mov qword ptr [rip + 0x2bb705], rax ; mov rdx, rax ; jmp 0xe1038
0x00000000000cec83 : mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000109b3e : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000036d95 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000c2063 : mov qword ptr [rsi + 0x18], rdx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x0000000000036701 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000006f715 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000df216 : mov qword ptr [rsi + 0x48], rax ; ret
0x000000000006a794 : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d943e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000cec66 : mov qword ptr [rsi + 8], 0 ; ret
0x0000000000109b0e : mov qword ptr [rsi + 8], rax ; ret
0x00000000000cec7f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000741f3 : mov qword ptr [rsi], rax ; mov rax, r10 ; ret
0x000000000006f02a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000101712 : mov qword ptr [rsi], rdi ; ret
0x00000000000f7d50 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000034dc8 : mov qword ptr [rsp + 0x10], r9 ; call r14
0x0000000000076696 : mov qword ptr [rsp + 0x10], rdx ; call rdi
0x00000000000765d0 : mov qword ptr [rsp + 0x10], rdx ; xor edi, edi ; call qword ptr [rax]
0x00000000000762c1 : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000c5e63 : mov qword ptr [rsp + 0x20], r14 ; call 0xc20a7
0x00000000000c5e1f : mov qword ptr [rsp + 0x20], rbp ; call 0xc20a7
0x0000000000076625 : mov qword ptr [rsp + 0x28], rdx ; call rax
0x00000000000cb02c : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x000000000007becf : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000115a2b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000f64a1 : mov qword ptr [rsp + 8], rcx ; call 0x72727
0x000000000007494a : mov qword ptr fs:[r9], rdx ; mov rax, rdx ; ret
0x000000000011273e : mov qword ptr fs:[rax], rdx ; ret
0x00000000000360e8 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000011278d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002c78b : mov qword ptr fs:[rdx], rax ; ret
0x000000000012662c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000008cc79 : mov r10, rax ; jmp 0x8ccc2
0x00000000000c7a89 : mov r10, rax ; jmp 0xc7aba
0x000000000015a83d : mov r10d, 0xcac982a4 ; call 0xffffffffaed846bf
0x00000000000267d5 : mov r10d, r8d ; jmp 0x267f9
0x0000000000103e8e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x00000000000f0f3b : mov r12, r11 ; jmp 0xf0f53
0x00000000000b7408 : mov r12, rax ; call 0x73695
0x0000000000020327 : mov r12, rax ; call 0x991c9
0x00000000000747d7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x00000000000c28ec : mov r12d, 1 ; jmp 0xc28bd
0x0000000000060044 : mov r12d, 2 ; jmp 0x5c2b3
0x0000000000112aeb : mov r12d, dword ptr [rax] ; jmp 0x112afb
0x00000000000e4673 : mov r12d, edx ; mov rbp, rax ; call rax
0x00000000000747dc : mov r13, rdx ; call qword ptr [r14]
0x00000000000c35eb : mov r13d, eax ; call 0x1f88d
0x00000000000e4acb : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000e50b5 : mov r15, r8 ; jmp 0xe5080
0x00000000000de931 : mov r15d, edi ; call 0xdab95
0x00000000000e1edb : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000021522 : mov r9, r14 ; call rbx
0x000000000009bf64 : mov r9, r15 ; call rbx
0x000000000009d211 : mov r9, r15 ; setne dl ; jmp 0x9d22c
0x000000000009f7e1 : mov r9, r15 ; setne dl ; jmp 0x9f7fc
0x00000000000a1c11 : mov r9, r15 ; setne dl ; jmp 0xa1c2c
0x00000000000bf0d0 : mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xbf0fd
0x00000000000b6f1b : mov rax, -0xe ; ret
0x000000000006fb10 : mov rax, -1 ; pop rbx ; ret
0x00000000000331b6 : mov rax, -1 ; ret
0x000000000009a5b0 : mov rax, 1 ; ret
0x000000000009a5c0 : mov rax, 2 ; ret
0x000000000009a5d0 : mov rax, 3 ; ret
0x000000000009a5e0 : mov rax, 4 ; ret
0x000000000009a5f0 : mov rax, 5 ; ret
0x000000000009a600 : mov rax, 6 ; ret
0x000000000009a610 : mov rax, 7 ; ret
0x00000000000e6650 : mov rax, qword ptr [rax + 0x108] ; ret
0x000000000011ca20 : mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000011c7ce : mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00000000000e9cff : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000e9d39 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007237b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000006a498 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006a399 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000000f36e8 : mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000070626 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000001102e3 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000067a92 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000067c80 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000006c743 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000110b83 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e6648 : mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000114a24 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000000e6629 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000029b64 : mov rax, qword ptr [rax + r13*8] ; test rax, rax ; je 0x29b78 ; call rax
0x000000000002c504 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002c00e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000114a19 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002b55b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000036212 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001059e8 : mov rax, qword ptr [rax] ; ret
0x0000000000075036 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x75048 ; call rax
0x0000000000079795 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x797a7 ; call rax
0x00000000000e4ace : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000021f90 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000006ec70 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000112759 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x112771 ; pop rbx ; ret
0x000000000013f740 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000b752c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xb7543 ; call rax
0x0000000000115922 : mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000115550 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000b38a0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000014b9c7 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x14b9e0 ; call rax
0x0000000000109b56 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006ecb0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000109b8e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006eba0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000006c740 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000736a0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000010a810 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000115348 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000115358 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000114a20 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000114a15 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000114b00 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000001087e6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000733ee : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000f3eb4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002c4a2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000109fe7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002b51c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000ce0c7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000733e0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x733e1 ; ret
0x000000000011a243 : mov rax, qword ptr [rip + 0x2821c6] ; call qword ptr [rax]
0x0000000000119c40 : mov rax, qword ptr [rip + 0x2827c9] ; call qword ptr [rax]
0x00000000000ff4f0 : mov rax, qword ptr [rip + 0x29d381] ; ret
0x00000000000766b3 : mov rax, qword ptr [rip + 0x324716] ; xor edi, edi ; call qword ptr [rax]
0x0000000000073680 : mov rax, qword ptr [rip + 0x328e99] ; ret
0x0000000000028c40 : mov rax, qword ptr [rip + 0x373ca9] ; ret
0x0000000000021710 : mov rax, qword ptr [rip + 0x37ec39] ; ret
0x0000000000021700 : mov rax, qword ptr [rip + 0x37ec59] ; ret
0x000000000002b538 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000b4263 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000011c965 : mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x0000000000020729 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000023d11 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000245bc : mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002cbc1 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000e0cef : mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000ea462 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000ea4c3 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001059e7 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000080770 : mov rax, r10 ; pop rbx ; ret
0x00000000000741f6 : mov rax, r10 ; ret
0x00000000000879e9 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002cec9 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000066484 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000058861 : mov rax, r13 ; test edx, edx ; je 0x58830 ; jmp 0x58812
0x00000000000780d8 : mov rax, r14 ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000078465 : mov rax, r8 ; ret
0x00000000000440d1 : mov rax, r9 ; add rsp, 0x28 ; ret
0x0000000000070a39 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000671c8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006719b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000065dd5 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d3c0 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000070fcc : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000878d6 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b40d3 : mov rax, rbx ; call rax
0x00000000000e61fe : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000029535 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000661a7 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003061a : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003659e : mov rax, rbx ; pop rbx ; ret
0x00000000000e3e69 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003617b : mov rax, rcx ; or rax, rdx ; ret
0x000000000002cc8f : mov rax, rcx ; pop rbp ; pop r12 ; ret
0x000000000007aec4 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007aff9 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000031c86 : mov rax, rcx ; ret
0x00000000000f5010 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000036190 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009b01b : mov rax, rdi ; jne 0x9b033 ; ret
0x000000000008d056 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008db54 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000089979 : mov rax, rdi ; pop rbx ; ret
0x0000000000043f0d : mov rax, rdi ; ret
0x00000000000f7aa9 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000a7c07 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000785fc : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ab61b : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000089c95 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000b3542 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078ae1 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042d74 : mov rax, rdx ; pop rbx ; ret
0x0000000000042239 : mov rax, rdx ; ret
0x00000000000b4714 : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000043eb9 : mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000035d63 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000067d5e : mov rax, rsi ; pop rbx ; ret
0x0000000000043ff3 : mov rax, rsi ; ret
0x000000000014b5ea : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00000000000330cb : mov rbp, r9 ; jmp rdx
0x00000000000e4676 : mov rbp, rax ; call rax
0x00000000000f45d3 : mov rbp, rsp ; pop rbp ; ret
0x00000000000f40f1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000010a41a : mov rbx, rax ; jne 0x10a3ba ; xor eax, eax ; pop rbx ; ret
0x00000000000df9a6 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000002ad45 : mov rbx, rdi ; test rax, rax ; je 0x2ad57 ; call rax
0x0000000000029eb0 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x29ec4 ; call rcx
0x0000000000110f02 : mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000107df6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000943f0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000010e024 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010de2c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000010977c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000006ca60 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000009bc89 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000106af7 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008d373 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000008d385 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000126760 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000126763 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000106be2 : mov rcx, rdx ; xor edx, edx ; call rax
0x0000000000034d85 : mov rdi, qword ptr [r12] ; call r14
0x00000000000a7460 : mov rdi, qword ptr [rax] ; call r14
0x00000000000ba1b1 : mov rdi, qword ptr [rbp - 0x428] ; call r15
0x000000000004f6ed : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x000000000009b124 : mov rdi, qword ptr [rbp] ; call r12
0x00000000000a646e : mov rdi, qword ptr [rbx + 0x10] ; call 0x22766
0x00000000000a6477 : mov rdi, qword ptr [rbx] ; mov rsi, qword ptr [rbx + 8] ; call 0x22769
0x0000000000041aa9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x0000000000065ff8 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000065fcc : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000f2713 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000023b20 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000241b7 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023930 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000024d9f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000024b5f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x000000000002733e : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000270d7 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002530f : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000025e77 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000109798 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000a64c6 : mov rdi, qword ptr [rsp + 8] ; call 0x22767
0x0000000000031fd0 : mov rdi, qword ptr [rsp + 8] ; call 0x7e297
0x00000000000b7400 : mov rdi, r12 ; call 0x736a5
0x00000000000b7415 : mov rdi, r12 ; call 0x736b5
0x00000000000b9a76 : mov rdi, r12 ; call qword ptr [rcx]
0x0000000000034e8c : mov rdi, r12 ; call r14
0x000000000007b917 : mov rdi, r12 ; call rax
0x000000000006c7b8 : mov rdi, r12 ; call rbx
0x000000000009bf61 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000077dfc : mov rdi, r13 ; call 0x74055
0x00000000000fe53d : mov rdi, r13 ; call r12
0x000000000002d4f8 : mov rdi, r13 ; call rax
0x00000000000764e5 : mov rdi, r14 ; call qword ptr [rax]
0x0000000000109517 : mov rdi, r14 ; call rax
0x0000000000109779 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000005e012 : mov rdi, r15 ; call 0x6a305
0x0000000000112f3f : mov rdi, r15 ; call qword ptr [rax]
0x000000000011484d : mov rdi, r15 ; call r14
0x0000000000044bdd : mov rdi, r15 ; call rax
0x00000000000762be : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000007b732 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x000000000006ca63 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000007b266 : mov rdi, r8 ; call rax
0x0000000000111b6c : mov rdi, rax ; call qword ptr [r10]
0x0000000000107df3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000bac3f : mov rdi, rax ; mov rdx, r14 ; call 0x86ed8
0x000000000011476a : mov rdi, rbp ; add rbx, r12 ; call r14
0x000000000014b64f : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010f13f : mov rdi, rbp ; call 0x10b3d5
0x000000000010f13e : mov rdi, rbp ; call 0x10b3d6
0x000000000010f182 : mov rdi, rbp ; call 0x10b455
0x000000000010a4bd : mov rdi, rbp ; call qword ptr [rbx]
0x00000000000bffd8 : mov rdi, rbp ; call r12
0x000000000010835c : mov rdi, rbp ; call r14
0x0000000000079275 : mov rdi, rbp ; call rax
0x000000000009b8b5 : mov rdi, rbp ; call rbx
0x0000000000115760 : mov rdi, rbp ; call rcx
0x000000000010a074 : mov rdi, rbp ; call rdx
0x0000000000108d34 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000108b75 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000010e021 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010de29 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c0001 : mov rdi, rbp ; mov rsi, rbx ; call r12
0x00000000000a7dec : mov rdi, rbp ; sub rsp, 8 ; call r12
0x00000000001099cc : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000030627 : mov rdi, rbx ; call 0x7c865
0x00000000000747f4 : mov rdi, rbx ; call qword ptr [r14]
0x000000000010a8e7 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000028be7 : mov rdi, rbx ; call r12
0x00000000000218a6 : mov rdi, rbx ; call r14
0x0000000000064f10 : mov rdi, rbx ; call r8
0x000000000004b87d : mov rdi, rbx ; call rax
0x000000000014bb3a : mov rdi, rbx ; jne 0x14bb31 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000021f8d : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000011c38a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000004cbc8 : mov rdi, rbx ; mov rdx, rbp ; call 0x68e68
0x000000000006a494 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006a395 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000001148ef : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000f3eb7 : mov rdi, rdx ; jmp rax
0x000000000002203f : mov rdi, rsi ; mov qword ptr [rbp - 0x68], rsi ; call 0x7e299
0x0000000000107ee5 : mov rdi, rsp ; call rax
0x0000000000114960 : mov rdi, rsp ; call rdx
0x000000000006ec44 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000b74a3 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xb74ba ; call rdx
0x0000000000020726 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000014b8af : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x14b8c3 ; call rdx
0x000000000012b510 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000943e0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000f2cfd : mov rdx, r12 ; call rax
0x00000000000f34fb : mov rdx, r13 ; call rax
0x000000000007b263 : mov rdx, r13 ; mov rdi, r8 ; call rax
0x000000000009b9d1 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000010b33a : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000bac42 : mov rdx, r14 ; call 0x86ed5
0x00000000000f2c9f : mov rdx, r14 ; call rax
0x00000000000eedab : mov rdx, r15 ; mov rsi, r13 ; call r14
0x00000000000fb89e : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000a8bf4 : mov rdx, r8 ; jmp 0xa8c06
0x00000000000bf0d5 : mov rdx, r8 ; jmp 0xbf0f8
0x00000000000ca5cb : mov rdx, r8 ; jmp 0xca5dc
0x0000000000058abe : mov rdx, rax ; jmp 0x58ad3
0x00000000000aa367 : mov rdx, rax ; jmp 0xaa372
0x00000000000bab0c : mov rdx, rax ; jmp 0xbab30
0x00000000000dd058 : mov rdx, rax ; jmp 0xdd01b
0x00000000000e109b : mov rdx, rax ; jmp 0xe1031
0x00000000000f04f2 : mov rdx, rax ; jmp 0xf0507
0x00000000000f04f1 : mov rdx, rax ; jmp 0xf0508
0x00000000000ef2c2 : mov rdx, rax ; jmp rcx
0x000000000004cbcb : mov rdx, rbp ; call 0x68e65
0x00000000000b34fc : mov rdx, rbp ; xor eax, eax ; jmp 0xb34cb
0x00000000000f2c25 : mov rdx, rbx ; call rax
0x000000000014bfc6 : mov rdx, rbx ; jne 0x14bfbf ; pop rbx ; ret
0x000000000010b234 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007b735 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x000000000007b911 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000034d81 : mov rsi, qword ptr [r13] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000a647a : mov rsi, qword ptr [rbx + 8] ; call 0x22766
0x000000000005c6e1 : mov rsi, qword ptr [rip + 0x33e888] ; call rax
0x0000000000054fee : mov rsi, qword ptr [rip + 0x345f7b] ; call rax
0x0000000000054992 : mov rsi, qword ptr [rip + 0x3465d7] ; call rax
0x00000000000497aa : mov rsi, qword ptr [rip + 0x3517bf] ; call rax
0x0000000000046b2e : mov rsi, qword ptr [rip + 0x35443b] ; call rax
0x0000000000041e29 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000108357 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000002151d : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000079270 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000ef790 : mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000fe538 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000078cd0 : mov rsi, qword ptr [rsp] ; jmp rax
0x0000000000077df9 : mov rsi, r12 ; mov rdi, r13 ; call 0x74058
0x000000000010b237 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000eedae : mov rsi, r13 ; call r14
0x000000000007b738 : mov rsi, r13 ; call rax
0x0000000000034e89 : mov rsi, r13 ; mov rdi, r12 ; call r14
0x000000000007b914 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000a6b31 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000a69a1 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000fb8a1 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000044bda : mov rsi, r14 ; mov rdi, r15 ; call rax
0x000000000011c28e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000030633 : mov rsi, rbp ; mov rdi, rbx ; call 0x7c868
0x000000000007b10a : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000c0004 : mov rsi, rbx ; call r12
0x000000000007b81b : mov rsi, rbx ; mov rdi, r13 ; call rax
0x0000000000112f3c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000011484a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x0000000000111b69 : mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000bffd5 : mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000011575d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000b27f2 : mov rsi, rdi ; xor edi, edi ; call rax
0x000000000010e669 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000f2717 : mov rsi, rdx ; call rax
0x0000000000114b04 : mov rsi, rsp ; call qword ptr [rax]
0x000000000010a8e4 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000330c8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000017f190 : mov sil, 0xf1 ; jmp rsi
0x000000000018b260 : mov sil, 0xf6 ; jmp rdi
0x0000000000032bd4 : mov ss, word ptr [rbx] ; add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00000000000df613 : mov word ptr [r8 + 0x21], si ; ret
0x000000000008e1f5 : mov word ptr [r9 - 2], cx ; ret
0x000000000017bbec : mov word ptr [rax + 0x79000000], ss ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000081d5d : mov word ptr [rax + rdx - 2], cx ; ret
0x0000000000040530 : mov word ptr [rax + rdx*8], fs ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000001165f5 : mov word ptr [rax - 0x39], cs ; ret
0x0000000000030632 : mov word ptr [rax - 0x77], cs ; out dx, al ; mov rdi, rbx ; call 0x7c869
0x0000000000171860 : mov word ptr [rax - 7], ss ; call rsp
0x0000000000094be0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x0000000000176bec : mov word ptr [rax], es ; add byte ptr [rax + 0x64], dh ; cli ; jmp qword ptr [rcx]
0x000000000017beec : mov word ptr [rbx + 0x7d300000], ss ; out dx, eax ; call qword ptr [rdx]
0x000000000017ceec : mov word ptr [rbx - 0x11700000], fs ; cld ; call qword ptr [rdx]
0x0000000000172a0c : mov word ptr [rbx], ds ; add dword ptr [rax], eax ; cmp al, 0xe3 ; std ; call rsp
0x00000000001417d2 : mov word ptr [rcx + 4], dx ; ret
0x0000000000141813 : mov word ptr [rcx + 8], dx ; ret
0x00000000001837ec : mov word ptr [rcx + rax], cs ; add al, ah ; sbb al, 0xf4 ; jmp qword ptr [rdi]
0x00000000001417a0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000141790 : mov word ptr [rcx], dx ; ret
0x000000000018b7e5 : mov word ptr [rcx], es ; add al, bh ; ret 0xfff6
0x000000000018b7b5 : mov word ptr [rcx], es ; add al, ch ; ret 0xfff6
0x000000000018b7cd : mov word ptr [rcx], es ; add al, dh ; ret 0xfff6
0x000000000018b7fd : mov word ptr [rcx], es ; add byte ptr [rax], al ; ret
0x000000000018b835 : mov word ptr [rcx], es ; add byte ptr [rax], bl ; ret
0x000000000016ddf0 : mov word ptr [rcx], gs ; in eax, dx ; call rsp
0x0000000000095afc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009694c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009448c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000983bc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000095c04 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000096a54 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000094574 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000984c4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000134387 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000036e72 : mov word ptr [rdi + 2], dx ; ret
0x000000000008d0e2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000967f8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000008cfe2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000943c8 : mov word ptr [rdi + 4], dx ; ret
0x0000000000098268 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009685a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000095a1a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009440a : mov word ptr [rdi + 8], dx ; ret
0x00000000000982ca : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000126662 : mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000012baac : mov word ptr [rdi - 2], cx ; ret
0x000000000012b8c4 : mov word ptr [rdi - 2], dx ; ret
0x000000000012baa8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000094393 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000095066 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000098c42 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000013438b : mov word ptr [rdi], cx ; ret
0x0000000000095983 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000967a3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000094383 : mov word ptr [rdi], dx ; ret
0x0000000000098213 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000001852ec : mov word ptr [rdi], fs ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dl ; jmp qword ptr [rcx]
0x000000000008d0a0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008d010 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000008e1f2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000012665f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000d9500 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000010dc4f : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000143b48 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009113d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000911c1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x0000000000143af3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000910d8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000e9d5c : mov word ptr [rdx], ax ; ret
0x0000000000192d92 : mov word ptr [rdx], cs ; ret
0x000000000017e243 : mov word ptr [rdx], es ; push rdx ; ret
0x000000000017dcfa : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000001738ec : mov word ptr [rip + 0x31e00000], cs ; jmp 0x1738fa
0x00000000001740ec : mov word ptr [rip + 0x78800000], ss ; std ; call qword ptr [rcx]
0x00000000000de5e5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000036ddf : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000036e26 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000098c45 : mov word ptr [rsi - 2], cx ; ret
0x00000000000d94e3 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001821a8 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x0000000000192d78 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; pop rsp ; add dword ptr [rdx], ecx ; ret
0x0000000000185af0 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; add ecx, dword ptr fs:[rdx] ; ret
0x000000000016f4d4 : mov word ptr [rsi], gs ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; pushfq ; call rsp
0x0000000000032de2 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000032f84 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000012665e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000006488f : movabs al, byte ptr [0x14882046348000f] ; ret 0xe2ff
0x000000000017c451 : movabs al, byte ptr [0x44380e0a02ed0301] ; ret
0x0000000000060a01 : movabs al, byte ptr [0x8348001f0fffffc3] ; ret 0xb908
0x0000000000105802 : movabs al, byte ptr [0x83481f74c085fff1] ; ret
0x000000000016bcf4 : movabs al, byte ptr [0xa0fffdc320fffdc2] ; ret
0x0000000000010ef0 : movabs al, byte ptr [0xd0000d0012000027] ; ret
0x0000000000065660 : movabs byte ptr [0x5c415d5be889fffb], al ; ret
0x00000000000a8819 : movabs dword ptr [0x148f68941000b70], eax ; ret 0x8d48
0x00000000000c4bbb : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x00000000000f9661 : movabs dword ptr [0x850fc18948002a31], eax ; ret 0xfffe
0x00000000000b3bb9 : movabs dword ptr [0x8948c08548fffff8], eax ; ret
0x0000000000002603 : movabs dword ptr [0xf19a27a8585af87c], eax ; ret
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x0000000000064161 : movabs eax, dword ptr [0x14882046348000f] ; ret 0xe2ff
0x000000000003635a : movabs eax, dword ptr [0x5b0006527ee80036] ; ret
0x00000000000453b4 : movabs eax, dword ptr [0xfffb6085c7fffffd] ; call qword ptr [rax]
0x0000000000032910 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000003270f : movapd xmm0, xmm1 ; ret
0x0000000000032911 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000000328ad : movaps xmm0, xmm1 ; jne 0x328c9 ; add rsp, 0x28 ; ret
0x0000000000032be8 : movaps xmm0, xmm1 ; jne 0x32c01 ; add rsp, 0x28 ; ret
0x0000000000032710 : movaps xmm0, xmm1 ; ret
0x000000000012a032 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012a02e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012a0dc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000032bb3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000032636 : movd mm0, eax ; ret
0x0000000000032635 : movd mm0, rax ; ret
0x000000000003270c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x0000000000032a9a : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x000000000003269f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000032a16 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003270b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x000000000003269e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000032bb2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000329ec : movd xmm0, eax ; ret
0x0000000000032a99 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000032a15 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000094460 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000095cbd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000096b0d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000095320 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009462d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000096d73 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000095563 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000013405f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133fef : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133f7f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133f0f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095c5d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000096aad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000945cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000133e9f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095c7d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000096acd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000945ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000133e2f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095c9d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000096aed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009460d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000013444f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001343df : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013436f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001342ff : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013428f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013421f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001341af : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013413f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001340cf : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000081cbc : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x81cd9 ; ret
0x0000000000081cd5 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000001335bb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000013362b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000095420 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x0000000000096914 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095ad4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000095147 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000094474 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000944b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000944a7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000094528 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000944e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000094508 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000094488 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000094629 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000945c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000945e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000094609 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000094464 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000098384 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000133e34 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000091222 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000091242 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000091262 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000910ac : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000091056 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000091223 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000091243 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000091263 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000910ad : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000091057 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000e3ccb : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0xe3c9f
0x00000000000e3ccc : movmskps eax, xmm0 ; and eax, 1 ; jmp 0xe3c9e
0x0000000000094461 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000095cbe : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000096b0e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000095321 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009462e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000009857e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000096d74 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000095564 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000985f4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000134060 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133ff0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133f80 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133f10 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095c5e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000096aae : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000945ce : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000009851e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000133ea0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095c7e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000096ace : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000945ee : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000009853e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000133e30 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095c9e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000096aee : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009460e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000009855e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000134450 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001343e0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134370 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134300 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134290 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134220 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001341b0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134140 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001340d0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000081cbd : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x81cd8 ; ret
0x0000000000081cd6 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000001335bc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000013362c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133d67 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133ce7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133c57 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133bd7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133b57 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133ad7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133a57 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001339d7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133957 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001338d7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133857 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001337d7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133747 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001336b7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133627 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000095421 : movq qword ptr [rdi - 1], mm0 ; ret
0x0000000000096915 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095ad5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000095148 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000094475 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000944c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009519b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000944b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000944a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000094529 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000944e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000094509 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000094489 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009462a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000945ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000945ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009460a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000094465 : movq qword ptr [rdi], mm0 ; ret
0x0000000000098385 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000133e35 : movq qword ptr [rdi], mm1 ; ret
0x0000000000032634 : movq xmm0, rax ; ret
0x000000000003270a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x000000000003269d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000230b8 : movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rax + rax], 0xeb ; ret 0x3145
0x0000000000192e04 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rdx] ; add byte ptr [rax], cl ; jb 0x192e0a ; call qword ptr [rax]
0x000000000017cfcd : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; adc al, ch ; out dx, eax ; call rax
0x00000000000c0884 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xc0817
0x000000000016dfb5 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; cld ; ret 0xffed
0x0000000000187804 : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; clc ; xlatb ; cmc ; call qword ptr [rax]
0x0000000000184f04 : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], ch ; cmc ; call qword ptr [rax]
0x000000000016cab9 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffca3]
0x000000000016c8f9 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call rsi
0x000000000016c8f5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; inc dword ptr [rsi - 0x5c] ; cld ; call rsi
0x000000000016d271 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rax
0x0000000000186704 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax - 0x62], bh ; cmc ; jmp qword ptr [rcx]
0x000000000016e82c : movsb byte ptr [rdi], byte ptr [rsi] ; fld qword ptr [rax] ; add byte ptr [rbx + rsi - 0x10], ch ; call rsp
0x000000000015b202 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000016d73c : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x16d746 ; add byte ptr [rsp + rdi*8], bl ; jmp 0x16d74a
0x000000000015c45d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x15c4b6 ; jmp 0x15c3f7
0x000000000016eb24 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; pushfq ; jbe 0x16eb22 ; call rsp
0x000000000016eb44 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; add byte ptr [rax], al ; pushfq ; jl 0x16eb42 ; jmp rsp
0x0000000000188504 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; add dword ptr [rax], eax ; cwde ; add dh, dh ; jmp qword ptr [rcx]
0x000000000016d38c : movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; add byte ptr [rax], al ; cmp bl, r13b ; call rsp
0x00000000001724fc : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; jl 0x1724c8 ; cli ; call rsp
0x0000000000188204 : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; mov ah, bh ; cmc ; jmp qword ptr [rcx]
0x000000000016fac4 : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; fsub st(6), st(0) ; hlt ; call rsp
0x0000000000032e27 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000005eb88 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 8
0x00000000001710dc : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], 1 ; add byte ptr [rax + rbp*2 - 8], bl ; call rsp
0x00000000000c7812 : movsb byte ptr [rdi], byte ptr [rsi] ; sti ; call rcx
0x000000000016f4bc : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0x95ec0001 ; call rsp
0x00000000000e3e32 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000000e3dde : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rax] ; pop rbp ; pop r12 ; ret
0x000000000016dd24 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edx ; add byte ptr [rax], al ; jl 0x16dcd7 ; in al, dx ; call rsp
0x000000000006cf0f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bf477 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000193992 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000016c96d : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x000000000016c8b1 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x000000000016c8ad : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x5b] ; cld ; call rax
0x000000000016c8ed : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x000000000016caad : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp rax
0x0000000000186a99 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rsi]
0x000000000015ca95 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000015c351 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000008d384 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000016e2c9 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, eax ; call rsp
0x0000000000042712 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000d51f7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 8
0x0000000000063177 : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, dword ptr [rax] ; pop rbx ; pop rbp ; ret
0x00000000000326a2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003266b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000a7c78 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000043aa3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000011c295 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000032a19 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000032a00 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000043a5d : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000eebff : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007df67 : movsx eax, dl ; ret
0x000000000008d164 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x8d161 ; ret
0x000000000008d2a4 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x8d2a1 ; xor eax, eax ; ret
0x00000000000eee82 : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0xeee78 ; ret
0x000000000008d1f4 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x8d1f9 ; ret
0x000000000008d120 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x8d121 ; ret
0x00000000000eee81 : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0xeee79 ; ret
0x000000000007c8e1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000131a3b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000129b0b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000008d070 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000ae50f : movsxd r9, dword ptr [rdx + r9*4] ; add rdx, r9 ; jmp rdx
0x000000000008cfd0 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000008cf07 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x0000000000079774 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x0000000000044e56 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x000000000005c430 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x0000000000064712 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000020dd3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000099207 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003663a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000123274 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000123138 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000012338d : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000012320d : movsxd rax, ecx ; ret
0x0000000000176989 : movsxd rbp, esp ; jmp rax
0x00000000001232b4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000041b80 : movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0x0000000000094a9a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000146f3d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000094229 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002a7d3 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000008734d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000110bd6 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000109b6e : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000cd822 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x0000000000064ea1 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x0000000000123129 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000123190 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000123157 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002c6a5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c535 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000129bdf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000bc4ce : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000ca905 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000b8f6b : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002cd41 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x00000000000794c7 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000550ed : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000b8bfb : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000c06cf : movsxd rdx, dword ptr [rbx + 4] ; jmp 0xc069c
0x000000000005c9c9 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000ab967 : movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x0000000000102121 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000099297 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000b0556 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000992cf : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000314ba : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00000000000b04f0 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x000000000015e88d : movsxd rsi, eax ; call qword ptr [rdi]
0x000000000016ea31 : movsxd rsi, eax ; call rsp
0x000000000015e889 : movsxd rsi, eax ; ljmp ptr [rbx - 0x10] ; call qword ptr [rdi]
0x0000000000170701 : movsxd rsi, edi ; call rsp
0x000000000014a8ac : movsxd rsi, esi ; ret 0x7520
0x00000000000df36a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000036ae9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000a7c79 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000043a5e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000043aa4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x0000000000036c71 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000326a3 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003266c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000032a01 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000010a807 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001151ab : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a38c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011ab27 : movzx eax, al ; add rsp, 8 ; ret
0x00000000000d09fe : movzx eax, al ; cmova eax, edx ; ret
0x00000000000a7625 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000b8ad6 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003300c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000abeaa : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000dbfe4 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006382c : movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000637f9 : movzx eax, al ; neg eax ; ret
0x000000000010f194 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000010b40a : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000b281b : movzx eax, al ; pop rbx ; ret
0x0000000000033b09 : movzx eax, al ; ret
0x000000000002c305 : movzx eax, ax ; ret
0x00000000000694ad : movzx eax, bh ; ret
0x00000000000718c6 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072bb6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007175d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070ad7 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000006f742 : movzx eax, byte ptr [rax] ; ret
0x00000000000d3f00 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000007dc78 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000146f50 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000081710 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000007dc93 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000071770 : movzx eax, byte ptr [rdx] ; ret
0x00000000000718c7 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099227 : movzx eax, cl ; pop rbx ; ret
0x00000000000f7ded : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00000000000694ac : movzx eax, dil ; ret
0x000000000009924f : movzx eax, dl ; pop rbx ; ret
0x00000000000f7dfb : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000000f7dec : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002c4be : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000d94e0 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000009879a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x98799 ; ret
0x000000000009884a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x98849 ; ret
0x0000000000147df4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000007dc90 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000146f53 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000e8e22 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000031a3f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x31a27 ; ret
0x00000000000b985b : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xb9840 ; xor eax, eax ; ret
0x000000000008dd61 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000011d8ef : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000008dbf3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000014a8d4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000014a934 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000014a924 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000014a914 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000014a904 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000014a8f4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000014a8e4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000133d80 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000147ba7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000014a8bb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000134460 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000081713 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000081739 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000133d00 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001343f0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000009b121 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000dbda4 : movzx rax, al ; ret
0x000000000016c904 : mul byte ptr [rdx - 0x5d790004] ; cld ; call qword ptr [rsi]
0x0000000000080097 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000011a1ed : mul dword ptr [rdi] ; add bl, dh ; ret
0x0000000000032731 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000032abf : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000032730 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000032abe : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000066967 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000111c03 : neg eax ; add rsp, 0x18 ; ret
0x0000000000111f2a : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000020913 : neg eax ; mov dword ptr fs:[r9], eax ; jmp 0x208e4
0x0000000000033547 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000c03e5 : neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbfe7 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006382f : neg eax ; pop rbx ; ret
0x0000000000020f3d : neg eax ; ret
0x000000000007b431 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000747f2 : neg ebx ; mov rdi, rbx ; call qword ptr [r14]
0x00000000000dab31 : neg edx ; cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x00000000000747f1 : neg rbx ; mov rdi, rbx ; call qword ptr [r14]
0x00000000000cc99a : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x000000000006b7e8 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001334b7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000a8160 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3934245c], cl ; ret
0x0000000000020883 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000017bbed : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x11], bh ; jmp qword ptr [rbx]
0x000000000014725c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000023aa3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000017bbd5 : nop ; add byte ptr [rax], al ; call 0x2317ab5b
0x000000000016dcc5 : nop ; add byte ptr [rax], al ; sub al, 0x9c ; in al, dx ; jmp rsp
0x0000000000175ec0 : nop ; add ch, ah ; call qword ptr [rcx]
0x00000000000e03cd : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000adcd5 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0xf40
0x00000000000b2421 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001786b5 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1786cd ; ret
0x000000000017c3c6 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x00000000001786c3 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000175f90 : nop ; add ebp, esp ; jmp qword ptr [rsi]
0x0000000000044e59 : nop ; add rax, rdi ; jmp rax
0x00000000000550f0 : nop ; add rax, rdx ; jmp rax
0x000000000009929a : nop ; add rax, rsi ; jmp rax
0x00000000000a64ef : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006313f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000216ef : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006f1af : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000006d08f : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000008156f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008d70f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000008d89f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000011c96f : nop ; call qword ptr [rax]
0x0000000000160549 : nop ; cmc ; call qword ptr [rcx]
0x0000000000160595 : nop ; cmc ; call rcx
0x0000000000160591 : nop ; cmc ; inc edi ; nop ; cmc ; call rcx
0x000000000016059d : nop ; cmc ; jmp rdi
0x000000000016c37c : nop ; cmp ah, bh ; jmp rax
0x000000000016c8a4 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp qword ptr [rax]
0x0000000000032f0f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x000000000016c604 : nop ; jae 0x16c606 ; call qword ptr [rax]
0x000000000016c60c : nop ; jb 0x16c60e ; call qword ptr [rax]
0x000000000016c5ec : nop ; jbe 0x16c5ee ; call qword ptr [rax]
0x000000000016c5fc : nop ; je 0x16c5fe ; call qword ptr [rax]
0x000000000016c3b8 : nop ; jle 0x16c3ba ; jmp qword ptr [rax]
0x000000000016c5f4 : nop ; jne 0x16c5f6 ; call qword ptr [rax]
0x000000000016c5d0 : nop ; jnp 0x16c5d2 ; jmp qword ptr [rax]
0x00000000000bca5c : nop ; loope 0xbca67 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000016bfe4 : nop ; loopne 0x16bfe5 ; jmp rax
0x0000000000187a70 : nop ; loopne 0x187a6b ; call qword ptr [rdx]
0x00000000000ca90f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000012b6df : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000f440f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000012b8bf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000da3af : nop ; mov eax, 0x5f ; syscall ; ret
0x00000000000c1f4f : nop ; mov eax, 0xc ; pop rbx ; ret
0x00000000000b892f : nop ; mov eax, 0xfffa ; ret
0x0000000000028eef : nop ; mov eax, 0xffffffff ; ret
0x000000000009b38f : nop ; mov eax, 1 ; ret
0x00000000001139af : nop ; mov eax, 2 ; ret
0x00000000000f367e : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00000000000f2b4f : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000009a23f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9a2a9 ; ret
0x000000000009a28f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9a2a9 ; ret
0x00000000000df34f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000006f6df : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000eae6f : nop ; mov eax, edi ; ret
0x00000000000f7d8f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000033f1f : nop ; mov eax, edx ; ret
0x000000000016bb8c : nop ; mov ebx, edi ; jmp rax
0x000000000012bc7f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009599f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000064cdf : nop ; mov qword ptr [rdi], rcx ; ret
0x000000000006fb0f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000006ecaf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000006eb9f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000114a1f : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000114aff : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000ff4ef : nop ; mov rax, qword ptr [rip + 0x29d381] ; ret
0x00000000000bbfbf : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d2af : nop ; mov rax, rdi ; ret
0x00000000000f33a5 : nop ; mov rdx, r14 ; call rax
0x000000000007926f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000d94ff : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000009445f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000079773 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000d94df : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000016c1b0 : nop ; or al, 0xfc ; jmp rax
0x0000000000173560 : nop ; or ebx, ebp ; jmp qword ptr [rsi]
0x0000000000176170 : nop ; or esp, ebp ; jmp qword ptr [rax]
0x00000000000d99ec : nop ; out 0xfd, eax ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000017cef0 : nop ; out dx, al ; cld ; call qword ptr [rdx]
0x000000000016bfd0 : nop ; out dx, al ; sti ; jmp rax
0x000000000017a920 : nop ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000043d8f : nop ; pop rbx ; ret
0x00000000000fda8f : nop ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000091a0 : nop ; pop rcx ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016bb10 : nop ; push rax ; sti ; push qword ptr [rax] ; push rdx ; sti ; call rax
0x000000000017b0a0 : nop ; push rbp ; out dx, eax ; call qword ptr [rax]
0x0000000000185350 : nop ; push rcx ; cmc ; jmp qword ptr [rcx]
0x000000000000ba68 : nop ; ret
0x0000000000008138 : nop ; ret 0x10
0x0000000000018220 : nop ; ret 0x14
0x0000000000002f9e : nop ; ret 0x5bdb
0x00000000000a64cc : nop ; ret 0xfff7
0x0000000000186720 : nop ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000016c19c : nop ; sbb bh, ah ; call rax
0x0000000000187f10 : nop ; stc ; cmc ; jmp qword ptr [rcx]
0x000000000016baf0 : nop ; sti ; push qword ptr [rax] ; sti ; call rax
0x000000000016c138 : nop ; sub ah, bh ; call qword ptr [rax + 0x20fffc2a]
0x000000000016c13c : nop ; sub bh, ah ; jmp qword ptr [rax]
0x000000000016c0bc : nop ; sub edi, esp ; jmp qword ptr [rax]
0x000000000007342f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000189130 : nop ; sub esi, esi ; call rdi
0x000000000016c0b8 : nop ; sub esp, edi ; call qword ptr [rax + 0x20fffc2b]
0x0000000000187730 : nop ; xlatb ; cmc ; call qword ptr [rdx]
0x00000000000b2b0f : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001059cf : nop ; xor eax, eax ; pop rbx ; ret
0x000000000006c65f : nop ; xor eax, eax ; ret
0x000000000016c328 : nop ; xor esp, edi ; jmp rax
0x00000000000815ef : nop ; xor rax, rax ; ret
0x000000000014b783 : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000011cc28 : nop dword ptr [rax + rax] ; call rcx
0x0000000000032eb3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000006a94b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000068213 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x000000000009439b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011ca1b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000f36e3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000031c8b : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009560b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000001088bb : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000646a3 : nop dword ptr [rax + rax] ; ret
0x00000000000362eb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000035a93 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000011af1b : nop dword ptr [rax + rax] ; xor edi, edi ; call 0xb7179
0x000000000009a2ab : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000063955 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000009a57c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000014bec5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000004cbe5 : nop dword ptr [rax] ; call 0x68e65
0x000000000014c509 : nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000009ae75 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009ae65 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ae6d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000b8925 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x0000000000033f14 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000007c135 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x00000000000b39ad : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x000000000006b484 : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002c50d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000009506d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000006e4ad : nop dword ptr [rax] ; mov edx, eax ; jmp 0x6e43a
0x00000000000d5475 : nop dword ptr [rax] ; mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x0000000000087474 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00000000000b989c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000078bdc : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000014c0ec : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a648c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000010a9f5 : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002a6e1 : nop dword ptr [rax] ; ret
0x000000000007937d : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000c4b8d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000033dfd : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000003284d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000095027 : nop dword ptr cs:[rax + rax] ; ret
0x000000000011cc27 : nop word ptr [rax + rax] ; call rcx
0x0000000000032eb2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000006a94a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000031c8a : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009560a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000001088ba : nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000000646a2 : nop word ptr [rax + rax] ; ret
0x00000000000362ea : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000035a92 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009a2aa : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000aaeee : not eax ; add eax, 0x16e ; ret
0x0000000000115b91 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000c4ad2 : not eax ; and eax, 2 ; ret
0x0000000000032570 : not eax ; and eax, edx ; ret
0x0000000000033b43 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000215a1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000033b42 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000f0f83 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011e867 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122479 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e895 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000e61a : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000dfcea : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000076f58 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000c1df3 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000c2bee : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1f51 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007c850 : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000007743a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000378de : or al, 0 ; add byte ptr [rbp + 0x3d], dh ; add rsp, 8 ; ret
0x000000000004c5af : or al, 0 ; add cl, bl ; in eax, 0xdf ; loopne 0x4c548 ; ret 0xe680
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000336f5 : or al, 0 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099205 : or al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000007c5ef : or al, 0 ; ret
0x00000000000883f2 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x883e9 ; ret
0x000000000007dc76 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000c5e1d : or al, 0x24 ; mov qword ptr [rsp + 0x20], rbp ; call 0xc20a9
0x00000000001128fb : or al, 0x24 ; pop rbp ; pop r12 ; ret
0x00000000000aa365 : or al, 0x28 ; mov rdx, rax ; jmp 0xaa374
0x000000000007e680 : or al, 0x2c ; add dword ptr [rax], eax ; ret
0x0000000000171f38 : or al, 0x30 ; cli ; call rsp
0x00000000000e795a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x000000000010efdb : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000017606c : or al, 0x35 ; add byte ptr [rax], al ; loopne 0x17607e ; in al, dx ; jmp rsp
0x000000000017616c : or al, 0x36 ; add byte ptr [rax], al ; nop ; or esp, ebp ; jmp qword ptr [rax]
0x00000000000bd9a8 : or al, 0x39 ; ret 0xef7c
0x00000000000b7052 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003360c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000c2475 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003663e : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000b45cb : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c920 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000068fb3 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000a9243 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000101711 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000065fcb : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000171fe0 : or al, 0x49 ; cli ; call rsp
0x0000000000101c23 : or al, 0x4c ; cmp edx, eax ; jne 0x101c10 ; ret
0x0000000000187a6c : or al, 0x4f ; add dword ptr [rax], eax ; nop ; loopne 0x187a6f ; call qword ptr [rdx]
0x0000000000187d6c : or al, 0x52 ; add dword ptr [rax], eax ; and al, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000187f6c : or al, 0x54 ; add dword ptr [rax], eax ; loopne 0x187f72 ; cmc ; call qword ptr [rax]
0x000000000018806c : or al, 0x55 ; add dword ptr [rax], eax ; loopne 0x188073 ; cmc ; jmp qword ptr [rcx]
0x00000000000b2893 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e073 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000a7a82 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x00000000000f403a : or al, 0x5d ; pop r12 ; ret
0x00000000000c2048 : or al, 0x74 ; and eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000081168 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000016ffa4 : or al, 0x7c ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff6
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000094a9c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000454c6 : or al, 0x83 ; ret
0x000000000004ab5c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000004e01c : or al, 0x85 ; sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000008d072 : or al, 0x88 ; add rax, r9 ; jmp rax
0x000000000008734f : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000002a7d5 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00000000000f789b : or al, 0x89 ; ret 0x6ae9
0x0000000000041b82 : or al, 0x8a ; add rcx, r10 ; jmp rcx
0x00000000000ae511 : or al, 0x8a ; add rdx, r9 ; jmp rdx
0x0000000000109b70 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000007c8e3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000846c4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000131a3d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000129b0d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000eae68 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000cd824 : or al, 0x8e ; add rcx, rsi ; jmp rcx
0x0000000000064ea3 : or al, 0x8e ; add rsi, rcx ; jmp rsi
0x0000000000146f3f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009422b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000016dfb0 : or al, 0x96 ; in eax, dx ; ljmp ptr [rsp] ; add byte ptr [rax], al ; cld ; ret 0xffed
0x0000000000193991 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000016e2c8 : or al, 0xa5 ; out dx, eax ; call rsp
0x0000000000002bce : or al, 0xaf ; xbegin 0xfffffffff8c6efd2 ; ret
0x0000000000129b11 : or al, 0xb ; jmp r9
0x000000000009422f : or al, 0xb ; jmp rcx
0x0000000000110bd8 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x0000000000115e27 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000110bee : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000016e410 : or al, 0xc7 ; out dx, eax ; call rsp
0x00000000001725e8 : or al, 0xd1 ; cli ; jmp rsp
0x0000000000062ed7 : or al, 0xe8 ; ret
0x000000000018146c : or al, 0xe9 ; add byte ptr [rax], al ; mov al, 0x28 ; call rdi
0x00000000001726b0 : or al, 0xef ; cli ; call rsp
0x000000000009a195 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000094d23 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000133f83 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000033573 : or al, 0xf3 ; ret
0x0000000000184869 : or al, 0xf5 ; call rdi
0x0000000000065133 : or al, 0xf6 ; ret 0xf04
0x000000000004f9cc : or al, 0xf6 ; ret 0xf08
0x0000000000029eb2 : or al, 0xf8 ; test rcx, rcx ; je 0x29ec2 ; call rcx
0x000000000016c1b1 : or al, 0xfc ; jmp rax
0x00000000001837ed : or al, 1 ; add al, ah ; sbb al, 0xf4 ; jmp qword ptr [rdi]
0x00000000000d9cd2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000d9dc2 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016efed : or al, 1 ; add byte ptr [rsi + rsi*4 - 0xf], bl ; jmp rsp
0x00000000001937c5 : or al, 2 ; add byte ptr [rax], bh ; xchg eax, edx ; clc ; jmp qword ptr [rsi]
0x00000000001727d8 : or al, 2 ; sti ; jmp rsp
0x0000000000094f60 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000034dc6 : or al, 7 ; mov qword ptr [rsp + 0x10], r9 ; call r14
0x000000000008d166 : or al, 7 ; test cl, cl ; jne 0x8d15f ; ret
0x00000000000e5558 : or al, 8 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000011da3d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120651 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011da61 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000041b0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x27
0x00000000000d7d19 : or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x43fb6
0x00000000000fda48 : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109bb2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000000d051 : or al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rax], ah ; add al, bl ; ret
0x0000000000081be9 : or al, byte ptr [rax] ; cmove rax, rdx ; ret
0x00000000000bff79 : or al, byte ptr [rax] ; mov edx, 0x17c ; call 0x2c239
0x00000000000bff5a : or al, byte ptr [rax] ; mov edx, 0x182 ; call 0x2c239
0x00000000000bff98 : or al, byte ptr [rax] ; mov edx, 0x1b4 ; call 0x2c239
0x00000000000bca75 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000bc4cc : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000b8f69 : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000007ddef : or al, byte ptr [rax] ; ret
0x000000000009ac3a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000e4790 : or al, byte ptr [rcx + 0xf] ; lahf ; ret 0x8545
0x000000000006748d : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x00000000001039d9 : or al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000f73c2 : or al, byte ptr [rdx + rdi*8 - 1] ; add rsp, 0x28 ; ret
0x0000000000193645 : or al, byte ptr [rdx] ; add byte ptr [rax - 0x6f], bh ; clc ; call qword ptr [rdi]
0x00000000000bca74 : or al, byte ptr ds:[rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000125a37 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e1195 : or al, ch ; cmc ; sar cl, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a64ca : or al, ch ; nop ; ret 0xfff7
0x00000000000a0c37 : or al, ch ; ret
0x000000000007dfc8 : or al, ch ; ret 2
0x00000000001076f2 : or al, ch ; sbb byte ptr [rcx - 0x76b7000f], al ; ret
0x000000000017d439 : or al, dh ; call qword ptr [rax]
0x000000000016c16d : or bh, ah ; jmp qword ptr [rax]
0x000000000008db7b : or bh, bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000001153d7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007dfa1 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x000000000006f00d : or bh, byte ptr [rax - 1] ; ret
0x000000000001f90b : or bh, byte ptr [rax] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000a634f : or bh, byte ptr [rcx] ; ret
0x00000000000c7914 : or bh, dh ; ret
0x00000000000e295f : or bh, dh ; ret 0xfc07
0x00000000001186ce : or bl, al ; mov dword ptr [rsi], eax ; mov eax, 0xffffffff ; ret
0x000000000010765e : or bl, al ; mov eax, 1 ; ret
0x00000000000ef01d : or bl, al ; nop ; mov eax, 1 ; ret
0x000000000009ae73 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000e481b : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000102493 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001022f0 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000000022dc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6e ; ret
0x0000000000089325 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d06b8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x00000000000f7d7d : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x000000000006f8c8 : or bl, ch ; xchg eax, edx ; mov edx, eax ; jmp 0x6f864
0x0000000000134143 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002c06f : or bl, dh ; ret
0x00000000001762c0 : or bpl, spl ; call qword ptr [rsi]
0x00000000000c0158 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000001087e8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000c00d1 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000031c2d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000911bf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000c00c2 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000c018e : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x000000000006b997 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000c06cd : or byte ptr [r8 + 0x63], cl ; push rbx ; add al, 0xeb ; ret 0xffb8
0x00000000000c4af2 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000c01a1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011534a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000009119e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x000000000013f798 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010a8e2 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000112f3a : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000035ac2 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000000e4afa : or byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000bad92 : or byte ptr [r8 - 0x7d], r9b ; ret 0x4808
0x0000000000125c12 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ca6f4 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000911fe : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000117ed4 : or byte ptr [r9], dil ; ret 0x4675
0x00000000000c0131 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000c00f1 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000001082a3 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000006b998 : or byte ptr [rax + 0x29], cl ; ret
0x000000000010b916 : or byte ptr [rax + 0x31], cl ; ret 0xe281
0x00000000000737b7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000000b56b2 : or byte ptr [rax + 0x39], cl ; ret
0x000000000007ad21 : or byte ptr [rax + 0x39], cl ; ret 0x6174
0x0000000000076e36 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000003bf42 : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x00000000000ec6fe : or byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x00000000000c06ce : or byte ptr [rax + 0x63], cl ; push rbx ; add al, 0xeb ; ret 0xffb8
0x000000000010eec9 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000c4af3 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x000000000018110a : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001876c4 : or byte ptr [rax + 0xb], cl ; ret
0x00000000001840f5 : or byte ptr [rax + 0xb], dl ; ret
0x00000000000a7f16 : or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x00000000000bebea : or byte ptr [rax + 0xf], 0xa3 ; ret 0xa73
0x00000000000bce2f : or byte ptr [rax + 0xf], 0xa3 ; ret 0xb73
0x00000000000f7deb : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000022973 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000002f0a7 : or byte ptr [rax + 1], cl ; ret
0x00000000000e67be : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x00000000000f239b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000c01a2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000014c630 : or byte ptr [rax - 0x13], cl ; jmp qword ptr [rax]
0x00000000000c9efd : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000081612 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x0000000000086e9d : or byte ptr [rax - 0x73], cl ; add eax, 0x6fbb ; ret
0x0000000000086e6e : or byte ptr [rax - 0x73], cl ; add eax, 0x721a ; ret
0x000000000009aea6 : or byte ptr [rax - 0x73], cl ; add eax, 0xad6b2 ; ret
0x0000000000081626 : or byte ptr [rax - 0x73], cl ; add eax, 0xc58f2 ; ret
0x000000000009ae92 : or byte ptr [rax - 0x73], cl ; add eax, 0xc726 ; ret
0x0000000000081d9e : or byte ptr [rax - 0x73], cl ; add eax, 0xca3a ; ret
0x000000000009a2d2 : or byte ptr [rax - 0x73], cl ; add eax, 0xd396 ; ret
0x00000000000f4dce : or byte ptr [rax - 0x73], cl ; add eax, 0xfff992aa ; ret
0x00000000000f4ebe : or byte ptr [rax - 0x73], cl ; add eax, 0xfff9990a ; ret
0x0000000000074e83 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000000ea461 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000ea4c2 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000011534b : or byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000065ff7 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000109b8d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000110b82 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000009119f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00000000000f2c24 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000910b0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000f7aa8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000030619 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000112f3b : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000001148ee : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000c1dbb : or byte ptr [rax - 0x77], cl ; jo 0xc1de7 ; xor eax, eax ; ret
0x000000000013f799 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010a8e3 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000001099cb : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000037d36 : or byte ptr [rax - 0x77], cl ; ret
0x000000000010bba3 : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x00000000001151df : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000d60ab : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010bfc7 : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000035ac3 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e1eef : or byte ptr [rax - 0x77], cl ; ret 0xf88
0x00000000000c1dba : or byte ptr [rax - 0x77], r9b ; jo 0xc1de8 ; xor eax, eax ; ret
0x000000000007c12d : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x000000000007c1d7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000007c429 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000076e32 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc240b649
0x0000000000076e31 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc240b64a
0x0000000000077678 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000042967 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000087506 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008758e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000006684e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000000bad93 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000008b848 : or byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000004e042 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000115d4d : or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000f8042 : or byte ptr [rax - 0x7d], cl ; ret 0x901
0x00000000000c4238 : or byte ptr [rax - 0x7f], cl ; ret
0x0000000000185768 : or byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000185628 : or byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x000000000006850b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000006ba4d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000011dc9c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e6652 : or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000001733b5 : or byte ptr [rax], al ; add al, ch ; add ebx, ebp ; jmp rbx
0x00000000000d34f1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000011dc9d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001207f1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011dcc1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000a8607 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00000000000729cc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000073ffe : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000018218 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x14
0x000000000001c040 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1636
0x0000000000019f40 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x163e
0x000000000001aa98 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1646
0x0000000000021569 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000992d9 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000109bc2 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c9178 : or byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x00000000000f0da4 : or byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x000000000006d084 : or byte ptr [rax], al ; add rsp, 0x80 ; ret
0x0000000000043f08 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000d6f25 : or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d7882 : or byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000111c60 : or byte ptr [rax], al ; setne al ; add rsp, 0x78 ; ret
0x00000000000982cd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009830b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000982ab : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000630bb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000012420e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004248c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00000000001021bf : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x000000000017c7e1 : or byte ptr [rbp + 0xb], al ; ret
0x000000000017b1e9 : or byte ptr [rbp + 0xb], cl ; ret
0x00000000000c26c4 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x0000000000106544 : or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x00000000000a7662 : or byte ptr [rbp - 0x28], dh ; ret
0x00000000000c317f : or byte ptr [rbp - 0x72b700be], cl ; ret
0x000000000009ad59 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000018d1e8 : or byte ptr [rbp - 9], al ; jmp qword ptr [rdi]
0x0000000000003cdf : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000001fbe2 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000010aa8b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x000000000006a062 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000022d3b : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007c1af : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000216f3 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000070a6a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x0000000000174245 : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x0000000000031c2e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000498f7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00000000001173ee : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000656d1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000000ce873 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000068b37 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001896d8 : or byte ptr [rbx - 0xa], al ; call rsi
0x0000000000189bd8 : or byte ptr [rbx - 0xa], dl ; jmp qword ptr [rcx]
0x0000000000175f48 : or byte ptr [rbx], al ; in al, dx ; jmp qword ptr [rsi]
0x00000000000438db : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000077eb8 : or byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000000ce832 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000011b965 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000cde73 : or byte ptr [rcx + 0x63], cl ; or al, 0x8a ; add rcx, r10 ; jmp rcx
0x00000000000ca6f5 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x0000000000192bef : or byte ptr [rcx + 0xb], al ; pop rcx ; ret
0x00000000001780fa : or byte ptr [rcx + 0xb], cl ; ret
0x0000000000037c35 : or byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8545
0x000000000004219b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000042d70 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000001181c3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000000fe53c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000006eadd : or byte ptr [rcx + rcx*4 - 9], al ; call 0xdad46
0x00000000000421a2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000006ee1a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000c268c : or byte ptr [rcx - 0x75], cl ; je 0xc26bc ; or byte ptr [rcx], ch ; ret
0x00000000000911ff : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000311a6 : or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x00000000000ea538 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xea54a ; ret
0x00000000000ea5c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xea5da ; ret
0x00000000000ea668 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xea67a ; ret
0x00000000000ea6f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xea70a ; ret
0x00000000000ea788 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xea79a ; ret
0x00000000000ea818 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xea82a ; ret
0x00000000000ea8b8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xea8ca ; ret
0x00000000000ea958 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xea96a ; ret
0x00000000000ea9f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeaa0a ; ret
0x00000000000eaa88 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeaa9a ; ret
0x00000000000eab23 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeab35 ; ret
0x00000000000eabb8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeabca ; ret
0x00000000000eaeda : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeaeec ; ret
0x00000000000eaf5a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeaf6c ; ret
0x00000000000eafda : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeafec ; ret
0x00000000000eb05a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb06c ; ret
0x00000000000eb0da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb0ec ; ret
0x00000000000eb15a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb16c ; ret
0x00000000000eb1da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb1ec ; ret
0x00000000000eb25a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb26c ; ret
0x00000000000eb2da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb2ec ; ret
0x00000000000eb35a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb36c ; ret
0x00000000000eb3d7 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb3e9 ; ret
0x00000000000eb45a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeb46c ; ret
0x0000000000077d97 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000008b018 : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000008bcae : or byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000008a801 : or byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x0000000000038adb : or byte ptr [rcx - 0x7d], cl ; ret 0x8508
0x00000000000cefea : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x000000000017ed38 : or byte ptr [rcx - 0xf], bl ; call rsp
0x000000000017db68 : or byte ptr [rcx - 6], bl ; call qword ptr [rax]
0x000000000016c168 : or byte ptr [rcx], 0xfc ; call rax
0x000000000016ef3d : or byte ptr [rcx], al ; add ah, bh ; push rcx ; int1 ; jmp rsp
0x00000000000d9ce2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003374e : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000d9dd4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c0177 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000c00f2 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x000000000004cde3 : or byte ptr [rcx], al ; ret 0x2941
0x00000000000a765f : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x0000000000117ac2 : or byte ptr [rcx], bh ; ret 0x2175
0x0000000000117ed5 : or byte ptr [rcx], bh ; ret 0x4675
0x00000000000c0132 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000a63cd : or byte ptr [rcx], ch ; ret
0x00000000000f4640 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000002281e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000ce18b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007346f : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000041108 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000117ac1 : or byte ptr [rcx], dil ; ret 0x2175
0x000000000015cd1e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001813f4 : or byte ptr [rdi + 0xb], al ; add ch, byte ptr [rsi + rcx + 0x38] ; ret
0x000000000017997c : or byte ptr [rdi + 0xb], al ; jo 0x179990 ; ret
0x00000000001798ba : or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000177551 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xab20202], al ; ret
0x00000000000d20c3 : or byte ptr [rdi], 0x84 ; and eax, 0x8900000c ; ret 0x894c
0x000000000002c304 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000042937 : or byte ptr [rdi], cl ; mov cs, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000724d9 : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000006f741 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000006f7ab : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000010b409 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000003f578 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000012a0db : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000000414bf : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x000000000004791b : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000002076a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000008ad58 : or byte ptr [rdi], dh ; ret
0x000000000008ad57 : or byte ptr [rdi], sil ; ret
0x000000000017b4bd : or byte ptr [rdx + 0xb], al ; add ebx, dword ptr [rax] ; add dword ptr [rdx], ecx ; ret
0x0000000000174cca : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x000000000017bd68 : or byte ptr [rdx - 0x11], bh ; jmp qword ptr [rax]
0x00000000001778e8 : or byte ptr [rdx - 0x13], cl ; call qword ptr [rcx]
0x0000000000192e08 : or byte ptr [rdx - 8], dh ; call qword ptr [rax]
0x00000000000c00d2 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000c0159 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000001087e9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000001634f0 : or byte ptr [rdx], ch ; sti ; call qword ptr [rax]
0x00000000000df352 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000df351 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000c01c5 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000093db1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000c4bd1 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x00000000000911c0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000c018f : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000c00c3 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003cde : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000176279 : or ch, ah ; call qword ptr [rsi]
0x00000000000891a1 : or ch, bl ; ret 0x1f0f
0x00000000001939af : or ch, byte ptr [rdi + 5] ; ret
0x00000000000415bf : or cl, al ; call 0xffffffffc28d56eb
0x0000000000032e3b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000a7707 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000028d44 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x000000000009a7a5 : or cl, byte ptr [rax + 0x39] ; sal byte ptr [rbp - 0x1b], 1 ; xor eax, eax ; ret
0x000000000007174e : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000706a7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000ce9f6 : or cl, byte ptr [rax - 0x77] ; ret 0xd1e8
0x00000000000acf37 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006792c : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000008086a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ca5cf : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00000000000641a4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000074154 : or cl, byte ptr [rbp + 0x39] ; ret
0x00000000000c46b4 : or cl, byte ptr [rbp + 0x63] ; ret
0x000000000006a027 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000000f7e25 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000001f943 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000011776f : or cl, byte ptr [rcx + 0x39] ; ret
0x00000000000f082f : or cl, byte ptr [rcx - 0x7d] ; ret 0x4801
0x00000000000d0a3c : or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x00000000000f7da5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x00000000001416c6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000001173f1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000334c7 : or cl, ch ; ret
0x000000000005f7b1 : or cl, ch ; ret 0xffde
0x0000000000002beb : or cl, cl ; clc ; ret
0x0000000000080325 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000187278 : or dh, al ; cmc ; jmp qword ptr [rdx]
0x0000000000134063 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e5ac5 : or dh, bl ; ret
0x0000000000099456 : or dh, byte ptr [rbp - 0x11] ; ret
0x0000000000160195 : or dh, ch ; jmp rax
0x0000000000076af3 : or dh, dh ; ret 0x7404
0x00000000000da6d3 : or dh, dh ; ret 0x7540
0x000000000002d611 : or dh, dh ; ret 0x75df
0x000000000010a0b4 : or dh, dh ; ret 0x8802
0x0000000000076a66 : or dh, dh ; ret 0xf04
0x000000000001fe42 : or dh, dh ; ret 0xf08
0x000000000002d5e3 : or dh, dh ; ret 0xfdf
0x0000000000160f14 : or dl, 0xf6 ; jmp qword ptr [rdx]
0x000000000016cdb8 : or dl, 0xfc ; call qword ptr [rax]
0x000000000002c2ad : or dword ptr [rax + 0x13], edi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010db33 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x00000000000a5ea5 : or dword ptr [rax - 0x7d], 0x394801c0 ; ret 0xf175
0x00000000000a662b : or dword ptr [rax - 0x7d], 0x834801c1 ; ret 0x8801
0x0000000000020c06 : or dword ptr [rax - 0x7d], 0x834801c2 ; ret
0x00000000000ee7c9 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc3482fd9
0x00000000000f01ef : or dword ptr [rax - 0x7d], ecx ; ret
0x000000000008b753 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000007c5be : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000383f6 : or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000011dbcd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001240bf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011db27 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000010af2 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006b5af : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000020f4a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000d9318 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003d6b2 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000093305 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000cb8dd : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c8a56 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000148376 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000000e9d6e : or dword ptr [rbx + 0x28901c0], eax ; ret
0x000000000010a316 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000ee076 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070af8 : or dword ptr [rbx], 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000066006 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070470 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000073c18 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000425dc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000007df18 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x000000000006909e : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000079fb6 : or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000079dd6 : or dword ptr [rcx - 0x7d], ecx ; sti ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000c1d50 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000033b23 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x0000000000066010 : or dword ptr [rdi], 0x20 ; ret
0x00000000000df407 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000033c66 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000fb99b : or dword ptr [rdi], ecx ; ret
0x00000000001416a6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000038e99 : or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x000000000007dec2 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00000000000e399a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e3f1a : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000186052 : or dword ptr [rsi], 0x54028310 ; ret
0x00000000000df7fa : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000325db : or eax, 0x138b90 ; orpd xmm0, xmm1 ; ret
0x0000000000160395 : or eax, 0x1b38fff5 ; cmc ; jmp rcx
0x0000000000095c61 : or eax, 0x1c478d48 ; ret
0x0000000000096ab1 : or eax, 0x1d478d48 ; ret
0x0000000000141728 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000173865 : or eax, 0x25380000 ; jmp 0x173871
0x00000000000df7b1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000001738ed : or eax, 0x31e00000 ; jmp 0x1738f9
0x000000000008b0a2 : or eax, 0x358d4800 ; ret 0xd9e
0x00000000000b40cf : or eax, 0x48000687 ; mov eax, ebx ; call rax
0x0000000000088e52 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000ab61a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00000000000aae7f : or eax, 0x48ffffd7 ; add esp, 0x18 ; ret
0x00000000000631b2 : or eax, 0x5bd88948 ; ret
0x0000000000094d45 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000011e777 : or eax, 0x83480000 ; ret 0x4910
0x0000000000120311 : or eax, 0x83480000 ; ret 0xe910
0x000000000011e7a5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000e249d : or eax, 0x834820eb ; ret
0x00000000000e0d5b : or eax, 0x85480000 ; ror byte ptr [rax - 0x73], 0x15 ; ret
0x00000000000963f9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x00000000000364af : or eax, 0x89000004 ; ret 0x3d83
0x000000000006658a : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000803a2 : or eax, 0x8c48348 ; ret
0x0000000000193865 : or eax, 0x97380002 ; clc ; call qword ptr [rcx]
0x0000000000160191 : or eax, 0xa7dfff5 ; cmc ; jmp rax
0x00000000000692a4 : or eax, 0xc2890000 ; jmp 0x6923e
0x000000000004e22f : or eax, 0xd9000003 ; in eax, 0xdf ; loopne 0x4e1ca ; ret 0xe680
0x0000000000154479 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000016c175 : or eax, 0xec0fffc ; cld ; call qword ptr [rax]
0x000000000015c353 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000133f13 : or eax, 0xf7f0ff3 ; ret
0x0000000000052a09 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x000000000001fadf : or eax, 0xffffffff ; cmp r9, rax ; je 0x1fa8c ; jmp 0x1fab5
0x000000000003354d : or eax, 0xffffffff ; ret
0x0000000000073e17 : or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000073e14 : or eax, 2 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000182fe8 : or eax, dword ptr [r11 + 0xa] ; ret
0x000000000017c747 : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x00000000001736b5 : or eax, dword ptr [rax] ; add al, ch ; adc bl, ch ; call rsi
0x000000000005064f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011d96d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001204b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011d991 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018ee9c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x0000000000109ba2 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000007ff62 : or eax, dword ptr [rax] ; ret
0x0000000000029394 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x0000000000182fe9 : or eax, dword ptr [rbx + 0xa] ; ret
0x0000000000183420 : or eax, dword ptr [rbx] ; ret 0xa01
0x0000000000194028 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001719ad : or eax, dword ptr [rdx] ; add byte ptr [rdx + rdx*4], bh ; stc ; jmp rsp
0x0000000000172af5 : or eax, dword ptr [rdx] ; add byte ptr [rsi + rbp*8], bh ; std ; jmp rsp
0x0000000000192d90 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x0000000000180981 : or eax, dword ptr [rdx] ; ret
0x0000000000176b46 : or eax, dword ptr [rdx] ; ret 0x900e
0x0000000000174074 : or eax, dword ptr [rdx] ; ret 0xc0a
0x0000000000182fd4 : or eax, dword ptr [rsi + 0xa] ; ret
0x000000000017c748 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001877df : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x00000000001719ac : or eax, dword ptr fs:[rdx] ; add byte ptr [rdx + rdx*4], bh ; stc ; jmp rsp
0x0000000000032a97 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000032947 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000f7df0 : or eax, edi ; bswap eax ; ret
0x00000000000e7946 : or eax, edi ; ret
0x000000000003fb49 : or eax, edx ; cmp ecx, 0x24 ; jne 0x3fb2c ; ret
0x0000000000032845 : or eax, edx ; movq xmm0, rax ; ret
0x00000000000e7982 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003617f : or eax, edx ; ret
0x000000000017d4b9 : or eax, esi ; call qword ptr [rdx]
0x0000000000032e24 : or eax, esi ; je 0x32dd1 ; ret
0x000000000017d481 : or eax, esi ; jmp qword ptr [rdx]
0x00000000000e7985 : or eax, esi ; or rax, rdi ; ret
0x00000000000ebc8c : or ebp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000073424 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000109fe4 : or ebp, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x000000000017c3c3 : or ebp, dword ptr [rdx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x0000000000066114 : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006febf : or ebp, eax ; ret
0x0000000000074874 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret 0x328f
0x00000000000f01ed : or ebp, ebx ; or dword ptr [rax - 0x7d], ecx ; ret
0x000000000015e23c : or ebp, esi ; out dx, eax ; jmp rsp
0x0000000000176369 : or ebp, esp ; call qword ptr [rax]
0x0000000000176381 : or ebp, esp ; call qword ptr [rdx]
0x0000000000067e84 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000eca3c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000193962 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000173561 : or ebx, ebp ; jmp qword ptr [rsi]
0x00000000001340d3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000006d2ae : or ebx, esi ; ret
0x0000000000182fe1 : or ecx, dword ptr [r8 + 0xa] ; ret
0x0000000000182fe2 : or ecx, dword ptr [rax + 0xa] ; ret
0x0000000000068077 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000b563b : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000e2597 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000002448d : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000073c19 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000009a234 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009a284 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000017b1e4 : or ecx, dword ptr [rbx + 0xa] ; ret
0x0000000000038925 : or ecx, dword ptr [rcx - 0x77] ; ret 0x44c7
0x00000000000c60c5 : or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x0000000000101753 : or ecx, dword ptr [rdi] ; mov dh, 0x55 ; add dh, dh ; ret
0x0000000000094d03 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000017994e : or ecx, dword ptr [rdx + 0xa] ; ret
0x00000000000874f4 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000b88ab : or edi, dword ptr [rax + 0xfde8] ; jne 0xb8884 ; ret
0x00000000000ee99c : or edi, dword ptr [rax + 1] ; ret
0x0000000000109fd4 : or edi, dword ptr [rax + 2] ; ret
0x00000000000f26f4 : or edi, dword ptr [rax + 7] ; ret
0x00000000000f2ab6 : or edi, dword ptr [rcx] ; ret 0xf7e
0x000000000015fd90 : or edi, ebp ; hlt ; inc esi ; push rsp ; jmp qword ptr [rax]
0x000000000014bdcd : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000098697 : or edi, edi ; loope 0x9870a ; nop dword ptr [rax + rax] ; ret
0x000000000018c831 : or edi, esi ; call qword ptr [rbx]
0x000000000016c1ad : or edi, esp ; call qword ptr [rax - 0x1f0003f4]
0x0000000000070af9 : or edx, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000018efda : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x000000000017997e : or esi, dword ptr [rax + 0xa] ; ret
0x00000000001786c0 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000107f84 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000018efdb : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000000df39e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000133ff3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000da1c4 : or esi, ebx ; ret
0x00000000000c042a : or esi, edx ; jne 0xc0435 ; ret
0x00000000000eedf3 : or esi, esi ; jno 0xeee01 ; cmovne eax, edx ; ret
0x00000000000eedf3 : or esi, esi ; jno 0xeee02 ; cmovne eax, edx ; ret
0x00000000000f12ab : or esi, esi ; ret 0xf08
0x00000000000c0429 : or esi, r10d ; jne 0xc0436 ; ret
0x0000000000066007 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070471 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000180406 : or esp, dword ptr [rcx + 0xa] ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000de5e4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x0000000000176171 : or esp, ebp ; jmp qword ptr [rax]
0x0000000000176159 : or esp, ebp ; jmp qword ptr [rbx]
0x0000000000176189 : or esp, ebp ; jmp qword ptr [rdx]
0x000000000016c169 : or esp, edi ; call rax
0x00000000000a1d80 : or qword ptr [r8], r8 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000c1d4f : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000033b22 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000033c65 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001416a5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000006f8c7 : or r11b, bpl ; xchg eax, edx ; mov edx, eax ; jmp 0x6f865
0x0000000000134142 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001340d2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000180405 : or r12d, dword ptr [r9 + 0xa] ; ret
0x0000000000134062 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000017997d : or r14d, dword ptr [r8 + 0xa] ; ret
0x0000000000133ff2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000081de4 : or r8b, byte ptr [r8] ; ret
0x0000000000192d8f : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x0000000000174073 : or r8d, dword ptr [r10] ; ret 0xc0a
0x00000000001877de : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x000000000005064e : or r8d, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000180980 : or r8d, dword ptr [rdx] ; ret
0x0000000000182fd3 : or r8d, dword ptr [rsi + 0xa] ; ret
0x0000000000032e23 : or r8d, esi ; je 0x32dd2 ; ret
0x00000000000874f3 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000028d43 : or r9b, byte ptr [r8 + 0x39] ; ret 0x4676
0x000000000017b1e3 : or r9d, dword ptr [r11 + 0xa] ; ret
0x0000000000141727 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000003354c : or rax, 0xffffffffffffffff ; ret
0x00000000001919a6 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x0000000000125912 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018341f : or rax, qword ptr [rbx] ; ret 0xa01
0x00000000000e7987 : or rax, rdi ; ret
0x000000000003fb48 : or rax, rdx ; cmp ecx, 0x24 ; jne 0x3fb2d ; ret
0x0000000000032844 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003617e : or rax, rdx ; ret
0x00000000000e7984 : or rax, rsi ; or rax, rdi ; ret
0x0000000000176368 : or rbp, rsp ; call qword ptr [rax]
0x000000000017994d : or rcx, qword ptr [r10 + 0xa] ; ret
0x0000000000182fda : or rcx, qword ptr [rbx + 0xa] ; ret
0x000000000010a0b3 : or sil, sil ; ret 0x8802
0x00000000000325e0 : orpd xmm0, xmm1 ; ret
0x00000000000325e1 : orps xmm0, xmm1 ; ret
0x00000000000329ae : orps xmm0, xmm3 ; ret
0x0000000000181245 : out 0, al ; add byte ptr [rax + 0x26], ch ; jmp qword ptr [rdi]
0x0000000000181275 : out 0, eax ; add byte ptr [rax + 0x26], ch ; call qword ptr [rbx]
0x000000000018128d : out 0, eax ; add byte ptr [rax + 0x26], dh ; call qword ptr [rbx]
0x00000000000f7df9 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000034e8e : out 0x41, eax ; call rsi
0x00000000000f2291 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022962 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010b239 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000010a8e6 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000009a320 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042238 : out 0x48, eax ; mov eax, edx ; ret
0x0000000000110f01 : out 0x48, eax ; mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x00000000000e1eda : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000077dfb : out 0x4c, al ; mov edi, ebp ; call 0x74056
0x000000000002cec8 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009bf63 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x0000000000072bd3 : out 0x5b, al ; ret
0x00000000000ef2bd : out 0x5b, eax ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000113358 : out 0x5b, eax ; ret
0x000000000002c523 : out 0x80, eax ; sete al ; ret
0x00000000000336ef : out 0x89, eax ; ret
0x000000000002e34e : out 0x89, eax ; ret 0x8b4c
0x000000000000247e : out 0xa9, al ; ret 0xbd07
0x00000000000e1f45 : out 0xc1, eax ; sub eax, dword ptr [rax] ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000015b200 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000761eb : out 0xe8, al ; call rdx
0x000000000009ff37 : out 0xe8, al ; ret
0x00000000000b82f1 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x00000000000b7402 : out 0xe8, eax ; cwde ; ret 0xfffb
0x000000000005eb69 : out 0xe8, eax ; push rcx ; ret
0x0000000000041247 : out 0xe8, eax ; ret
0x000000000002dd98 : out 0xe8, eax ; ret 0x4ea
0x00000000000bb508 : out 0xe8, eax ; ret 0xf642
0x000000000007c2c0 : out 0xe8, eax ; ret 0xfa35
0x00000000000357b8 : out 0xe8, eax ; ret 0xfea0
0x00000000000b7417 : out 0xe8, eax ; xchg eax, ebx ; ret 0xfffb
0x00000000001756c9 : out 0xeb, al ; jmp qword ptr [rsi]
0x000000000015ecd1 : out 0xf1, al ; jmp qword ptr [rax]
0x00000000001338da : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000883f9 : out 0xf3, al ; ret
0x000000000013395a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000eee88 : out 0xf3, eax ; ret
0x000000000015ff99 : out 0xf4, eax ; call rbx
0x0000000000187c99 : out 0xf5, eax ; jmp qword ptr [rcx]
0x000000000015cf28 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000000d99c0 : out 0xfd, eax ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000715d6 : out 0xff, al ; dec dword ptr [rax + 0x39] ; ret
0x0000000000067904 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000058ace : out 0xff, eax ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000194688 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x00000000001022ec : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000010248d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000207f1 : out 4, eax ; add rdi, rbp ; call rax
0x00000000000fcb93 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000087369 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000010a4b9 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000016eb25 : out dx, al ; add byte ptr [rax], al ; pushfq ; jbe 0x16eb21 ; call rsp
0x00000000000cbf64 : out dx, al ; add byte ptr [rcx - 0x7d], 0xfa ; add al, 0x75 ; ret 0x8b48
0x000000000005cec8 : out dx, al ; add dword ptr [rax + 1], ecx ; ret
0x0000000000101f3f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x101f4c ; ret
0x00000000000c0b64 : out dx, al ; add dword ptr [rax - 0x7d], ecx ; call 0xffffffffc20d5779
0x0000000000171595 : out dx, al ; add dword ptr [rax], eax ; sbb al, 0xd5 ; clc ; call rsp
0x00000000000899a3 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000101f3c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x101f4f ; ret
0x000000000006e213 : out dx, al ; call 0x468d8
0x0000000000178892 : out dx, al ; call qword ptr [rax]
0x00000000000eedb0 : out dx, al ; call r14
0x000000000007b73a : out dx, al ; call rax
0x00000000001788da : out dx, al ; call rdi
0x000000000016e0b2 : out dx, al ; call rsp
0x000000000017cef1 : out dx, al ; cld ; call qword ptr [rdx]
0x000000000015c357 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000016fac9 : out dx, al ; hlt ; call rsp
0x000000000015ff95 : out dx, al ; hlt ; ljmp ptr [rdi - 0x19] ; hlt ; call rbx
0x0000000000003aa1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001598da : out dx, al ; jmp qword ptr [rax]
0x0000000000178262 : out dx, al ; jmp qword ptr [rcx]
0x00000000001784ea : out dx, al ; jmp rax
0x00000000001786e2 : out dx, al ; jmp rbx
0x0000000000003183 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000012b72a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000034e8b : out dx, al ; mov rdi, r12 ; call r14
0x000000000007b916 : out dx, al ; mov rdi, r12 ; call rax
0x0000000000030635 : out dx, al ; mov rdi, rbx ; call 0x7c866
0x000000000007b10c : out dx, al ; mov rdi, rbx ; call rax
0x0000000000133cea : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009a6e9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x0000000000123f6e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015e115 : out dx, al ; out dx, eax ; jmp rax
0x000000000015e23d : out dx, al ; out dx, eax ; jmp rsp
0x00000000000c1cc1 : out dx, al ; ret
0x0000000000172af9 : out dx, al ; std ; jmp rsp
0x000000000016bfd1 : out dx, al ; sti ; jmp rax
0x000000000007c0e9 : out dx, al ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000016e169 : out dx, ax ; jmp rsp
0x00000000000995cd : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000e399d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000016eb45 : out dx, eax ; add byte ptr [rax], al ; pushfq ; jl 0x16eb41 ; jmp rsp
0x00000000000ad8c6 : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x000000000005885f : out dx, eax ; add dword ptr [rcx + rcx*4 - 0x18], ecx ; test edx, edx ; je 0x58832 ; jmp 0x58814
0x000000000011476c : out dx, eax ; add rbx, r12 ; call r14
0x000000000014b651 : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010f141 : out dx, eax ; call 0x10b3d3
0x000000000010f184 : out dx, eax ; call 0x10b453
0x0000000000077dfe : out dx, eax ; call 0x74053
0x000000000015e0da : out dx, eax ; call qword ptr [rax]
0x000000000016e3fa : out dx, eax ; call qword ptr [rbx + rax*8]
0x000000000010a4bf : out dx, eax ; call qword ptr [rbx]
0x000000000015dd72 : out dx, eax ; call qword ptr [rcx]
0x000000000017c99a : out dx, eax ; call qword ptr [rdi]
0x000000000015df82 : out dx, eax ; call qword ptr [rdx]
0x00000000001796c2 : out dx, eax ; call qword ptr [rsi]
0x00000000000bffda : out dx, eax ; call r12
0x000000000010835e : out dx, eax ; call r14
0x00000000000207f5 : out dx, eax ; call rax
0x000000000009b8b7 : out dx, eax ; call rbx
0x0000000000115762 : out dx, eax ; call rcx
0x000000000010a076 : out dx, eax ; call rdx
0x0000000000179ab2 : out dx, eax ; call rsi
0x000000000016e0e2 : out dx, eax ; call rsp
0x00000000001726b1 : out dx, eax ; cli ; call rsp
0x000000000002be95 : out dx, eax ; cmp edi, edi ; push rbx ; ret
0x000000000015e23a : out dx, eax ; dec dword ptr [rbx] ; out dx, al ; out dx, eax ; jmp rsp
0x000000000015e2ba : out dx, eax ; dec dword ptr [rdi - 9] ; out dx, eax ; jmp rsp
0x000000000015dd6e : out dx, eax ; dec eax ; mov edi, gs ; call qword ptr [rcx]
0x000000000015dd6a : out dx, eax ; dec eax ; mov edi, gs ; dec eax ; mov edi, gs ; call qword ptr [rcx]
0x000000000016e4da : out dx, eax ; dec esp ; mov dword ptr [rax], 0xefd6ac00 ; jmp rsp
0x000000000015e156 : out dx, eax ; inc dword ptr [rbp - 0x14] ; out dx, eax ; call qword ptr [rax]
0x000000000015e0ce : out dx, eax ; inc dword ptr [rdi + 0x26ffeffc] ; out dx, eax ; jmp rax
0x000000000016e1ca : out dx, eax ; inc dword ptr [rdx + rsi*4 - 0x7fa40000] ; out dx, eax ; call rsp
0x000000000015deae : out dx, eax ; inc dword ptr [rdx] ; mov edi, ebp ; push qword ptr [rbp - 0x2e] ; out dx, eax ; jmp rsi
0x000000000016e162 : out dx, eax ; inc esp ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; cmp al, 0x66 ; out dx, eax ; jmp rsp
0x000000000017aa5a : out dx, eax ; jmp qword ptr [rax]
0x000000000017bbf2 : out dx, eax ; jmp qword ptr [rbx]
0x000000000017b6c2 : out dx, eax ; jmp qword ptr [rcx]
0x000000000017a922 : out dx, eax ; jmp qword ptr [rdi]
0x000000000016e3ca : out dx, eax ; jmp qword ptr [rdx + rax*8]
0x000000000015e292 : out dx, eax ; jmp qword ptr [rdx - 0x1b001018]
0x0000000000179a82 : out dx, eax ; jmp qword ptr [rdx]
0x000000000015e25a : out dx, eax ; jmp qword ptr [rsi - 0x1b001010]
0x000000000015e0d2 : out dx, eax ; jmp qword ptr [rsi]
0x000000000015e0d6 : out dx, eax ; jmp rax
0x000000000015deb6 : out dx, eax ; jmp rsi
0x000000000015e186 : out dx, eax ; jmp rsp
0x000000000015e152 : out dx, eax ; lcall ptr [rdi - 0x14] ; out dx, eax ; inc dword ptr [rbp - 0x14] ; out dx, eax ; call qword ptr [rax]
0x0000000000108d36 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000108b77 : out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000015df7e : out dx, eax ; ljmp ptr [rax - 0x18] ; out dx, eax ; call qword ptr [rdx]
0x000000000016e57a : out dx, eax ; ljmp ptr [rbp + rcx*8] ; add byte ptr [rbp + rsi*8 - 0x11], ch ; jmp rsp
0x00000000000d3ee0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000012b55a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012b656 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012b5a2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e6628 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000428b0 : out dx, eax ; mov rax, rdx ; ret
0x00000000000f40f0 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000010e023 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010de2b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c0003 : out dx, eax ; mov rsi, rbx ; call r12
0x0000000000133d6a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000012406d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017d269 : out dx, eax ; out dx, eax ; jmp qword ptr [rcx]
0x000000000014bdfc : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000006a6a1 : out dx, eax ; pop rbx ; ret
0x000000000015deb2 : out dx, eax ; push qword ptr [rbp - 0x2e] ; out dx, eax ; jmp rsi
0x000000000015e17e : out dx, eax ; push qword ptr [rdx + rsi*8 - 0x4830011] ; out dx, eax ; jmp rsp
0x000000000016e0da : out dx, eax ; push qword ptr [rsp + rbp*4 + 0x5b4c0000] ; out dx, eax ; call rsp
0x000000000007dded : out dx, eax ; push rdx ; or al, byte ptr [rax] ; ret
0x0000000000146fc3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000146fd8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000146fed : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e41a : out dx, eax ; push rsp ; ret
0x0000000000099458 : out dx, eax ; ret
0x000000000003042d : out dx, eax ; ret 0x36
0x00000000000988e3 : out dx, eax ; ret 0xf66
0x00000000001484dc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000001484c5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001484ae : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000146f6a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009b000 : out dx, eax ; sub rax, 4 ; ret
0x00000000000a7dee : out dx, eax ; sub rsp, 8 ; call r12
0x000000000007bf84 : out dx, eax ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000001099ce : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000041e90 : out dx, eax ; xor eax, eax ; ret
0x000000000011fc1e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aaef1 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000014947e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000000a1264 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000039c65 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret 0xff25
0x000000000017dc29 : outsb dx, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000032a9b : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000015cb03 : outsb dx, byte ptr [rsi] ; ja 0x15ca8c ; ret 0x48f
0x000000000015a844 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000000cf46c : outsb dx, byte ptr [rsi] ; xor byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000821aa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000105429 : outsd dx, dword ptr [rsi] ; adc al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x0000000000086ea2 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000179aad : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; ror byte ptr [rsi], 0xef ; call rsi
0x00000000000c3b1f : outsd dx, dword ptr [rsi] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000275a4 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000081c3d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; ret
0x000000000016c5e1 : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rax + 0x20fffc77]
0x000000000007ca38 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008287e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000007413d : outsd dx, dword ptr [rsi] ; jo 0x74178 ; add byte ptr [rbp + 0x39], cl ; ret 0x820f
0x000000000015ff98 : outsd dx, dword ptr [rsi] ; out 0xf4, eax ; call rbx
0x00000000001482dd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000014837d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008009a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008009f : outsd dx, dword ptr [rsi] ; ret
0x000000000015b206 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000012be97 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000148382 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000800ea : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000001186b2 : outsd dx, dword ptr [rsi] ; sbb byte ptr [rcx], al ; je 0x1186c7 ; xor eax, eax ; ret
0x000000000016bb51 : outsd dx, dword ptr [rsi] ; sti ; jmp qword ptr [rax]
0x000000000015b205 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000016c1b9 : paddb mm7, mm7 ; adc byte ptr [rax], 0xfc ; call rax
0x000000000011d862 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000009a574 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000009a55f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000011d861 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015c605 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000015c606 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000008cfe1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000008d655 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000032921 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000032c51 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000008d663 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000008d705 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x8d789 ; xor eax, eax ; ret
0x0000000000032920 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000032c50 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000007e2bf : pmovmskb edx, mm4 ; test edx, edx ; je 0x7e2d3 ; bsf eax, edx ; ret
0x00000000000f3db4 : pop r10 ; ret
0x000000000015ca8f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000078be2 : pop r12 ; jmp rax
0x00000000000e46bf : pop r12 ; mov esi, 2 ; jmp rax
0x00000000000e46d9 : pop r12 ; mov esi, 3 ; jmp rax
0x0000000000070624 : pop r12 ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000067c7e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000ef2c0 : pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000078edb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000201e3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e1b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b74d3 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000020213 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011503d : pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000065425 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000205c2 : pop r12 ; pop r13 ; ret
0x00000000000a3d74 : pop r12 ; pop r14 ; ret
0x0000000000035456 : pop r12 ; pop rbp ; ret
0x000000000001faf2 : pop r12 ; ret
0x00000000000a7dcd : pop r12 ; sub r8, rdx ; add rax, r8 ; ret
0x000000000003c9c6 : pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003c93e : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000078edd : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000201e5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e1d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b74d5 : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000020215 : pop r13 ; pop r14 ; ret
0x000000000006af52 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000011503f : pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000065427 : pop r13 ; pop rbp ; ret
0x00000000000205c4 : pop r13 ; ret
0x000000000011500d : pop r14 ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000003c9c8 : pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003c940 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000078edf : pop r14 ; pop r15 ; jmp rax
0x00000000000201e7 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e1f : pop r14 ; pop r15 ; ret
0x00000000000b74d7 : pop r14 ; pop rbp ; ret
0x0000000000020217 : pop r14 ; ret
0x000000000006af54 : pop r14 ; sar rax, 2 ; ret
0x0000000000115041 : pop r14 ; xor eax, eax ; jmp rcx
0x000000000003c9ca : pop r15 ; fmul st(0) ; ret
0x000000000003c942 : pop r15 ; fmulp st(1) ; ret
0x0000000000078ee1 : pop r15 ; jmp rax
0x00000000000201e9 : pop r15 ; pop rbp ; ret
0x0000000000020e21 : pop r15 ; ret
0x0000000000110466 : pop r8 ; mov eax, 1 ; ret
0x0000000000073e2e : pop r8 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000010b176 : pop r8 ; pop rbx ; sete al ; movzx eax, al ; ret
0x000000000016b317 : pop r9 ; clc ; ret 0x6e1f
0x00000000000d16c3 : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000110b9e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001883fd : pop rax ; add dword ptr [rax], eax ; adc bh, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000188445 : pop rax ; add dword ptr [rax], eax ; mov bh, bh ; cmc ; jmp qword ptr [rcx]
0x00000000000b2ca0 : pop rax ; add dword ptr [rbp - 0x24], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dda16 : pop rax ; add ecx, dword ptr [rcx + 0xf10244c] ; xchg eax, esp ; ret 0x8440
0x0000000000110d64 : pop rax ; call rax
0x00000000001881d8 : pop rax ; cld ; cmc ; jmp qword ptr [rcx]
0x00000000000dca91 : pop rax ; cli ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x0000000000185629 : pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000000c1cd7 : pop rax ; cmp al, 0x11 ; je 0xc1ce7 ; xor eax, eax ; ret
0x0000000000192348 : pop rax ; cmp al, bh ; call qword ptr [rdx]
0x0000000000110ba6 : pop rax ; jmp rcx
0x0000000000173dc8 : pop rax ; jp 0x173dcb ; jmp qword ptr [rdi]
0x000000000015ee4c : pop rax ; loope 0x15ee44 ; jmp rax
0x0000000000110467 : pop rax ; mov eax, 1 ; ret
0x000000000002c4e4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002c472 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000010a93e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000c35ea : pop rax ; mov r13d, eax ; call 0x1f88e
0x00000000000e3e68 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000008162b : pop rax ; or al, 0 ; ret
0x00000000000c7913 : pop rax ; or bh, dh ; ret
0x00000000000c317e : pop rax ; or byte ptr [rbp - 0x72b700be], cl ; ret
0x0000000000093304 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000073e2f : pop rax ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000017d268 : pop rax ; out dx, eax ; out dx, eax ; jmp qword ptr [rcx]
0x000000000001f90e : pop rax ; pop rbx ; pop rbp ; ret
0x000000000010b177 : pop rax ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000e7809 : pop rax ; pop rdi ; call rax
0x000000000011c861 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000036218 : pop rax ; ret
0x000000000018b758 : pop rax ; ret 0xfff6
0x00000000001590e4 : pop rax ; test ebp, ebp ; jmp rbx
0x00000000001590e0 : pop rax ; test ebp, ebp ; lcall ptr [rax - 0x7b] ; in eax, dx ; jmp rbx
0x00000000000dc734 : pop rbp ; add al, byte ptr [rax] ; add al, ch ; ret
0x000000000017888d : pop rbp ; add byte ptr [rax], al ; add al, bl ; out dx, al ; call qword ptr [rax]
0x00000000001788d5 : pop rbp ; add byte ptr [rax], al ; fsubr st(6) ; call rdi
0x000000000006dcff : pop rbp ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x6dca4
0x00000000000f7ca6 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010aa8d : pop rbp ; add eax, edx ; ret
0x00000000000f40f3 : pop rbp ; clc ; leave ; ret
0x000000000015f07d : pop rbp ; inc dword ptr [rax] ; pop rsi ; jmp qword ptr [rax]
0x000000000015f075 : pop rbp ; inc eax ; pop rbp ; jmp rax
0x000000000015f061 : pop rbp ; jmp qword ptr [rax]
0x000000000006a064 : pop rbp ; jmp rax
0x0000000000108295 : pop rbp ; jmp rcx
0x00000000001099d2 : pop rbp ; jmp rdx
0x0000000000116e1b : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000074f45 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000017b319 : pop rbp ; out dx, eax ; call rcx
0x0000000000078be1 : pop rbp ; pop r12 ; jmp rax
0x00000000000e46be : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000000e46d8 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x0000000000070623 : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000067c7d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000ef2bf : pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000078eda : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020e1a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000020212 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011503c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000205c1 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a3d73 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001faf1 : pop rbp ; pop r12 ; ret
0x00000000000a7dcc : pop rbp ; pop r12 ; sub r8, rdx ; add rax, r8 ; ret
0x0000000000108d76 : pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003c9c7 : pop rbp ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003c93f : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000078ede : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000000201e6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e1e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000b74d6 : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000020216 : pop rbp ; pop r14 ; ret
0x000000000006af53 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x0000000000115040 : pop rbp ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000065428 : pop rbp ; pop rbp ; ret
0x00000000000421a8 : pop rbp ; pop rbx ; ret
0x000000000001f910 : pop rbp ; ret
0x0000000000070a6c : pop rbp ; sub rax, rdx ; ret
0x00000000000bfe07 : pop rbp ; test al, 0xe8 ; ret 0xfdb9
0x00000000000f2721 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x000000000016d3a5 : pop rbx ; add byte ptr [rax], al ; pushfq ; cmp al, 0xeb ; call rsp
0x000000000016fba5 : pop rbx ; add dword ptr [rax], eax ; sbb al, 0x48 ; cmc ; call rsp
0x0000000000159dd8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009927c : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000992af : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000f4037 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000159dd6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006645e : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015f03d : pop rbx ; inc dword ptr [rax] ; pop rsp ; jmp qword ptr [rax]
0x000000000015f035 : pop rbx ; inc eax ; pop rbx ; jmp rax
0x0000000000067a9a : pop rbx ; jmp rax
0x00000000000c1df1 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000f7cd8 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000068c40 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000068c2c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000c0122 : pop rbx ; mov eax, 1 ; ret
0x00000000000d60bb : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000036215 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000009931c : pop rbx ; mov eax, eax ; ret
0x00000000000ce874 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004de9a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f58ee : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000006987a : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004c27e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000001128f8 : pop rbx ; mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x000000000008d4ad : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000006a497 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006a398 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000000671c7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002cc8e : pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x000000000010f193 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000016e0e1 : pop rbx ; out dx, eax ; call rsp
0x00000000000b74d2 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000065424 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000035455 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000780db : pop rbx ; pop r14 ; pop r15 ; ret
0x000000000010aa8c : pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006a063 : pop rbx ; pop rbp ; jmp rax
0x0000000000108294 : pop rbx ; pop rbp ; jmp rcx
0x00000000001099d1 : pop rbx ; pop rbp ; jmp rdx
0x0000000000078be0 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000e46bd : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000000e46d7 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x0000000000070622 : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000067c7c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000ef2be : pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000020211 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000205c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a3d72 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001faf0 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108d75 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000001f90f : pop rbx ; pop rbp ; ret
0x0000000000070a6b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x000000000002939a : pop rbx ; ret
0x000000000015d0c0 : pop rbx ; ret 0x6f9
0x00000000000dfb7c : pop rbx ; sar eax, 0x1f ; ret
0x00000000000e97e9 : pop rbx ; sbb ch, byte ptr [rbx] ; add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000010b178 : pop rbx ; sete al ; movzx eax, al ; ret
0x000000000009b779 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000001fb54 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000008d49b : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000091a1 : pop rcx ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001884ed : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax], 0xf6 ; jmp qword ptr [rcx]
0x0000000000188505 : pop rcx ; add dword ptr [rax], eax ; cwde ; add dh, dh ; jmp qword ptr [rcx]
0x000000000018848d : pop rcx ; add dword ptr [rax], eax ; sar bh, 1 ; cmc ; call qword ptr [rsi]
0x000000000018c9b9 : pop rcx ; add dword ptr [rdx], ecx ; ret
0x0000000000108c9e : pop rcx ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016b190 : pop rcx ; clc ; ret 0x6e1f
0x000000000017db69 : pop rcx ; cli ; call qword ptr [rax]
0x0000000000032ac0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x0000000000189d49 : pop rcx ; idiv bh ; ret
0x000000000017ed39 : pop rcx ; int1 ; call rsp
0x000000000011633f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e3dab : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d06ba : pop rcx ; pop rbx ; ret
0x0000000000192bf2 : pop rcx ; ret
0x00000000000c2773 : pop rcx ; sal ch, 1 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000747ae : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000000a88fb : pop rdi ; adc byte ptr [rcx], ch ; ret 0x428d
0x000000000012a0d8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000da4a2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000188b15 : pop rdi ; add dword ptr [rax], eax ; cwde ; adc dh, dh ; call qword ptr [rdx]
0x000000000016fc2d : pop rdi ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; push rdi ; cmc ; jmp rsp
0x00000000001246fd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000106031 : pop rdi ; call 0x822e3
0x00000000000e780a : pop rdi ; call rax
0x0000000000185751 : pop rdi ; cmc ; jmp qword ptr [rcx]
0x000000000003c9cb : pop rdi ; fmul st(0) ; ret
0x000000000003c943 : pop rdi ; fmulp st(1) ; ret
0x000000000012baf9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015e154 : pop rdi ; in al, dx ; out dx, eax ; inc dword ptr [rbp - 0x14] ; out dx, eax ; call qword ptr [rax]
0x000000000012b909 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015f0bd : pop rdi ; inc eax ; pop rdi ; call rax
0x000000000015c37e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000015f0a5 : pop rdi ; jmp qword ptr [rax - 0x2f000ca1]
0x0000000000182269 : pop rdi ; jmp qword ptr [rcx]
0x0000000000078ee2 : pop rdi ; jmp rax
0x000000000015b341 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000012b729 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012b559 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012b655 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012b5a1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000201ea : pop rdi ; pop rbp ; ret
0x0000000000020e22 : pop rdi ; ret
0x0000000000054ff2 : pop rdi ; xor al, 0 ; call rax
0x00000000000b2ae5 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000016d38d : pop rdx ; add byte ptr [rax], al ; cmp bl, r13b ; call rsp
0x00000000001785cd : pop rdx ; add byte ptr [rax], al ; mov al, 0xce ; out dx, al ; jmp rax
0x000000000011efe6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000000ba4a4 : pop rdx ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000001720d9 : pop rdx ; cli ; jmp rsp
0x000000000016d899 : pop rdx ; in al, dx ; call rsp
0x0000000000003a9e : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000015bf61 : pop rdx ; je 0x15bf2b ; ret 0xacfc
0x0000000000180668 : pop rdx ; jge 0x180660 ; jmp qword ptr [rax]
0x0000000000003185 : pop rdx ; jmp 0xffffffff88c2d332
0x000000000015cf27 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000000f3db3 : pop rdx ; pop r10 ; ret
0x00000000000e3e6c : pop rdx ; pop rbx ; ret
0x00000000000d06b9 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000f3dd9 : pop rdx ; pop rsi ; ret
0x0000000000001b92 : pop rdx ; ret
0x0000000000001b14 : pop rdx ; ret 0x2a63
0x000000000006eae2 : pop rdx ; ret 6
0x000000000015ca90 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000009aba5 : pop rdx ; test al, 0xf0 ; jne 0x9abd9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001245fe : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010243c : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x000000000015f099 : pop rsi ; call qword ptr [rax]
0x000000000015f081 : pop rsi ; jmp qword ptr [rax]
0x000000000015f095 : pop rsi ; jmp rax
0x000000000002f46e : pop rsi ; jp 0x2f47c ; add byte ptr [rcx - 0x77], cl ; ret 0x8d8b
0x000000000011500e : pop rsi ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x0000000000087505 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003c9c9 : pop rsi ; pop r15 ; fmul st(0) ; ret
0x000000000003c941 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x0000000000078ee0 : pop rsi ; pop r15 ; jmp rax
0x00000000000201e8 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000020e20 : pop rsi ; pop r15 ; ret
0x00000000000b74d8 : pop rsi ; pop rbp ; ret
0x0000000000020218 : pop rsi ; ret
0x00000000000e3c2b : pop rsi ; ret 0xcdbb
0x000000000012328e : pop rsi ; ret 3
0x000000000006af55 : pop rsi ; sar rax, 2 ; ret
0x00000000000dc558 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016bb2d : pop rsi ; sti ; inc dword ptr [rax + 0x60] ; sti ; jmp qword ptr [rax]
0x0000000000115042 : pop rsi ; xor eax, eax ; jmp rcx
0x000000000011fe30 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f2e4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001725e5 : pop rsp ; add al, byte ptr [rax] ; or al, 0xd1 ; cli ; jmp rsp
0x00000000000bb1ed : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000017880d : pop rsp ; add byte ptr [rax], al ; mov al, 0xd7 ; out dx, al ; jmp qword ptr [rax]
0x0000000000192d7e : pop rsp ; add dword ptr [rdx], ecx ; ret
0x00000000000c6d11 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000120b30 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000076622 : pop rsp ; and al, 0x30 ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x00000000000c7a86 : pop rsp ; and al, 0x7c ; mov r10, rax ; jmp 0xc7abd
0x00000000000a7c75 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000184ebc : pop rsp ; and eax, dword ptr [rcx] ; add byte ptr [rax], dh ; cmc ; call qword ptr [rsi]
0x000000000016f721 : pop rsp ; hlt ; call rsp
0x000000000015f05d : pop rsp ; inc dword ptr [rax] ; pop rbp ; jmp qword ptr [rax]
0x000000000015f055 : pop rsp ; inc eax ; pop rsp ; jmp rax
0x000000000016df78 : pop rsp ; insb byte ptr [rdi], dx ; in eax, dx ; call rsp
0x000000000015f041 : pop rsp ; jmp qword ptr [rax]
0x0000000000078be3 : pop rsp ; jmp rax
0x000000000016eff0 : pop rsp ; mov dh, 0xf1 ; jmp rsp
0x00000000000e46c0 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000000e46da : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000070625 : pop rsp ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000067c7f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000ef2c1 : pop rsp ; mov rdx, rax ; jmp rcx
0x00000000000c03e4 : pop rsp ; neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dcc0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000003c9c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003c93d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000078edc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000201e4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e1c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b74d4 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000020214 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006af51 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000011503e : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000065426 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000205c3 : pop rsp ; pop r13 ; ret
0x00000000000a3d75 : pop rsp ; pop r14 ; ret
0x0000000000035457 : pop rsp ; pop rbp ; ret
0x000000000016fba4 : pop rsp ; pop rbx ; add dword ptr [rax], eax ; sbb al, 0x48 ; cmc ; call rsp
0x00000000001720d8 : pop rsp ; pop rdx ; cli ; jmp rsp
0x0000000000003838 : pop rsp ; ret
0x000000000000318d : pop rsp ; ret 0x52c0
0x000000000016f630 : pop rsp ; ret 0xfff3
0x000000000016ffa8 : pop rsp ; ret 0xfff6
0x000000000016d02c : pop rsp ; ret 0xfffc
0x000000000006004b : pop rsp ; ret 0xffff
0x00000000000823f0 : pop rsp ; sbb byte ptr [rax + rax], cl ; ret
0x00000000001746bc : pop rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x80], ah ; jmp 0x1746ca
0x000000000007ff60 : pop rsp ; stc ; or eax, dword ptr [rax] ; ret
0x0000000000171aa0 : pop rsp ; stosd dword ptr [rdi], eax ; stc ; call rsp
0x00000000000a7dce : pop rsp ; sub r8, rdx ; add rax, r8 ; ret
0x000000000017d3bc : pop rsp ; test al, 0 ; add byte ptr [rax], dl ; out dx, eax ; jmp qword ptr [rdx]
0x000000000015f529 : popfq ; call qword ptr [rax]
0x0000000000186629 : popfq ; cmc ; jmp qword ptr [rcx]
0x000000000017c158 : popfq ; cmp edx, ebp ; jmp qword ptr [rax]
0x000000000015f525 : popfq ; inc dword ptr [rdi] ; popfq ; call qword ptr [rax]
0x000000000005ff02 : popfq ; mov eax, 0xe9fffffa ; lahf ; ret
0x00000000000f0f82 : popfq ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d99bf : popfq ; out 0xfd, eax ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000017b7f3 : popfq ; ret
0x00000000000a950c : popfq ; ret 0x3949
0x00000000000a94c7 : popfq ; ret 0xb60f
0x0000000000121510 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000053943 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000133e32 : psllq mm1, qword ptr [r15] ; jg 0x133e4d ; ret
0x0000000000136902 : psllq mm1, qword ptr [r15] ; jg 0x13691d ; ret
0x0000000000139422 : psllq mm1, qword ptr [r15] ; jg 0x13943d ; ret
0x0000000000133e33 : psllq mm1, qword ptr [rdi] ; jg 0x133e4c ; ret
0x0000000000136903 : psllq mm1, qword ptr [rdi] ; jg 0x13691c ; ret
0x0000000000139423 : psllq mm1, qword ptr [rdi] ; jg 0x13943c ; ret
0x00000000000944a6 : psllq mm1, qword ptr [rdi] ; jg 0x944ba ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000944a5 : psllq mm1, qword ptr [rdi] ; jg 0x944bb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000094507 : psllq mm1, qword ptr [rdi] ; jg 0x9451c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000095176 : psllq mm1, qword ptr [rdi] ; jg 0x9518a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000095175 : psllq mm1, qword ptr [rdi] ; jg 0x9518b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000951d7 : psllq mm1, qword ptr [rdi] ; jg 0x951ec ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000097586 : psllq mm1, qword ptr [rdi] ; jg 0x9759a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000097585 : psllq mm1, qword ptr [rdi] ; jg 0x9759b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000975e7 : psllq mm1, qword ptr [rdi] ; jg 0x975fc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000098056 : psllq mm1, qword ptr [rdi] ; jg 0x9806a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000098055 : psllq mm1, qword ptr [rdi] ; jg 0x9806b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000980b7 : psllq mm1, qword ptr [rdi] ; jg 0x980cc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000007868d : psraw mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000aaa1c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00000000000627ad : push -0x14000005 ; ret
0x00000000000aadea : push -0x45fff45e ; ret 2
0x000000000016d4ad : push -0x48740000 ; jmp 0x16d4b9
0x000000000016d4ac : push -0x48740000 ; jmp 0x16d4ba
0x000000000016cca0 : push -0x6b ; cld ; call qword ptr [rax]
0x0000000000002c01 : push -0x7329150 ; ret
0x00000000000fe3d4 : push -0x76000003 ; ret 0x8aeb
0x000000000009e223 : push -0x763076b4 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000b5f34 : push -0x76b7ffd2 ; ret 0x8d48
0x0000000000062b42 : push -0x77 ; ret 0x348
0x00000000000a26a5 : push -0x7bf0367b ; ret 0xfff9
0x00000000000559d6 : push -0x7c000006 ; ret 0x8908
0x0000000000149464 : push -0x9ffffff ; ret 0x7501
0x000000000009ab97 : push -0xfb872b8 ; ret
0x00000000000894eb : push -1 ; ja 0x894d1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009aeb2 : push -1 ; or al, byte ptr [rax] ; ret
0x000000000002a296 : push 0 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x00000000001087ea : push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000001087ec : push 0x19 ; call qword ptr [rax]
0x000000000004f57c : push 0x39fffffb ; fmul dword ptr [rdi] ; ret
0x000000000019198a : push 0x41380e0a ; ret
0x00000000000cee53 : push 0x5c415d5b ; pop r13 ; ret
0x000000000015cb02 : push 0x6e ; ja 0x15ca8d ; ret 0x48f
0x000000000017c3c4 : push 0xe ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x00000000001102fe : push 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000094f02 : push 5 ; add byte ptr [rax], al ; ret
0x0000000000049c21 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000016d1a7 : push qword ptr [rax + 0x20fffcc2] ; ret 0xfffc
0x000000000016ba77 : push qword ptr [rax + 0x23] ; sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016c33f : push qword ptr [rax + 0x39] ; cld ; inc eax ; cmp bh, ah ; call qword ptr [rax]
0x000000000016bad7 : push qword ptr [rax + 0x39] ; sti ; jmp qword ptr [rax + 0x10fffb2b]
0x000000000016c393 : push qword ptr [rax + 0x40] ; cld ; inc eax ; cld ; call qword ptr [rax]
0x000000000016c5d7 : push qword ptr [rax + 0x40fffc7a] ; jp 0x16c5e3 ; jmp rax
0x000000000016c3bf : push qword ptr [rax + 0x40fffc7d] ; jge 0x16c3cb ; call rax
0x000000000016c8ab : push qword ptr [rax + 0x40fffca5] ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x000000000016cfbb : push qword ptr [rax + 0x40fffcc9] ; leave ; cld ; call rax
0x000000000014c63b : push qword ptr [rax + 0x48] ; in eax, dx ; jmp rax
0x000000000016bafb : push qword ptr [rax + 0x48] ; sti ; call qword ptr [rax]
0x0000000000163077 : push qword ptr [rax + 0x50fffaac] ; stosd dword ptr [rdi], eax ; cli ; call qword ptr [rax]
0x000000000015f0a3 : push qword ptr [rax + 0x5f] ; jmp qword ptr [rax - 0x2f000ca1]
0x000000000016bb63 : push qword ptr [rax + 0x7c] ; sti ; inc eax ; jge 0x16bb6e ; call qword ptr [rax]
0x000000000006eadb : push qword ptr [rax + rcx + 0x44] ; mov edi, esi ; call 0xdad48
0x000000000006a1a5 : push qword ptr [rax + rcx + 0x5b] ; ret
0x0000000000025ae9 : push qword ptr [rax + rdi*2 - 0x77] ; ret 0xe281
0x000000000016ec4b : push qword ptr [rax + rdi*8] ; add byte ptr [rcx + rdx*8 - 0x10], ch ; call rsp
0x000000000015f27f : push qword ptr [rax - 0x1f000c8c] ; je 0x15f282 ; call qword ptr [rax]
0x000000000015f27e : push qword ptr [rax - 0x1f000c8c] ; je 0x15f283 ; call qword ptr [rax]
0x000000000015f093 : push qword ptr [rax - 0x1f000ca2] ; pop rsi ; call qword ptr [rax]
0x000000000016bfa7 : push qword ptr [rax - 0x1f] ; sti ; inc eax ; loop 0x16bfb2 ; call qword ptr [rax]
0x000000000015f343 : push qword ptr [rax - 0x3f000c88] ; js 0x15f346 ; call rax
0x000000000015f342 : push qword ptr [rax - 0x3f000c88] ; js 0x15f347 ; call rax
0x000000000015f0bb : push qword ptr [rax - 0x3f000ca1] ; pop rdi ; call rax
0x000000000016d013 : push qword ptr [rax - 0x43] ; cld ; jmp rax
0x000000000016d217 : push qword ptr [rax - 0x44] ; cld ; jmp rax
0x000000000016cd0f : push qword ptr [rax - 0x69] ; cld ; jmp rax
0x000000000016bebf : push qword ptr [rax - 0xa] ; sti ; push qword ptr [rax] ; clc ; sti ; call qword ptr [rax]
0x000000000016bf97 : push qword ptr [rax] ; add ah, bh ; push qword ptr [rax] ; add bh, ah ; jmp rax
0x000000000016bf9b : push qword ptr [rax] ; add bh, ah ; jmp rax
0x000000000016bec3 : push qword ptr [rax] ; clc ; sti ; call qword ptr [rax]
0x000000000016c22b : push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000016c2e3 : push qword ptr [rax] ; cld ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000016c20f : push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x000000000016c2ff : push qword ptr [rax] ; cld ; jmp rax
0x000000000016c27f : push qword ptr [rax] ; cld ; push rax ; cld ; call rax
0x000000000016be8b : push qword ptr [rax] ; cld ; sti ; call qword ptr [rax]
0x000000000016bea7 : push qword ptr [rax] ; cli ; sti ; call qword ptr [rax]
0x000000000014cb8b : push qword ptr [rax] ; fucomp st(5) ; jmp qword ptr [rax]
0x00000000001630a3 : push qword ptr [rax] ; iretd ; cli ; call qword ptr [rax]
0x0000000000161f93 : push qword ptr [rax] ; jl 0x161f99 ; push rax ; jnp 0x161f9d ; jmp qword ptr [rax]
0x0000000000093d0f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000016039f : push qword ptr [rax] ; mov ebp, esi ; call rax
0x000000000016c1b7 : push qword ptr [rax] ; paddb mm7, mm7 ; adc byte ptr [rax], 0xfc ; call rax
0x000000000016bb5b : push qword ptr [rax] ; push rdi ; sti ; jmp qword ptr [rax]
0x000000000016bb13 : push qword ptr [rax] ; push rdx ; sti ; call rax
0x000000000016d1a3 : push qword ptr [rax] ; ret
0x000000000016308f : push qword ptr [rax] ; sar dl, 1 ; call qword ptr [rax]
0x000000000016308b : push qword ptr [rax] ; sar dl, 1 ; push qword ptr [rax] ; sar dl, 1 ; call qword ptr [rax]
0x000000000016bf47 : push qword ptr [rax] ; stc ; sti ; call qword ptr [rax]
0x000000000016baf3 : push qword ptr [rax] ; sti ; call rax
0x000000000016baa7 : push qword ptr [rax] ; sti ; jmp qword ptr [rax]
0x000000000014ade8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00000000000a9241 : push qword ptr [rbp + 0xc] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006bfab : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000000728fd : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000065841 : push qword ptr [rbp + rbp*4 - 0x77] ; ret 0xe283
0x000000000011bc50 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000b39fe : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000000428ae : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009affe : push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x00000000000fe098 : push qword ptr [rbp - 0x13] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010588b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014bccc : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000042236 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00000000000f228f : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072bd1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000015deb3 : push qword ptr [rbp - 0x2e] ; out dx, eax ; jmp rsi
0x00000000000f4772 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00000000000b7205 : push qword ptr [rbx + 0x31] ; ret
0x00000000000d9038 : push qword ptr [rbx + 0x34] ; ret
0x000000000003353c : push qword ptr [rbx + 1] ; ret
0x0000000000041a16 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x000000000006a69c : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000170eab : push qword ptr [rbx + rax*8 + 0x64c0001] ; clc ; jmp rsp
0x000000000006febd : push qword ptr [rbx + rcx - 0x18] ; ret
0x000000000017142b : push qword ptr [rbx - 0x5c13ffff] ; clc ; call rsp
0x000000000016bc37 : push qword ptr [rcx - 0x3d] ; std ; push rcx ; ret
0x000000000016bc2f : push qword ptr [rcx - 0x3e] ; std ; push rcx ; ret 0xfffd
0x00000000000d59c3 : push qword ptr [rcx] ; fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000d3654 : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x000000000006c491 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000038e71 : push qword ptr [rcx] ; rol byte ptr [rcx - 0x7d], cl ; clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000006d748 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000049c22 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000c45c4 : push qword ptr [rcx] ; shr bl, cl ; ret
0x0000000000059a9b : push qword ptr [rcx] ; shr cl, 0x1a ; ret
0x0000000000060a5f : push qword ptr [rcx] ; shr cl, 0x91 ; ret
0x00000000000f44dc : push qword ptr [rdi + 0x1b] ; ret
0x00000000000331fd : push qword ptr [rdi + 0x20] ; ret
0x00000000000df53b : push qword ptr [rdi + 0x22] ; ret
0x00000000000dab07 : push qword ptr [rdi + 0x36] ; ret
0x00000000000df6b3 : push qword ptr [rdi + 0xa] ; ret
0x00000000000da1c2 : push qword ptr [rdi + 0xb] ; ret
0x0000000000033571 : push qword ptr [rdi + 0xc] ; ret
0x000000000016fcd3 : push qword ptr [rdi + 1] ; add ah, cl ; lodsd eax, dword ptr [rsi] ; cmc ; call rsp
0x00000000000b84ac : push qword ptr [rdi + 1] ; ret
0x00000000000335bb : push qword ptr [rdi + 2] ; ret
0x00000000000da0ca : push qword ptr [rdi + 3] ; ret
0x00000000000da119 : push qword ptr [rdi + 4] ; ret
0x00000000000b70e0 : push qword ptr [rdi + 5] ; ret
0x00000000000b6fef : push qword ptr [rdi + 6] ; ret
0x00000000000b4606 : push qword ptr [rdi + 7] ; ret
0x0000000000033505 : push qword ptr [rdi + 8] ; ret
0x00000000000b341c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00000000000a84bc : push qword ptr [rdi + 9] ; ret
0x00000000000725b6 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000ceaa6 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010fd56 : push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x2a
0x00000000000e9d56 : push qword ptr [rdi + rbx - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000894ec : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f44b4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016c46b : push qword ptr [rdx + 0x42fffc7f] ; jg 0x16c477 ; call rdx
0x000000000016d09f : push qword ptr [rdx + 0x58fffcbb] ; ret
0x000000000016f443 : push qword ptr [rdx + rbp + 0x694c0001] ; jmp rsp
0x000000000009b8cb : push qword ptr [rdx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000015e17f : push qword ptr [rdx + rsi*8 - 0x4830011] ; out dx, eax ; jmp rsp
0x0000000000171c9b : push qword ptr [rdx - 0x2403fffe] ; stc ; jmp rsp
0x0000000000160653 : push qword ptr [rdx - 0x74] ; cmc ; call rbx
0x000000000016064f : push qword ptr [rdx - 0x74] ; cmc ; push qword ptr [rdx - 0x74] ; cmc ; call rbx
0x0000000000160307 : push qword ptr [rdx] ; sbb eax, 0x1ba3fff5 ; cmc ; jmp rcx
0x000000000016c407 : push qword ptr [rsi + 0x46fffc7c] ; jl 0x16c413 ; call rsi
0x000000000016c8f3 : push qword ptr [rsi + 0x46fffca4] ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call rsi
0x000000000016cdeb : push qword ptr [rsi + 0x46fffccb] ; retf ; cld ; call rsi
0x0000000000160afb : push qword ptr [rsi + rbx*8] ; cmc ; jmp rsp
0x000000000016c533 : push qword ptr [rsi + rdi*2 + 0x7e44fffc] ; cld ; call rsp
0x00000000001724db : push qword ptr [rsi + rdx*2 - 0x45d3fffe] ; cli ; jmp rsp
0x000000000016cc57 : push qword ptr [rsi + rdx*4 - 4] ; jmp rsp
0x000000000017168b : push qword ptr [rsi + rsi*8 + 0x61c0001] ; stc ; call rsp
0x00000000001714cb : push qword ptr [rsi - 0x5263ffff] ; clc ; jmp rsp
0x000000000016d51b : push qword ptr [rsp + rbp*2 - 0x32340000] ; jmp 0x16d52b
0x000000000016e0db : push qword ptr [rsp + rbp*4 + 0x5b4c0000] ; out dx, eax ; call rsp
0x000000000004eff2 : push qword ptr [rsp + rdx - 0x77] ; ret 0xe283
0x000000000017274b : push qword ptr [rsp - 0x933fffe] ; cli ; call rsp
0x0000000000110396 : push r12 ; mov eax, 1 ; ret
0x000000000011264c : push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000011264a : push r14 ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000007234c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000069cea : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000073431 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000111839 : push rax ; adc dh, dh ; ret 0x7401
0x00000000000761fd : push rax ; adc dh, dh ; ret 0xf0f
0x00000000001764e0 : push rax ; adc ebp, esp ; call qword ptr [rax]
0x000000000007234d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006f73c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000056bf9 : push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000016fa0d : push rax ; add dword ptr [rax], eax ; pushfq ; mov cl, 0xf4 ; call rsp
0x000000000002bd01 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000008c970 : push rax ; add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0x00000000000466fb : push rax ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000088187 : push rax ; add eax, ebp ; and dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00000000001153d9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001151c7 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000016c127 : push rax ; and ah, bh ; call rax
0x000000000011a381 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x000000000016c0a7 : push rax ; and esp, edi ; call rax
0x00000000000215a8 : push rax ; call rbx
0x000000000016bea4 : push rax ; clc ; sti ; push qword ptr [rax] ; cli ; sti ; call qword ptr [rax]
0x000000000016c24f : push rax ; cld ; call rax
0x00000000000c1cbb : push rax ; cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xc1cb8 ; ret
0x000000000016c358 : push rax ; cld ; jmp qword ptr [rax - 0x1f0003be]
0x000000000016c215 : push rax ; cld ; jmp qword ptr [rax]
0x000000000016c2d9 : push rax ; cld ; jmp rax
0x000000000016c228 : push rax ; cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000016c20c : push rax ; cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x000000000016be88 : push rax ; cli ; sti ; push qword ptr [rax] ; cld ; sti ; call qword ptr [rax]
0x00000000001850e0 : push rax ; cmc ; jmp qword ptr [rcx]
0x000000000016bf60 : push rax ; cmc ; sti ; call qword ptr [rax]
0x00000000000458dd : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000df611 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x00000000000fdf86 : push rax ; dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0xfdf98 ; ret
0x00000000000380ae : push rax ; dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x000000000014cb9f : push rax ; fsub st(5), st(0) ; jmp rax
0x000000000016bf44 : push rax ; idiv ebx ; push qword ptr [rax] ; stc ; sti ; call qword ptr [rax]
0x000000000017ec60 : push rax ; iretd ; sti ; call qword ptr [rax]
0x000000000015f2ff : push rax ; ja 0x15f2fa ; call qword ptr [rax]
0x000000000015f2fe : push rax ; ja 0x15f2fb ; call qword ptr [rax]
0x000000000015f26f : push rax ; jae 0x15f26a ; jmp qword ptr [rax]
0x000000000015f26e : push rax ; jae 0x15f26b ; jmp qword ptr [rax]
0x000000000015f2df : push rax ; jbe 0x15f2da ; call qword ptr [rax]
0x000000000015f2de : push rax ; jbe 0x15f2db ; call qword ptr [rax]
0x000000000015f28f : push rax ; je 0x15f28e ; inc dword ptr [rax] ; jne 0x15f292 ; call qword ptr [rax]
0x000000000015f28e : push rax ; je 0x15f28f ; inc dword ptr [rax] ; jne 0x15f293 ; call qword ptr [rax]
0x000000000016c5c0 : push rax ; jge 0x16c5c2 ; jmp rax
0x000000000009ed51 : push rax ; jmp 0x9e3cf
0x0000000000181e39 : push rax ; jmp qword ptr [rcx]
0x0000000000161f97 : push rax ; jnp 0x161f99 ; jmp qword ptr [rax]
0x000000000015f353 : push rax ; js 0x15f352 ; inc dword ptr [rax] ; jns 0x15f356 ; call qword ptr [rax]
0x000000000015f352 : push rax ; js 0x15f353 ; inc dword ptr [rax] ; jns 0x15f357 ; call qword ptr [rax]
0x0000000000186780 : push rax ; lahf ; cmc ; jmp qword ptr [rcx]
0x000000000006c7b2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000fffec : push rax ; mov bh, dh ; inc dword ptr [rbp - 0x769b8740] ; ret
0x00000000001603bb : push rax ; mov ch, dh ; jmp rax
0x000000000016d1db : push rax ; mov ebx, 0xbb80fffc ; cld ; jmp qword ptr [rax]
0x000000000016bce4 : push rax ; mov edi, 0xc020fffd ; std ; jmp qword ptr [rax]
0x0000000000110b86 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f2716 : push rax ; mov rsi, rdx ; call rax
0x000000000016caac : push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp rax
0x000000000011a1ec : push rax ; mul dword ptr [rdi] ; add bl, dh ; ret
0x0000000000074e82 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000076af2 : push rax ; or dh, dh ; ret 0x7404
0x0000000000076a65 : push rax ; or dh, dh ; ret 0xf04
0x000000000001fe41 : push rax ; or dh, dh ; ret 0xf08
0x000000000011dbcc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017d480 : push rax ; or eax, esi ; jmp qword ptr [rdx]
0x000000000016b316 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000009b12e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000f7d0 : push rax ; ret
0x000000000000d1c0 : push rax ; ret 0x11
0x000000000000abc8 : push rax ; ret 0xe
0x000000000016cdb3 : push rax ; retf 0xfffc ; or dl, 0xfc ; call qword ptr [rax]
0x00000000000ae454 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000073426 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006a24a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000010cd76 : push rax ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xffe9
0x00000000000f3735 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000d9141 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000171861 : push rax ; stc ; call rsp
0x000000000016beaf : push rax ; std ; sti ; jmp rax
0x0000000000188100 : push rax ; sti ; cmc ; jmp qword ptr [rcx]
0x000000000016bb11 : push rax ; sti ; push qword ptr [rax] ; push rdx ; sti ; call rax
0x000000000016becb : push rax ; sti ; sti ; call rax
0x000000000016307c : push rax ; stosd dword ptr [rdi], eax ; cli ; call qword ptr [rax]
0x000000000016ba90 : push rax ; sub bl, bh ; jmp qword ptr [rax]
0x000000000016ba97 : push rax ; sub ebx, edi ; call qword ptr [rax]
0x000000000016c0dc : push rax ; sub edi, esp ; jmp rax
0x000000000016cd0b : push rax ; xchg eax, edi ; cld ; push qword ptr [rax - 0x69] ; cld ; jmp rax
0x0000000000072bcd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000016bab7 : push rax ; xor ebx, edi ; jmp rax
0x00000000000d9202 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001724bd : push rbp ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; mov bl, 0xfa ; jmp rsp
0x0000000000114549 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000ca06e : push rbp ; add byte ptr [rcx + 0x63], cl ; ret
0x0000000000101756 : push rbp ; add dh, dh ; ret
0x0000000000114544 : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x1145a8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000011463c : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x1146a0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000018809d : push rbp ; add dword ptr [rax], eax ; adc bl, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000119468 : push rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000188085 : push rbp ; add dword ptr [rax], eax ; clc ; cli ; cmc ; jmp qword ptr [rcx]
0x000000000018812d : push rbp ; add dword ptr [rax], eax ; cmp bl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001880e5 : push rbp ; add dword ptr [rax], eax ; cmp bl, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000188145 : push rbp ; add dword ptr [rax], eax ; cwde ; sti ; cmc ; jmp qword ptr [rcx]
0x000000000018806d : push rbp ; add dword ptr [rax], eax ; loopne 0x188072 ; cmc ; jmp qword ptr [rcx]
0x000000000018815d : push rbp ; add dword ptr [rax], eax ; mov al, 0xfb ; cmc ; jmp qword ptr [rcx]
0x00000000001880fd : push rbp ; add dword ptr [rax], eax ; push rax ; sti ; cmc ; jmp qword ptr [rcx]
0x0000000000188491 : push rbp ; call qword ptr [rsi]
0x0000000000001cb9 : push rbp ; je 0x1ce7 ; ret
0x0000000000173d79 : push rbp ; jmp 0x173d7d
0x0000000000188401 : push rbp ; jmp qword ptr [rcx]
0x000000000011264d : push rbp ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000004ac2a : push rbp ; mov eax, 0x3e2c148 ; call 0x86ed8
0x00000000000f33a4 : push rbp ; nop ; mov rdx, r14 ; call rax
0x0000000000122658 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f2c23 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000c268b : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xc26bd ; or byte ptr [rcx], ch ; ret
0x000000000017b0a1 : push rbp ; out dx, eax ; call qword ptr [rax]
0x000000000006e007 : push rbp ; ret 0x32
0x00000000000e5e82 : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000025de : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x257b ; loop 0x25c6 ; ret 0x23cb
0x00000000000bff0b : push rbp ; test al, 0x89 ; ret
0x00000000000f2ab1 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00000000000f45d0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008156a : push rbp ; xor rax, rax ; ret
0x000000000007be81 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000c06d1 : push rbx ; add al, 0xeb ; ret 0xffb8
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000a3fe9 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e61f1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000bc14f : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000016fa95 : push rbx ; add dword ptr [rax], eax ; cmp al, 0xc8 ; hlt ; call rsp
0x0000000000187ef5 : push rbx ; add dword ptr [rax], eax ; js 0x187ef9 ; cmc ; jmp qword ptr [rcx]
0x0000000000187f0d : push rbx ; add dword ptr [rax], eax ; nop ; stc ; cmc ; jmp qword ptr [rcx]
0x0000000000187f3d : push rbx ; add dword ptr [rax], eax ; sar cl, 0xf5 ; jmp qword ptr [rcx]
0x0000000000187ead : push rbx ; add dword ptr [rax], eax ; stc ; cmc ; call qword ptr [rcx]
0x0000000000187f25 : push rbx ; add dword ptr [rax], eax ; test al, 0xf9 ; cmc ; jmp qword ptr [rcx]
0x00000000000bc142 : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000185479 : push rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000002053 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000015e134 : push rbx ; int1 ; out dx, eax ; jmp rax
0x0000000000029392 : push rbx ; je 0x293a9 ; cmp esi, 3 ; je 0x293a9 ; pop rbx ; ret
0x00000000000b8aed : push rbx ; je 0xb8aca ; mov eax, 1 ; ret
0x00000000000b8aec : push rbx ; je 0xb8acb ; mov eax, 1 ; ret
0x000000000009ab7c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000095562 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x0000000000065132 : push rbx ; or al, 0xf6 ; ret 0xf04
0x00000000000724d8 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003cdc : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000002048f : push rbx ; ret
0x000000000005a813 : push rbx ; ret 0xffff
0x000000000007be85 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006e386 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000160363 : push rbx ; sbb dh, ch ; jmp qword ptr [rax]
0x00000000000f0f4a : push rbx ; sbb dh, dh ; ret 0x7508
0x000000000016bb19 : push rbx ; sti ; jmp qword ptr [rax - 0x2f0004c5]
0x00000000000c1f0d : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000070041 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000015bf5c : push rbx ; xchg eax, edx ; jae 0x15bf3b ; push rsi ; pop rdx ; je 0x15bf30 ; ret 0xacfc
0x000000000010dbb5 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x0000000000187d25 : push rcx ; add dword ptr [rax], eax ; fsub st(7) ; cmc ; jmp qword ptr [rcx]
0x0000000000187c95 : push rcx ; add dword ptr [rax], eax ; out 0xf5, eax ; jmp qword ptr [rcx]
0x0000000000187cf5 : push rcx ; add dword ptr [rax], eax ; test al, 0xe7 ; cmc ; jmp qword ptr [rcx]
0x000000000008d429 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008d4a8 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000114aae : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000181ec9 : push rcx ; call qword ptr [rdx]
0x000000000015b1e5 : push rcx ; call qword ptr [rsi]
0x000000000016c259 : push rcx ; cld ; call rax
0x000000000016c2b9 : push rcx ; cld ; jmp qword ptr [rax]
0x00000000001852f1 : push rcx ; cmc ; jmp qword ptr [rcx]
0x000000000016ef41 : push rcx ; int1 ; jmp rsp
0x000000000008e35d : push rcx ; jl 0x8e3ae ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008e4c4 : push rcx ; jl 0x8e515 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000008eab0 : push rcx ; jl 0x8eb01 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008ec17 : push rcx ; jl 0x8ec68 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000008f1fd : push rcx ; jl 0x8f24e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000008f364 : push rcx ; jl 0x8f3b5 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x000000000006a3be : push rcx ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000005eb6b : push rcx ; ret
0x000000000016bc33 : push rcx ; ret 0xfffd
0x00000000000d51eb : push rcx ; ret 8
0x0000000000098422 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000969b2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000007ad1c : push rdi ; adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x0000000000098580 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000098258 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009826a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008d0e4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000967fa : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x0000000000133f99 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000008d054 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008cfe4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002c06c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000017250d : push rdi ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x00000000001724fd : push rdi ; add al, byte ptr [rax] ; jl 0x1724c7 ; cli ; call rsp
0x000000000009822a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000188265 : push rdi ; add dword ptr [rax], eax ; call 0x2218786f
0x00000000001882c5 : push rdi ; add dword ptr [rax], eax ; std ; cmc ; jmp qword ptr [rcx]
0x00000000001882ad : push rdi ; add dword ptr [rax], eax ; xor ch, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000095a7c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000968bc : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000460a8 : push rdi ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000098288 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000e8e4a : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x000000000012b3e8 : push rdi ; clc ; ret
0x00000000000038eb : push rdi ; clc ; salc ; jb 0x3971 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000012b560 : push rdi ; cld ; ret
0x000000000012c087 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001855e1 : push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000016fc31 : push rdi ; cmc ; jmp rsp
0x0000000000133879 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000110c05 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000001337f9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013364a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000173e81 : push rdi ; jmp 0x173e85
0x00000000000722a4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001336da : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000101710 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000007ad20 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x00000000000982cc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009830a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000982aa : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a7661 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00000000000438da : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004219a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001181c2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000000421a1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000006f740 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000095c60 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000096ab0 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000b41cd : push rdi ; ret
0x000000000014837e : push rdi ; ret 0xff3
0x00000000000de935 : push rdi ; ret 0xffff
0x0000000000160f10 : push rdi ; retf 0xfff6 ; or dl, 0xf6 ; jmp qword ptr [rdx]
0x0000000000115683 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000001166fb : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x000000000012c287 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012baaa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000016bb5d : push rdi ; sti ; jmp qword ptr [rax]
0x000000000012be87 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000110c4d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000045539 : push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e519c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b91f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000098560 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008009b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000044b2a : push rdx ; add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000cf9fa : push rdx ; add al, 0 ; add byte ptr [rcx], bh ; ret 0xf74
0x0000000000177da5 : push rdx ; add byte ptr [rax], al ; fmul st(1) ; in eax, dx ; jmp qword ptr [rax]
0x0000000000187d6d : push rdx ; add dword ptr [rax], eax ; and al, ch ; cmc ; jmp qword ptr [rcx]
0x000000000016fa65 : push rdx ; add dword ptr [rax], eax ; cld ; ret 0xfff4
0x0000000000187e1d : push rdx ; add dword ptr [rax], eax ; mov al, 0xf8 ; cmc ; jmp qword ptr [rcx]
0x000000000010222e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000016c1f9 : push rdx ; cld ; inc dword ptr [rax + 0x54] ; cld ; call rax
0x000000000016c219 : push rdx ; cld ; jmp qword ptr [rax]
0x000000000016c2fd : push rdx ; cld ; push qword ptr [rax] ; cld ; jmp rax
0x000000000016d7f9 : push rdx ; in al, dx ; call rsp
0x000000000017ed21 : push rdx ; int1 ; jmp qword ptr [rbx]
0x0000000000181f39 : push rdx ; jmp qword ptr [rcx]
0x000000000016c494 : push rdx ; jnp 0x16c496 ; jmp rdx
0x0000000000001b0d : push rdx ; mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x000000000007ddee : push rdx ; or al, byte ptr [rax] ; ret
0x000000000007c1d6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000017e245 : push rdx ; ret
0x000000000016d06c : push rdx ; ret 0xfffc
0x000000000016bb15 : push rdx ; sti ; call rax
0x0000000000078533 : push rdx ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000146fc4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000098d29 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x98d80 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000001724dd : push rsi ; add al, byte ptr [rax] ; sub al, 0xba ; cli ; jmp rsp
0x000000000017825d : push rsi ; add byte ptr [rax], al ; loopne 0x17821d ; out dx, al ; jmp qword ptr [rcx]
0x0000000000134231 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000dca96 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000018818d : push rsi ; add dword ptr [rax], eax ; loopne 0x188193 ; cmc ; jmp qword ptr [rcx]
0x0000000000188205 : push rsi ; add dword ptr [rax], eax ; mov ah, bh ; cmc ; jmp qword ptr [rcx]
0x00000000001881d5 : push rsi ; add dword ptr [rax], eax ; pop rax ; cld ; cmc ; jmp qword ptr [rcx]
0x000000000018824d : push rsi ; add dword ptr [rax], eax ; sar ah, 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001342a1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000094435 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000001341c1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000943d3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000146fd9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012b512 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012bc81 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012b8b5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012ba95 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bc75 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012b6d5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015cb00 : push rsi ; cli ; push 0x6e ; ja 0x15ca8f ; ret 0x48f
0x0000000000185579 : push rsi ; cmc ; jmp qword ptr [rcx]
0x000000000014a926 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000000d16dc : push rsi ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000014a916 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000016d849 : push rsi ; in al, dx ; call rsp
0x000000000014a8e6 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000000f26f2 : push rsi ; je 0xf2708 ; mov eax, 7 ; ret
0x000000000016c3f0 : push rsi ; jg 0x16c3f2 ; jmp rsi
0x0000000000045cdb : push rsi ; jmp 0x45ce2
0x0000000000182021 : push rsi ; jmp qword ptr [rcx]
0x00000000000d94cb : push rsi ; js 0xd951f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000d9d98 : push rsi ; js 0xd9dec ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000004f9fe : push rsi ; or al, 0x83 ; ret
0x000000000004f9cb : push rsi ; or al, 0xf6 ; ret 0xf08
0x000000000008758d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000a765e : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00000000000cb8dc : push rsi ; or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000015bf60 : push rsi ; pop rdx ; je 0x15bf2c ; ret 0xacfc
0x000000000011264b : push rsi ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000329af : push rsi ; ret
0x00000000000c7950 : push rsi ; ret 0x7420
0x000000000008e00a : push rsi ; ret 0x7518
0x00000000000dc20f : push rsi ; ret 0xf02
0x00000000000514ca : push rsi ; ret 0xf10
0x000000000016bc70 : push rsi ; ret 0xfffd
0x000000000016bc68 : push rsi ; sar ch, 0xff ; push rsi ; sar ebp, -1 ; push rsi ; ret 0xfffd
0x000000000016bc6c : push rsi ; sar ebp, -1 ; push rsi ; ret 0xfffd
0x000000000010b833 : push rsi ; sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000000c2065 : push rsi ; sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000d4867 : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001059e4 : push rsi ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000014a8f6 : push rsi ; sub eax, edx ; ret
0x00000000000de5e7 : push rsi ; xor ax, ax ; ret
0x0000000000146fee : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f05c : push rsp ; adc byte ptr [rcx], al ; add ah, ch ; ret 0xfff1
0x00000000000c35a1 : push rsp ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x1f887
0x000000000016fac5 : push rsp ; add dword ptr [rax], eax ; fsub st(6), st(0) ; hlt ; call rsp
0x0000000000187f6d : push rsp ; add dword ptr [rax], eax ; loopne 0x187f71 ; cmc ; call qword ptr [rax]
0x00000000001859b4 : push rsp ; add dword ptr cs:[rax], eax ; js 0x185a26 ; cmc ; jmp qword ptr [rcx]
0x0000000000174fb4 : push rsp ; and al, 0 ; add al, cl ; fldpi ; call qword ptr [rdx]
0x0000000000076698 : push rsp ; and al, 0x10 ; call rdi
0x00000000000ef891 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000000ef78d : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000765d2 : push rsp ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x00000000000762c3 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000a6b2e : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x0000000000076627 : push rsp ; and al, 0x28 ; call rax
0x00000000000e0bd4 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000043aa0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000043a5a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000075f52 : push rsp ; and eax, 0x950f4100 ; ret
0x000000000016c1fd : push rsp ; cld ; call rax
0x00000000000b8ddf : push rsp ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000001863b4 : push rsp ; cmp byte ptr [rcx], al ; add byte ptr [rax], ch ; cwde ; cmc ; jmp qword ptr [rcx]
0x000000000016d504 : push rsp ; imul eax, dword ptr [rax], 0 ; pop rsp ; ret
0x000000000016c724 : push rsp ; ja 0x16c726 ; call rsp
0x000000000015fd95 : push rsp ; jmp qword ptr [rax]
0x00000000000b88f6 : push rsp ; jne 0xb8883 ; mov eax, 0x7d00 ; ret
0x000000000018a6b4 : push rsp ; jnp 0x18a6bf ; add byte ptr [rax], ch ; sbb ah, bh ; jmp qword ptr [rsi]
0x000000000008d76b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000016cf40 : push rsp ; leave ; cld ; jmp rsp
0x0000000000110397 : push rsp ; mov eax, 1 ; ret
0x000000000018b7b4 : push rsp ; mov word ptr [rcx], es ; add al, ch ; ret 0xfff6
0x00000000001733b4 : push rsp ; or byte ptr [rax], al ; add al, ch ; add ebx, ebp ; jmp rbx
0x00000000001736b4 : push rsp ; or eax, dword ptr [rax] ; add al, ch ; adc bl, ch ; call rsi
0x000000000017250b : push rsp ; push rdi ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x00000000000329a9 : push rsp ; ret
0x0000000000032bd8 : push rsp ; ret 0x2e0f
0x00000000000ea4f4 : push rsp ; ret 0x8940
0x000000000003289a : push rsp ; ret 0xf66
0x00000000001844b4 : push rsp ; sbb dword ptr [rcx], eax ; add al, ch ; ret
0x000000000017beb4 : push rsp ; xchg eax, ebx ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x11], bh ; call qword ptr [rdx]
0x000000000011faf0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000004cc44 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d49
0x000000000016de4d : pushfq ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; in eax, dx ; call rsp
0x00000000001779fc : pushfq ; add byte ptr [rax], r8b ; add byte ptr [rbp - 0x13], ah ; call rdi
0x0000000000171604 : pushfq ; add dword ptr [rax], eax ; cmp al, 0xe8 ; clc ; jmp rsp
0x000000000018c82d : pushfq ; add dword ptr [rax], eax ; or edi, esi ; call qword ptr [rbx]
0x0000000000193984 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000023aa1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000016f408 : pushfq ; call rsp
0x000000000016caed : pushfq ; cld ; jmp rax
0x00000000001865c9 : pushfq ; cmc ; jmp qword ptr [rbx]
0x000000000016d3a8 : pushfq ; cmp al, 0xeb ; call rsp
0x00000000000c9175 : pushfq ; fadd qword ptr [rax] ; or byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x000000000016dcc9 : pushfq ; in al, dx ; jmp rsp
0x000000000016eb28 : pushfq ; jbe 0x16eb1e ; call rsp
0x000000000016eb48 : pushfq ; jl 0x16eb3e ; jmp rsp
0x00000000001727bc : pushfq ; jl 0x1727c7 ; add byte ptr [rsi + rdi*8], bl ; cli ; jmp rsp
0x0000000000174939 : pushfq ; jmp 0x17493d
0x0000000000174969 : pushfq ; jmp 0x17496d
0x000000000001fae6 : pushfq ; jmp 0x1faae
0x000000000016f6a0 : pushfq ; jrcxz 0x16f699 ; call rsp
0x00000000001714d0 : pushfq ; lodsd eax, dword ptr [rsi] ; clc ; jmp rsp
0x000000000016fa10 : pushfq ; mov cl, 0xf4 ; call rsp
0x000000000006fbfc : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000018b7fc : pushfq ; mov word ptr [rcx], es ; add byte ptr [rax], al ; ret
0x000000000016ea30 : pushfq ; movsxd rsi, eax ; call rsp
0x00000000001207f0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e7a4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000001883fc : pushfq ; pop rax ; add dword ptr [rax], eax ; adc bh, bh ; cmc ; jmp qword ptr [rcx]
0x00000000001880fc : pushfq ; push rbp ; add dword ptr [rax], eax ; push rax ; sti ; cmc ; jmp qword ptr [rcx]
0x000000000016d848 : pushfq ; push rsi ; in al, dx ; call rsp
0x000000000016091c : pushfq ; ret
0x000000000016e3dc : pushfq ; ret 0
0x000000000016e3c8 : pushfq ; ret 0xffef
0x000000000009a7bb : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000001745fc : pushfq ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x80], al ; jmp 0x17460a
0x00000000001928fc : pushfq ; std ; add dword ptr [rax], eax ; loopne 0x1928a1 ; sti ; jmp qword ptr [rdx]
0x0000000000192481 : pushfq ; sti ; jmp qword ptr [rdx]
0x000000000018affc : pushfq ; test byte ptr [rcx], al ; add byte ptr [rax], ah ; mov dl, 0xf6 ; call qword ptr [rax]
0x0000000000171ee4 : pushfq ; xor al, byte ptr [rdx] ; add byte ptr [rbp - 6], bh ; jmp rsp
0x000000000016f5fc : pushfq ; xor eax, 0xbafc0001 ; jmp rsp
0x00000000000adcd4 : rcl byte ptr [rax + 0x41000001], 0x39 ; ret 0xf40
0x000000000016bb18 : rcl byte ptr [rbx - 5], 1 ; jmp qword ptr [rax - 0x2f0004c5]
0x000000000016c258 : rcl byte ptr [rcx - 4], 1 ; call rax
0x000000000016c1c0 : rcl byte ptr [rcx], 1 ; cld ; jmp qword ptr [rax]
0x0000000000180d40 : rcl ch, 0xf2 ; call qword ptr [rax]
0x00000000000d9140 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000160598 : rcl dword ptr [rax - 0x6f22000b], 1 ; cmc ; jmp rdi
0x000000000015bf5f : rcl dword ptr [rsi + 0x5a], cl ; je 0x15bf2d ; ret 0xacfc
0x000000000015bf5b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x15bf31 ; ret 0xacfc
0x0000000000032d7f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000172c90 : rcr bl, 0xea ; call qword ptr [rax]
0x00000000000669ba : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000001fb56 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000b4b90 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ce876 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000004de9c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000421a7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000018d6d0 : rcr byte ptr [rbp - 9], 1 ; jmp qword ptr [rcx]
0x00000000000b8328 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000006c821 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022820 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000a79a9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000028ebb : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b4bdc : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3544 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000078ae3 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000066590 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000067c7b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000eca78 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000cc8bc : rcr byte ptr [rcx], 1 ; sti ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000015c37d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000015f0c0 : rcr byte ptr [rdi - 0xd], 0xff ; rcr byte ptr [rdi - 0xd], 1 ; jmp rax
0x000000000015f0c4 : rcr byte ptr [rdi - 0xd], 1 ; jmp rax
0x00000000000e0ed9 : rcr byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016bfe0 : rcr ch, 0xfb ; call qword ptr [rax - 0x1f000420]
0x0000000000174fd0 : rcr cl, 1 ; jmp 0x174fd6
0x000000000002cc8d : rcr dword ptr [rbx + 0x48], -0x77 ; enter 0x415d, 0x5c ; ret
0x00000000000421d9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000126766 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011c294 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000102158 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000033b7a : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000937 : ret
0x000000000002022c : ret 0
0x0000000000006d29 : ret 0x10
0x00000000000007bf : ret 0x102
0x000000000006517f : ret 0x107
0x00000000000311a9 : ret 0x1074
0x000000000008cacc : ret 0x1076
0x0000000000005889 : ret 0x11
0x0000000000076cda : ret 0x110
0x000000000004217c : ret 0x114d
0x00000000000c67c6 : ret 0x1176
0x0000000000023cc0 : ret 0x1189
0x00000000000e8729 : ret 0x11e8
0x00000000000cd8f5 : ret 0x11e9
0x00000000000048a8 : ret 0x12
0x000000000008fc4a : ret 0x13
0x000000000003948a : ret 0x1311
0x000000000002fd98 : ret 0x1362
0x00000000000e2513 : ret 0x1374
0x00000000000f646a : ret 0x1376
0x0000000000032752 : ret 0x138b
0x000000000002bc74 : ret 0x139b
0x0000000000010f80 : ret 0x14
0x00000000000c7bb8 : ret 0x142b
0x000000000005386c : ret 0x144
0x000000000008c279 : ret 0x1474
0x000000000008d7a9 : ret 0x147c
0x000000000005c04b : ret 0x148
0x00000000000a5ff3 : ret 0x1489
0x00000000000c26fb : ret 0x148b
0x00000000000440cd : ret 0x149
0x00000000000753f9 : ret 0x14c
0x000000000002f349 : ret 0x14d
0x000000000008b7a8 : ret 0x1574
0x00000000000329e0 : ret 0x1575
0x0000000000103a20 : ret 0x1576
0x00000000000d1068 : ret 0x1589
0x000000000001c048 : ret 0x1636
0x0000000000019f48 : ret 0x163e
0x000000000001aaa0 : ret 0x1646
0x00000000000e8a77 : ret 0x1674
0x00000000000f62b7 : ret 0x1676
0x000000000007e73a : ret 0x17
0x00000000000c4652 : ret 0x1774
0x00000000000adcc6 : ret 0x1775
0x00000000000dfba6 : ret 0x1777
0x00000000000b7223 : ret 0x17e8
0x00000000000091b0 : ret 0x18
0x000000000008e659 : ret 0x180f
0x000000000002ae76 : ret 0x1874
0x00000000000815d5 : ret 0x1876
0x000000000005d6bf : ret 0x19
0x000000000007e65a : ret 0x190
0x0000000000081275 : ret 0x1974
0x0000000000022ca3 : ret 0x19e9
0x0000000000089f53 : ret 0x1a74
0x0000000000037ea2 : ret 0x1a75
0x000000000015c8da : ret 0x1ad4
0x000000000015b06d : ret 0x1b49
0x00000000000e8e52 : ret 0x1b72
0x0000000000087b7a : ret 0x1b8
0x00000000000cda43 : ret 0x1b9
0x0000000000001bf5 : ret 0x1bb7
0x00000000000a9c8f : ret 0x1be
0x0000000000074007 : ret 0x1bf
0x000000000000349f : ret 0x1bf9
0x000000000009f76b : ret 0x1c
0x00000000000dfca1 : ret 0x1c77
0x00000000000bf0d7 : ret 0x1ceb
0x0000000000156550 : ret 0x1d4
0x0000000000156ce8 : ret 0x1d5
0x0000000000081176 : ret 0x1d74
0x00000000000021d9 : ret 0x1dd4
0x00000000000e2ead : ret 0x1de8
0x00000000000267d7 : ret 0x1deb
0x00000000000898fc : ret 0x1ee8
0x000000000002091a : ret 0x1f0f
0x00000000001016ae : ret 0x1f72
0x000000000009ada3 : ret 0x1f74
0x0000000000078fee : ret 0x1f76
0x000000000014b79a : ret 0x1f9
0x000000000002b650 : ret 0x200
0x00000000000ff796 : ret 0x2041
0x000000000007c4fd : ret 0x2074
0x0000000000039748 : ret 0x207e
0x0000000000032558 : ret 0x2148
0x0000000000117ac4 : ret 0x2175
0x000000000007c48b : ret 0x2275
0x0000000000098e87 : ret 0x2276
0x000000000007c5b8 : ret 0x2288
0x00000000000cc078 : ret 0x22e8
0x00000000000077b8 : ret 0x23
0x00000000001051d0 : ret 0x233c
0x00000000001484e2 : ret 0x2373
0x0000000000033ef2 : ret 0x237f
0x00000000000025e7 : ret 0x23cb
0x0000000000155558 : ret 0x24
0x00000000000027d8 : ret 0x244f
0x000000000007866d : ret 0x2475
0x0000000000071ba5 : ret 0x2501
0x000000000008d288 : ret 0x2574
0x00000000000a2ecd : ret 0x257e
0x000000000012eee5 : ret 0x26
0x00000000000041b8 : ret 0x27
0x00000000000f4cba : ret 0x277
0x000000000007e576 : ret 0x2774
0x00000000000e0613 : ret 0x27e8
0x000000000010ebc4 : ret 0x28
0x000000000000054f : ret 0x2800
0x000000000008fde5 : ret 0x280f
0x0000000000104ce0 : ret 0x2875
0x00000000000815c5 : ret 0x2876
0x00000000001107b2 : ret 0x28a6
0x0000000000056fec : ret 0x28e9
0x00000000000acab3 : ret 0x28f5
0x000000000009ead5 : ret 0x2941
0x0000000000039a79 : ret 0x2944
0x00000000000413e8 : ret 0x2948
0x00000000000d0fb3 : ret 0x2949
0x00000000000ee8ea : ret 0x294c
0x0000000000042894 : ret 0x2973
0x0000000000078b7b : ret 0x2975
0x00000000000d0984 : ret 0x2977
0x00000000000fb752 : ret 0x29f6
0x00000000000f4551 : ret 0x2a
0x00000000000fed9a : ret 0x2a09
0x00000000000fa7ba : ret 0x2a4c
0x0000000000001b15 : ret 0x2a63
0x00000000000c7a8b : ret 0x2aeb
0x00000000000deb8c : ret 0x2b
0x00000000000ed2da : ret 0x2b14
0x00000000000e9992 : ret 0x2b18
0x00000000000e978a : ret 0x2b1a
0x00000000000e81b2 : ret 0x2b2c
0x000000000006b62f : ret 0x2b48
0x0000000000022fe4 : ret 0x2b49
0x00000000000991e2 : ret 0x2b77
0x000000000010b6ab : ret 0x2b8
0x00000000000e2952 : ret 0x2bb8
0x000000000004b52f : ret 0x2be8
0x0000000000104cd9 : ret 0x2c3c
0x00000000000bec54 : ret 0x2d
0x00000000001016a0 : ret 0x2d72
0x00000000000561e1 : ret 0x2e
0x0000000000032bd9 : ret 0x2e0f
0x000000000009b78c : ret 0x2f
0x00000000000aa19a : ret 0x2f39
0x00000000000a9f99 : ret 0x2f3b
0x00000000000a8a42 : ret 0x2f50
0x000000000007ad2e : ret 0x2f74
0x00000000000367a8 : ret 0x3039
0x0000000000001b88 : ret 0x306a
0x00000000000cb60b : ret 0x30f
0x0000000000022eb5 : ret 0x3101
0x00000000000d34f6 : ret 0x3108
0x0000000000074a8f : ret 0x3110
0x00000000000230bd : ret 0x3145
0x000000000010bba6 : ret 0x3149
0x00000000000e7e09 : ret 0x31e8
0x000000000006e008 : ret 0x32
0x000000000007a01a : ret 0x320e
0x000000000007487a : ret 0x328f
0x000000000005eb23 : ret 0x33
0x000000000010b830 : ret 0x334c
0x000000000010ba38 : ret 0x334d
0x00000000000da212 : ret 0x3375
0x0000000000068bb9 : ret 0x337b
0x00000000000663b9 : ret 0x33a3
0x000000000008d789 : ret 0x347c
0x000000000002f041 : ret 0x348
0x0000000000028322 : ret 0x349
0x0000000000041434 : ret 0x35
0x00000000000da1b0 : ret 0x3575
0x0000000000037ef8 : ret 0x357e
0x00000000000ca645 : ret 0x35e8
0x000000000003042e : ret 0x36
0x00000000000e6d0a : ret 0x36a
0x000000000002be5a : ret 0x370a
0x00000000000cf748 : ret 0x374
0x000000000001f882 : ret 0x37b5
0x00000000000bb6ba : ret 0x380
0x000000000015c1ba : ret 0x3827
0x000000000006b03f : ret 0x3841
0x000000000008a3db : ret 0x3845
0x00000000000815b5 : ret 0x3876
0x000000000015a846 : ret 0x38ae
0x00000000000666e6 : ret 0x38b
0x000000000006106e : ret 0x3901
0x00000000000ca958 : ret 0x3902
0x0000000000100c18 : ret 0x3904
0x000000000008d1a6 : ret 0x3941
0x00000000000e3fda : ret 0x3944
0x00000000000c3477 : ret 0x3945
0x00000000000267ed : ret 0x3948
0x000000000002b255 : ret 0x3949
0x000000000009d6f3 : ret 0x394c
0x0000000000031f2d : ret 0x394d
0x00000000000a54e6 : ret 0x39e9
0x0000000000098792 : ret 0x3a01
0x00000000001484cb : ret 0x3a73
0x00000000000bd9a2 : ret 0x3b01
0x00000000000cdcad : ret 0x3b04
0x00000000000c1264 : ret 0x3b45
0x0000000000116e53 : ret 0x3b48
0x00000000000ab015 : ret 0x3b8
0x00000000000a872a : ret 0x3bba
0x0000000000055da8 : ret 0x3c
0x00000000000e160a : ret 0x3c01
0x0000000000100276 : ret 0x3c72
0x000000000007c471 : ret 0x3c75
0x0000000000006d20 : ret 0x3d
0x00000000000c5826 : ret 0x3d01
0x0000000000032620 : ret 0x3d75
0x000000000003ce40 : ret 0x3d7e
0x000000000002260e : ret 0x3d83
0x0000000000040ec7 : ret 0x3dbe
0x000000000012d35a : ret 0x3ec
0x0000000000068fab : ret 0x3f7
0x00000000000c69ea : ret 0x4001
0x00000000000009f5 : ret 0x4021
0x00000000000fe363 : ret 0x4078
0x000000000009b1d9 : ret 0x408d
0x0000000000022a60 : ret 0x4101
0x0000000000102232 : ret 0x4102
0x00000000000254b3 : ret 0x4104
0x0000000000046e09 : ret 0x4108
0x000000000004896c : ret 0x4110
0x000000000007745c : ret 0x4117
0x00000000000f0606 : ret 0x4128
0x000000000004f031 : ret 0x4140
0x000000000008d453 : ret 0x4153
0x00000000000db205 : ret 0x4164
0x000000000002369e : ret 0x41c3
0x0000000000103e77 : ret 0x4201
0x000000000010a0c5 : ret 0x4203
0x0000000000129a9a : ret 0x423
0x00000000000a8674 : ret 0x4240
0x000000000008dd9a : ret 0x4266
0x00000000000a88fe : ret 0x428d
0x000000000008cc7b : ret 0x42eb
0x00000000000c0b6c : ret 0x42f6
0x000000000006f43a : ret 0x4376
0x0000000000029553 : ret 0x4389
0x00000000000a5a69 : ret 0x43e9
0x00000000000aa62a : ret 0x4401
0x0000000000117be2 : ret 0x4404
0x00000000000b7d15 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x00000000000473d1 : ret 0x440f
0x0000000000000456 : ret 0x4412
0x00000000000c65b4 : ret 0x4422
0x00000000000c34f9 : ret 0x4489
0x0000000000032c80 : ret 0x448b
0x0000000000038928 : ret 0x44c7
0x00000000000c49b6 : ret 0x4504
0x00000000000f6747 : ret 0x4510
0x000000000003417e : ret 0x4577
0x00000000000b6aaf : ret 0x4589
0x0000000000066848 : ret 0x45f6
0x000000000008a7da : ret 0x4601
0x000000000004e023 : ret 0x4675
0x0000000000028d47 : ret 0x4676
0x000000000010542f : ret 0x46c7
0x00000000000f25f6 : ret 0x46e9
0x000000000008d204 : ret 0x474
0x000000000015b344 : ret 0x474c
0x0000000000020c09 : ret 0x4801
0x0000000000087371 : ret 0x4802
0x0000000000066851 : ret 0x4803
0x0000000000025ba3 : ret 0x4804
0x000000000008741d : ret 0x4805
0x0000000000087405 : ret 0x4806
0x00000000000e8e3b : ret 0x4807
0x000000000010454f : ret 0x4808
0x000000000002ae84 : ret 0x4809
0x00000000000eb292 : ret 0x480a
0x00000000000eae92 : ret 0x480b
0x000000000004a824 : ret 0x480f
0x0000000000043736 : ret 0x4810
0x00000000000b68cc : ret 0x4811
0x00000000001120a1 : ret 0x4812
0x00000000000e933d : ret 0x4814
0x0000000000044e82 : ret 0x481e
0x0000000000044ea5 : ret 0x4820
0x00000000000ef0b4 : ret 0x4830
0x000000000005eb4a : ret 0x4840
0x00000000000b73c8 : ret 0x4864
0x00000000000f6365 : ret 0x4875
0x00000000000ef1b9 : ret 0x48b
0x000000000007e2c8 : ret 0x48c3
0x000000000003669e : ret 0x48d
0x000000000015cb06 : ret 0x48f
0x0000000000020b89 : ret 0x4901
0x000000000003216c : ret 0x4903
0x0000000000027f29 : ret 0x4904
0x000000000008769e : ret 0x4906
0x0000000000049009 : ret 0x4908
0x00000000000aabb1 : ret 0x4909
0x000000000011d972 : ret 0x4910
0x000000000007a956 : ret 0x4920
0x00000000000b2ab9 : ret 0x4948
0x00000000000038f3 : ret 0x49ec
0x00000000000ffd0e : ret 0x4a01
0x00000000000c684c : ret 0x4a74
0x00000000000c546d : ret 0x4a8b
0x00000000001162f9 : ret 0x4ae9
0x00000000000e45bf : ret 0x4b01
0x000000000011b335 : ret 0x4b9
0x000000000002526c : ret 0x4c01
0x00000000000875e1 : ret 0x4c02
0x00000000000c6bd2 : ret 0x4c04
0x000000000005bc50 : ret 0x4c08
0x0000000000101c02 : ret 0x4c0c
0x000000000007820f : ret 0x4c10
0x00000000000c60b1 : ret 0x4c20
0x0000000000044536 : ret 0x4c40
0x00000000000ca6f8 : ret 0x4c6
0x00000000000aba5d : ret 0x4c80
0x0000000000025117 : ret 0x4c88
0x000000000002465c : ret 0x4d01
0x00000000000e9559 : ret 0x4d02
0x00000000000946a2 : ret 0x4d10
0x00000000000eee39 : ret 0x4d64
0x00000000000224d0 : ret 0x4d74
0x00000000000d784d : ret 0x4de9
0x000000000015c567 : ret 0x4e27
0x000000000006cda0 : ret 0x4e8b
0x000000000002db3e : ret 0x4e9
0x000000000002dd9a : ret 0x4ea
0x00000000000aa369 : ret 0x4eb
0x0000000000028d3e : ret 0x4f72
0x0000000000034024 : ret 0x4f77
0x0000000000193989 : ret 0x503
0x00000000000c52a5 : ret 0x5089
0x000000000001fffe : ret 0x508b
0x00000000001484b4 : ret 0x5173
0x000000000000318e : ret 0x52c0
0x00000000000652d8 : ret 0x5389
0x00000000000d16d0 : ret 0x5408
0x0000000000074291 : ret 0x5475
0x000000000008d769 : ret 0x547c
0x0000000000043ac6 : ret 0x5488
0x00000000000339d6 : ret 0x5489
0x000000000015a7cc : ret 0x5508
0x00000000000308df : ret 0x5525
0x000000000000245e : ret 0x5576
0x00000000000c26ca : ret 0x5589
0x000000000007c457 : ret 0x5675
0x00000000000215f8 : ret 0x56e9
0x00000000000f6172 : ret 0x577
0x000000000015ca98 : ret 0x5803
0x000000000002ac8d : ret 0x587e
0x000000000003529b : ret 0x589
0x00000000000634b2 : ret 0x58e8
0x000000000015a4a0 : ret 0x591c
0x00000000000c6851 : ret 0x5974
0x0000000000003269 : ret 0x5a51
0x000000000015b207 : ret 0x5ae4
0x00000000000ce099 : ret 0x5ba
0x0000000000002f9f : ret 0x5bdb
0x0000000000026241 : ret 0x5c77
0x0000000000003055 : ret 0x5cbe
0x0000000000002870 : ret 0x5d52
0x00000000000f0336 : ret 0x5d5b
0x000000000005641c : ret 0x5d75
0x00000000000aaad2 : ret 0x5e9
0x00000000000255d6 : ret 0x5f5e
0x00000000000e479e : ret 0x5f74
0x00000000000004b9 : ret 0x6080
0x000000000007ad24 : ret 0x6174
0x0000000000002725 : ret 0x617e
0x000000000015cf32 : ret 0x62c1
0x0000000000075d58 : ret 0x62e9
0x000000000004e053 : ret 0x6348
0x000000000006ee42 : ret 0x6349
0x00000000000c6780 : ret 0x634d
0x000000000009954a : ret 0x6375
0x000000000008044f : ret 0x63be
0x000000000008d759 : ret 0x647c
0x00000000000f6688 : ret 0x6601
0x000000000008d80a : ret 0x6610
0x0000000000081542 : ret 0x6620
0x0000000000002827 : ret 0x6642
0x000000000007e315 : ret 0x66c3
0x000000000008076a : ret 0x672
0x00000000000dcaa6 : ret 0x674
0x000000000015a4bf : ret 0x67b2
0x00000000000a8671 : ret 0x6948
0x00000000000f789d : ret 0x6ae9
0x00000000000b90af : ret 0x6b8
0x0000000000003ce2 : ret 0x6bba
0x000000000004a709 : ret 0x6be9
0x000000000009ad01 : ret 0x6c74
0x000000000007642a : ret 0x6d0
0x000000000016b193 : ret 0x6e1f
0x000000000015d0c1 : ret 0x6f9
0x0000000000060c59 : ret 0x71e8
0x00000000001267fe : ret 0x7280
0x0000000000072901 : ret 0x7401
0x00000000000790f3 : ret 0x7402
0x0000000000076af5 : ret 0x7404
0x000000000006a973 : ret 0x7408
0x0000000000065de1 : ret 0x7420
0x000000000004ab62 : ret 0x7450
0x00000000000b131c : ret 0x748d
0x000000000009903f : ret 0x74e9
0x0000000000037b2c : ret 0x7501
0x000000000008f8dc : ret 0x7502
0x0000000000081d49 : ret 0x7504
0x000000000008f8e6 : ret 0x7508
0x000000000014943b : ret 0x7510
0x0000000000081d44 : ret 0x7518
0x0000000000149448 : ret 0x7520
0x00000000000c3c99 : ret 0x7540
0x00000000000c1345 : ret 0x7580
0x000000000002d613 : ret 0x75df
0x00000000001473a2 : ret 0x7677
0x00000000000adc0d : ret 0x76c
0x0000000000024a6a : ret 0x77
0x0000000000022fd8 : ret 0x774
0x00000000000424aa : ret 0x777
0x00000000000da7c3 : ret 0x77e8
0x00000000000fc1b1 : ret 0x77e9
0x000000000001fddb : ret 0x7800
0x0000000000002eec : ret 0x793b
0x00000000000b89a9 : ret 0x7974
0x00000000000cde65 : ret 0x7a80
0x00000000000fdd7b : ret 0x7a8d
0x00000000000238da : ret 0x7b8
0x0000000000032b65 : ret 0x7c7
0x00000000000df5a1 : ret 0x7c77
0x00000000000d995d : ret 0x7de9
0x00000000000814d2 : ret 0x7e20
0x00000000000dd69f : ret 0x7e73
0x00000000000a81aa : ret 0x7e74
0x000000000007ca3c : ret 0x7f10
0x0000000000052a94 : ret 0x7f3c
0x0000000000029db4 : ret 0x80
0x000000000007dc19 : ret 0x8000
0x00000000000321ac : ret 0x8001
0x00000000000aad52 : ret 0x8010
0x000000000004ccae : ret 0x8040
0x00000000000e15e2 : ret 0x8041
0x0000000000094add : ret 0x8072
0x000000000004446f : ret 0x8080
0x00000000000732fa : ret 0x80a
0x00000000000038b0 : ret 0x80fc
0x00000000000c832f : ret 0x813b
0x000000000010b6e1 : ret 0x8141
0x000000000003fd66 : ret 0x8148
0x0000000000032e6f : ret 0x8166
0x0000000000061b49 : ret 0x81e8
0x0000000000074143 : ret 0x820f
0x000000000006e4b1 : ret 0x82eb
0x000000000002697e : ret 0x8301
0x0000000000102f91 : ret 0x8303
0x000000000005ec66 : ret 0x8304
0x00000000000575aa : ret 0x8308
0x0000000000055103 : ret 0x830f
0x0000000000040d7f : ret 0x8341
0x000000000003610d : ret 0x8348
0x0000000000038ca4 : ret 0x8349
0x0000000000067523 : ret 0x8389
0x0000000000055cbb : ret 0x8401
0x000000000002000f : ret 0x840f
0x00000000000dda1e : ret 0x8440
0x0000000000098fa6 : ret 0x8444
0x000000000004e045 : ret 0x8504
0x0000000000038ade : ret 0x8508
0x00000000000215dc : ret 0x850f
0x000000000003f881 : ret 0x8539
0x0000000000037c39 : ret 0x8545
0x00000000000200c6 : ret 0x8548
0x000000000002aca5 : ret 0x854d
0x00000000000d1ddb : ret 0x8589
0x000000000004b8e4 : ret 0x858b
0x0000000000048184 : ret 0x85c7
0x000000000002a751 : ret 0x860f
0x0000000000025f1a : ret 0x870f
0x0000000000159dde : ret 0x871e
0x0000000000038c97 : ret 0x875
0x00000000000815e5 : ret 0x876
0x00000000000e84b3 : ret 0x87e8
0x000000000007c03a : ret 0x8801
0x000000000008e022 : ret 0x8802
0x000000000005081e : ret 0x880f
0x00000000000025b0 : ret 0x88ad
0x000000000002dba7 : ret 0x88e9
0x000000000002448a : ret 0x8901
0x00000000000559db : ret 0x8908
0x00000000000ea4f5 : ret 0x8940
0x00000000000449a7 : ret 0x8941
0x000000000006e37c : ret 0x8944
0x000000000008a3a2 : ret 0x8945
0x00000000000305cf : ret 0x8948
0x00000000000211b8 : ret 0x8949
0x00000000000290a8 : ret 0x894c
0x0000000000022a3f : ret 0x894d
0x0000000000042d6b : ret 0x894e
0x0000000000036e60 : ret 0x8966
0x000000000008114a : ret 0x8a04
0x0000000000002553 : ret 0x8a4c
0x00000000000fe3d9 : ret 0x8aeb
0x00000000000650b3 : ret 0x8b04
0x000000000002c02e : ret 0x8b05
0x00000000000c60c8 : ret 0x8b10
0x000000000015c60e : ret 0x8b36
0x000000000002af12 : ret 0x8b41
0x000000000001fe09 : ret 0x8b48
0x000000000006bde6 : ret 0x8b49
0x0000000000042cee : ret 0x8b4a
0x000000000002e350 : ret 0x8b4c
0x00000000000cf493 : ret 0x8b4d
0x00000000000665e8 : ret 0x8b64
0x000000000009c2fc : ret 0x8b8
0x00000000000baf29 : ret 0x8ba
0x00000000000acc7b : ret 0x8c0f
0x00000000000037b6 : ret 0x8cba
0x0000000000055095 : ret 0x8d01
0x00000000000641a7 : ret 0x8d04
0x00000000000d3500 : ret 0x8d08
0x000000000004b617 : ret 0x8d0f
0x00000000000a7d62 : ret 0x8d41
0x0000000000020678 : ret 0x8d48
0x0000000000024465 : ret 0x8d49
0x0000000000042298 : ret 0x8d4a
0x0000000000042135 : ret 0x8d4c
0x0000000000091932 : ret 0x8d4d
0x00000000000774bc : ret 0x8d4e
0x000000000002f474 : ret 0x8d8b
0x00000000000275a1 : ret 0x8e0f
0x000000000004bf51 : ret 0x8ee9
0x00000000000d5927 : ret 0x8f0f
0x00000000000692a8 : ret 0x8feb
0x0000000000176b48 : ret 0x900e
0x00000000000f8045 : ret 0x901
0x000000000002befd : ret 0x90c3
0x0000000000119725 : ret 0x90f3
0x000000000006f8cc : ret 0x91eb
0x00000000000576da : ret 0x936
0x00000000000cfef4 : ret 0x93b
0x000000000007afd8 : ret 0x93be
0x00000000001042f2 : ret 0x93c
0x000000000003cc58 : ret 0x93e9
0x000000000005bd3e : ret 0x940f
0x00000000000390d8 : ret 0x941
0x0000000000080138 : ret 0x94c
0x000000000004791e : ret 0x9522
0x00000000000f3319 : ret 0x952b
0x000000000002eac8 : ret 0x953d
0x000000000015b433 : ret 0x9576
0x0000000000069439 : ret 0x95eb
0x00000000000dbf6f : ret 0x970f
0x00000000000e06a3 : ret 0x97e8
0x00000000000cc99e : ret 0x9848
0x000000000007c4a5 : ret 0x9874
0x000000000006d3b4 : ret 0x98eb
0x000000000003cec8 : ret 0x9a74
0x000000000004b630 : ret 0x9ae8
0x0000000000117777 : ret 0x9ae9
0x00000000000cdfc2 : ret 0x9af
0x00000000000b3ef1 : ret 0x9ce9
0x0000000000094ac0 : ret 0x9d72
0x000000000009cbf8 : ret 0x9e74
0x000000000006b848 : ret 0x9e9
0x000000000003efd1 : ret 0x9f74
0x00000000000cca22 : ret 0x9fe9
0x0000000000154080 : ret 0xa
0x0000000000183422 : ret 0xa01
0x0000000000089a3a : ret 0xa0e9
0x00000000000e8199 : ret 0xa1e8
0x0000000000037f78 : ret 0xa274
0x0000000000058867 : ret 0xa2eb
0x000000000015b123 : ret 0xa514
0x00000000001080f8 : ret 0xa578
0x000000000003a480 : ret 0xa5e9
0x000000000005e28b : ret 0xa6e9
0x00000000000bebee : ret 0xa73
0x000000000010725f : ret 0xa74
0x00000000000de793 : ret 0xa7e8
0x00000000000098f0 : ret 0xa83
0x00000000000f16df : ret 0xabe8
0x00000000000d1a15 : ret 0xabe9
0x000000000015b5a7 : ret 0xac65
0x000000000015bf64 : ret 0xacfc
0x00000000000a6b72 : ret 0xade9
0x000000000006acd0 : ret 0xae8
0x00000000000ca5cd : ret 0xaeb
0x000000000009902a : ret 0xaf0f
0x000000000007a321 : ret 0xafe9
0x000000000004cfb3 : ret 0xb
0x000000000009b7ea : ret 0xb0
0x00000000000fd2d6 : ret 0xb4e8
0x00000000000eed68 : ret 0xb575
0x0000000000037cd0 : ret 0xb5e9
0x000000000002d661 : ret 0xb60f
0x000000000010b94f : ret 0xb70f
0x00000000000bce33 : ret 0xb73
0x0000000000104d08 : ret 0xb74
0x000000000006f4dc : ret 0xb76
0x00000000000ae01e : ret 0xb77d
0x0000000000038923 : ret 0xb7e
0x000000000005bb23 : ret 0xb7e8
0x0000000000032963 : ret 0xb8
0x0000000000032591 : ret 0xb848
0x000000000002ace5 : ret 0xb87f
0x00000000000c661c : ret 0xb880
0x000000000005984a : ret 0xb908
0x000000000015b46e : ret 0xb9b9
0x0000000000003189 : ret 0xba88
0x00000000000b4883 : ret 0xbb
0x000000000006a0fd : ret 0xbb7e
0x000000000004a6b9 : ret 0xbbe9
0x00000000000425d2 : ret 0xbc41
0x00000000000dd05a : ret 0xbceb
0x0000000000002480 : ret 0xbd07
0x00000000001065cf : ret 0xbd74
0x00000000000449e3 : ret 0xbd89
0x00000000000599d2 : ret 0xbe08
0x000000000015b1c4 : ret 0xbe57
0x00000000000a8bf6 : ret 0xbeb
0x000000000005a581 : ret 0xbf08
0x0000000000010308 : ret 0xc
0x000000000007dad9 : ret 0xc000
0x000000000003c9da : ret 0xc002
0x0000000000064552 : ret 0xc031
0x000000000010812a : ret 0xc069
0x000000000008227a : ret 0xc083
0x00000000000e250c : ret 0xc084
0x0000000000039826 : ret 0xc085
0x0000000000174076 : ret 0xc0a
0x00000000000c342c : ret 0xc141
0x00000000000327f7 : ret 0xc148
0x0000000000024470 : ret 0xc149
0x00000000000c0d9c : ret 0xc173
0x000000000003367d : ret 0xc189
0x00000000000df279 : ret 0xc1e8
0x00000000000414c2 : ret 0xc221
0x00000000000366a4 : ret 0xc229
0x0000000000036840 : ret 0xc269
0x00000000000af6d5 : ret 0xc26b
0x0000000000073f13 : ret 0xc275
0x000000000004cdc7 : ret 0xc283
0x0000000000148384 : ret 0xc2b2
0x00000000000fc180 : ret 0xc2e9
0x00000000000361e8 : ret 0xc35b
0x0000000000081bee : ret 0xc3f3
0x00000000000dcb10 : ret 0xc3f6
0x0000000000159062 : ret 0xc4c3
0x000000000015ad78 : ret 0xc4ff
0x00000000000cbd10 : ret 0xc579
0x0000000000126898 : ret 0xc580
0x000000000004c604 : ret 0xc589
0x00000000000c7fd5 : ret 0xc5e8
0x00000000000e1835 : ret 0xc6
0x00000000000ee68a : ret 0xc641
0x00000000000c773b : ret 0xc683
0x000000000004f4a3 : ret 0xc689
0x00000000000350d4 : ret 0xc6e8
0x00000000000c15f1 : ret 0xc701
0x000000000010b626 : ret 0xc707
0x00000000000dca9a : ret 0xc72
0x000000000010226b : ret 0xc741
0x0000000000034877 : ret 0xc748
0x000000000003e23e : ret 0xc749
0x00000000000995a1 : ret 0xc75
0x000000000006f16c : ret 0xc76
0x0000000000100c99 : ret 0xc789
0x00000000000dad73 : ret 0xc7e8
0x000000000008ab35 : ret 0xc829
0x00000000001014df : ret 0xc8e9
0x00000000000cf7ad : ret 0xc931
0x00000000000a137a : ret 0xc94
0x000000000007c516 : ret 0xc9ff
0x000000000012331f : ret 0xca39
0x00000000000d19df : ret 0xca83
0x000000000007ac01 : ret 0xcb8
0x000000000009ed5a : ret 0xcba
0x000000000015a80a : ret 0xcca7
0x000000000009bd32 : ret 0xcce
0x00000000000d8bee : ret 0xcce8
0x000000000015c8ed : ret 0xcd11
0x0000000000094a90 : ret 0xcd72
0x00000000000e3c2c : ret 0xcdbb
0x0000000000055ce5 : ret 0xce73
0x000000000002ff77 : ret 0xce80
0x00000000000ee86c : ret 0xcee8
0x00000000000c005e : ret 0xcf75
0x0000000000154480 : ret 0xd
0x00000000000bd30b : ret 0xd008
0x00000000000caa20 : ret 0xd009
0x00000000000a817b : ret 0xd021
0x00000000000b87c2 : ret 0xd029
0x000000000012670c : ret 0xd073
0x0000000000040d94 : ret 0xd084
0x00000000000308ee : ret 0xd089
0x00000000000eefd4 : ret 0xd0f7
0x00000000000d43d1 : ret 0xd101
0x0000000000056b34 : ret 0xd129
0x00000000000a8137 : ret 0xd138
0x00000000000c3433 : ret 0xd141
0x000000000010bb76 : ret 0xd148
0x00000000000ce9f9 : ret 0xd1e8
0x0000000000031c35 : ret 0xd231
0x000000000002076d : ret 0xd284
0x000000000008d460 : ret 0xd308
0x000000000005638c : ret 0xd329
0x00000000000a8341 : ret 0xd338
0x0000000000037bee : ret 0xd348
0x00000000000cb115 : ret 0xd473
0x0000000000033f92 : ret 0xd521
0x000000000000089a : ret 0xd5a4
0x0000000000058c4d : ret 0xd629
0x00000000000c056a : ret 0xd639
0x00000000000a6a22 : ret 0xd721
0x000000000010ff09 : ret 0xd739
0x00000000000e61d6 : ret 0xd74
0x00000000000da763 : ret 0xd7e8
0x00000000000ae6dc : ret 0xd801
0x000000000009902f : ret 0xd889
0x000000000015c385 : ret 0xd8f
0x00000000000e5dba : ret 0xd9
0x000000000002040f : ret 0xd975
0x000000000008b0a7 : ret 0xd9e
0x00000000000c4f0d : ret 0xd9eb
0x00000000000f40b3 : ret 0xda75
0x0000000000032c91 : ret 0xdaf7
0x00000000000d58b2 : ret 0xdb31
0x0000000000024bab : ret 0xdb85
0x00000000000a7531 : ret 0xdc00
0x0000000000100b19 : ret 0xdc7f
0x000000000015c466 : ret 0xdcd9
0x000000000015b3e2 : ret 0xde5d
0x000000000006bf25 : ret 0xde74
0x0000000000114777 : ret 0xde77
0x000000000003fd3d : ret 0xde8
0x000000000015a171 : ret 0xde9e
0x0000000000109eec : ret 0xdee8
0x00000000000a828a : ret 0xdf89
0x000000000000abc9 : ret 0xe
0x000000000007d999 : ret 0xe000
0x00000000001739cd : ret 0xe01
0x00000000001493f9 : ret 0xe074
0x0000000000101c26 : ret 0xe075
0x0000000000102ae6 : ret 0xe083
0x0000000000180f61 : ret 0xe0a
0x0000000000109fea : ret 0xe0ff
0x00000000000275aa : ret 0xe183
0x00000000000d9059 : ret 0xe1e8
0x00000000000ef2c4 : ret 0xe1ff
0x0000000000020528 : ret 0xe281
0x00000000000266c3 : ret 0xe283
0x0000000000020dd9 : ret 0xe2ff
0x00000000000f833a : ret 0xe5
0x0000000000089220 : ret 0xe575
0x000000000004ce2d : ret 0xe583
0x0000000000049cf0 : ret 0xe680
0x000000000008dae4 : ret 0xe6e8
0x000000000015c586 : ret 0xe71f
0x00000000000c6896 : ret 0xe775
0x00000000000bde60 : ret 0xe777
0x0000000000067392 : ret 0xe8
0x0000000000030845 : ret 0xe801
0x00000000000c6d1a : ret 0xe875
0x000000000004b4a5 : ret 0xe87f
0x000000000009b8d2 : ret 0xe883
0x0000000000077d22 : ret 0xe889
0x00000000000b86af : ret 0xe8b8
0x00000000000203c7 : ret 0xe8c1
0x00000000000cffb0 : ret 0xe8e9
0x0000000000038513 : ret 0xe901
0x000000000002db8a : ret 0xe902
0x00000000000a7a91 : ret 0xe907
0x000000000007c5a6 : ret 0xe908
0x000000000011f956 : ret 0xe910
0x0000000000044f79 : ret 0xe920
0x000000000009e0f6 : ret 0xe929
0x000000000015a8e7 : ret 0xe970
0x0000000000037ebc : ret 0xe974
0x00000000000c4669 : ret 0xe975
0x000000000004e909 : ret 0xea29
0x00000000000400b3 : ret 0xea75
0x00000000000991da : ret 0xea81
0x00000000000449d3 : ret 0xeac0
0x00000000000c04c4 : ret 0xeac1
0x0000000000026176 : ret 0xead3
0x00000000000a625d : ret 0xeb01
0x00000000000c501a : ret 0xeb04
0x000000000011d996 : ret 0xeb10
0x00000000000ede4a : ret 0xeb73
0x000000000008cd41 : ret 0xeb77
0x000000000015d098 : ret 0xec2
0x00000000000a5d5b : ret 0xec77
0x00000000000c5209 : ret 0xec7f
0x0000000000023858 : ret 0xed19
0x0000000000027128 : ret 0xed85
0x0000000000063402 : ret 0xede9
0x00000000000229bf : ret 0xee75
0x00000000000e8b66 : ret 0xee9
0x0000000000058ac0 : ret 0xeeb
0x0000000000109edc : ret 0xeee8
0x000000000015cd3a : ret 0xef32
0x0000000000042bee : ret 0xef75
0x000000000008b8ed : ret 0xef77
0x00000000000bd9aa : ret 0xef7c
0x000000000004cd09 : ret 0xf
0x000000000007d859 : ret 0xf000
0x0000000000031391 : ret 0xf001
0x000000000002510f : ret 0xf01
0x0000000000081d55 : ret 0xf02
0x0000000000064673 : ret 0xf039
0x0000000000065135 : ret 0xf04
0x000000000003bf45 : ret 0xf075
0x000000000008e003 : ret 0xf077
0x000000000001fe44 : ret 0xf08
0x00000000000ab6be : ret 0xf089
0x0000000000076200 : ret 0xf0f
0x00000000000514cc : ret 0xf10
0x00000000000a5eac : ret 0xf175
0x000000000008d86c : ret 0xf188
0x0000000000020271 : ret 0xf189
0x0000000000105fba : ret 0xf198
0x000000000002e3d9 : ret 0xf1e8
0x000000000006702c : ret 0xf20
0x000000000007df49 : ret 0xf201
0x0000000000101600 : ret 0xf221
0x00000000000f599a : ret 0xf2af
0x00000000001075a2 : ret 0xf375
0x000000000011017a : ret 0xf3ea
0x000000000004fa04 : ret 0xf40
0x0000000000038eb8 : ret 0xf41
0x000000000006f097 : ret 0xf44
0x0000000000103044 : ret 0xf45
0x00000000000386a1 : ret 0xf48
0x0000000000024461 : ret 0xf4c
0x000000000015f9b4 : ret 0xf4c5
0x000000000015fdcc : ret 0xf4f5
0x00000000000c4af6 : ret 0xf53
0x000000000016046c : ret 0xf58d
0x00000000000c418a : ret 0xf5b6
0x00000000000ce66a : ret 0xf5db
0x00000000000633fa : ret 0xf5e9
0x00000000000acf3d : ret 0xf601
0x00000000000b3a0f : ret 0xf631
0x00000000000e300a : ret 0xf638
0x000000000004e6cc : ret 0xf641
0x00000000000bb50a : ret 0xf642
0x000000000003289b : ret 0xf66
0x00000000000fbeca : ret 0xf678
0x00000000000b7a0a : ret 0xf67d
0x00000000000e1ec9 : ret 0xf683
0x0000000000025ecf : ret 0xf685
0x00000000000cf9ff : ret 0xf74
0x00000000000415c5 : ret 0xf741
0x000000000008213c : ret 0xf748
0x0000000000042494 : ret 0xf749
0x00000000000eef62 : ret 0xf789
0x00000000000f2ab8 : ret 0xf7e
0x00000000000da543 : ret 0xf7e8
0x00000000001267be : ret 0xf80
0x000000000002567c : ret 0xf800
0x000000000015a050 : ret 0xf869
0x00000000000e1ef2 : ret 0xf88
0x000000000009d334 : ret 0xf883
0x00000000000b128c : ret 0xf889
0x0000000000104d00 : ret 0xf980
0x0000000000054f0a : ret 0xf983
0x000000000011b5aa : ret 0xf9bb
0x00000000000eb63a : ret 0xf9d5
0x00000000000cd415 : ret 0xfa09
0x00000000000af037 : ret 0xfa29
0x000000000007c2c2 : ret 0xfa35
0x00000000000a0905 : ret 0xfa81
0x0000000000028939 : ret 0xfa83
0x0000000000030902 : ret 0xfac1
0x00000000000c052c : ret 0xfad1
0x00000000000e6c6a : ret 0xfb01
0x00000000000ffada : ret 0xfb73
0x00000000000ca9ae : ret 0xfb83
0x0000000000074255 : ret 0xfbff
0x000000000007d5d9 : ret 0xfc00
0x000000000003a212 : ret 0xfc02
0x00000000000e2961 : ret 0xfc07
0x000000000007df69 : ret 0xfc3
0x000000000016c6a0 : ret 0xfc6f
0x000000000016c698 : ret 0xfc70
0x000000000016c490 : ret 0xfc7b
0x000000000016cb68 : ret 0xfc9c
0x000000000016c97c : ret 0xfca3
0x000000000016ce74 : ret 0xfcca
0x00000000000ba20a : ret 0xfccc
0x0000000000098f08 : ret 0xfd83
0x00000000000bfe0a : ret 0xfdb9
0x000000000002d5e5 : ret 0xfdf
0x000000000007d499 : ret 0xfe00
0x0000000000098f29 : ret 0xfe83
0x00000000000357ba : ret 0xfea0
0x00000000001266de : ret 0xfec5
0x0000000000031cc2 : ret 0xfedb
0x0000000000074245 : ret 0xfeff
0x000000000007d359 : ret 0xff00
0x000000000001fde1 : ret 0xff04
0x000000000003ef0f : ret 0xff2
0x0000000000039c6a : ret 0xff25
0x0000000000039b6a : ret 0xff26
0x000000000008dcca : ret 0xff3
0x000000000007be15 : ret 0xff31
0x000000000008cf0d : ret 0xff41
0x000000000007c454 : ret 0xff48
0x000000000007d219 : ret 0xff80
0x0000000000103e10 : ret 0xff81
0x0000000000037a72 : ret 0xff82
0x0000000000054f2a : ret 0xff83
0x000000000005affa : ret 0xff9d
0x00000000000f95fa : ret 0xffa7
0x000000000006094a : ret 0xffb6
0x000000000001f94b : ret 0xffb8
0x000000000003c909 : ret 0xffbf
0x000000000007d0d9 : ret 0xffc0
0x00000000000f167a : ret 0xffd3
0x000000000005f7b3 : ret 0xffde
0x0000000000077761 : ret 0xffdf
0x000000000007cf99 : ret 0xffe0
0x000000000010cd7a : ret 0xffe9
0x00000000000d3977 : ret 0xffeb
0x00000000001773f9 : ret 0xffec
0x000000000009df5a : ret 0xffed
0x0000000000051607 : ret 0xffee
0x000000000003708b : ret 0xffef
0x000000000003bc85 : ret 0xfff0
0x000000000016f059 : ret 0xfff1
0x000000000004c134 : ret 0xfff2
0x000000000003e077 : ret 0xfff3
0x000000000015f9c5 : ret 0xfff4
0x00000000000c35a8 : ret 0xfff5
0x00000000000bff63 : ret 0xfff6
0x00000000000a6474 : ret 0xfff7
0x00000000000483d6 : ret 0xfff8
0x000000000005704d : ret 0xfff9
0x00000000000735ef : ret 0xfffa
0x00000000000b73f0 : ret 0xfffb
0x000000000002f3f8 : ret 0xfffc
0x000000000016bcf1 : ret 0xfffd
0x0000000000026758 : ret 0xfffe
0x000000000002bef5 : ret 0xffff
0x000000000001f6a4 : ret 1
0x0000000000004a61 : ret 2
0x00000000000011c8 : ret 3
0x0000000000008169 : ret 4
0x0000000000001570 : ret 5
0x000000000006ea51 : ret 6
0x000000000000e271 : ret 7
0x0000000000001a8c : ret 8
0x0000000000149eaa : ret 9
0x000000000008567f : retf 0x850f ; call qword ptr [rsi]
0x0000000000160f11 : retf 0xfff6 ; or dl, 0xf6 ; jmp qword ptr [rdx]
0x000000000016cdb5 : retf 0xfffc ; or dl, 0xfc ; call qword ptr [rax]
0x000000000016cfb1 : retf ; cld ; call qword ptr [rax + 0x20fffcca]
0x000000000016cdf1 : retf ; cld ; call rsi
0x000000000016cded : retf ; cld ; inc dword ptr [rsi - 0x35] ; cld ; call rsi
0x0000000000174d81 : retf ; jmp 0x174d85
0x0000000000098855 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000009931e : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000e234c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000008d2ac : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000008d70d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009b38d : rol bl, 0x90 ; mov eax, 1 ; ret
0x000000000009c0bb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001844a0 : rol bl, 1 ; hlt ; jmp qword ptr [rcx]
0x000000000006a80c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008173d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000361b7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000ef009 : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000008dca2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000007e572 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000001390 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000157f20 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000006a121 : rol byte ptr [rax + rcx*2], 0x39 ; ret 0xf075
0x0000000000023be0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000102439 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x000000000016c3a4 : rol byte ptr [rax - 0x7faf0004], 0xfc ; jmp rax
0x000000000009af5d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000011adb9 : rol byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000000000d8bd6 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009e11c : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000001472ad : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017ec5d : rol byte ptr [rax], 0 ; push rax ; iretd ; sti ; call qword ptr [rax]
0x00000000000a8688 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000063b0f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000e5887 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b3130 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003346c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000008037b : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x0000000000088d82 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000fc127 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x00000000000fc30d : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x00000000000f8335 : rol byte ptr [rbp - 0x77], cl ; call 0xf5462a
0x00000000000d318f : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8341
0x00000000000d3213 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x00000000000421db : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000003fb4a : rol byte ptr [rbx - 0x2b8adb07], 1 ; ret
0x00000000000e5e83 : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000c4a87 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000ea79c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000006a978 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002c521 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000261ed : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x00000000000255d0 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x5f5e
0x000000000009a5d2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000010101e : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001002a2 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x0000000000109e31 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000991d1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000000fc129 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0x00000000000fc30f : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x0000000000089943 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000008d1a2 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000008d25b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x000000000002861b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000009a68e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0x9a660 ; ret
0x000000000003fc2f : rol byte ptr [rcx + rcx*4 - 0x10], 0xf ; ret
0x0000000000102122 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000e4aca : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000038e73 : rol byte ptr [rcx - 0x7d], cl ; clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000007df42 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x000000000009a5b2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce359 : rol byte ptr [rcx], 0x39 ; ret
0x00000000000c6d17 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000041e8a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x41e89 ; xor eax, eax ; ret
0x0000000000041f6a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x41f69 ; xor eax, eax ; ret
0x00000000000a8bf2 : rol byte ptr [rcx], 0x4c ; mov edx, eax ; jmp 0xa8c08
0x0000000000098fdb : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x00000000000e9d5a : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000c69e7 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000002991a : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000e9d70 : rol byte ptr [rcx], 0x89 ; add al, bl ; nop dword ptr [rax] ; ret
0x0000000000067027 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00000000000400a2 : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000e3fd7 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x000000000009903b : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x0000000000099026 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000c0426 : rol byte ptr [rcx], 0xf6 ; or esi, r10d ; jne 0xc0439 ; ret
0x00000000001710ad : rol byte ptr [rcx], 1 ; add byte ptr [rdi], bh ; clc ; jmp rsp
0x000000000012670e : rol byte ptr [rcx], 1 ; ret 0x148
0x00000000001739ca : rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000000d9f1c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000eab6d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c4662 : rol byte ptr [rdi - 0x75], 4 ; test byte ptr [rbp + 0x39], al ; ret 0xe975
0x000000000009a612 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000009a5c2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000215a6 : rol byte ptr [rdx], 0x50 ; call rbx
0x00000000000e7805 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000b8147 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000000aaeef : rol byte ptr [rip + 0x16e], 1 ; ret
0x00000000000eaa3d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x000000000016baf8 : rol byte ptr [rsi - 5], 1 ; push qword ptr [rax + 0x48] ; sti ; call qword ptr [rax]
0x000000000009a602 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000007642b : rol byte ptr [rsi], 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000c52a1 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000159060 : rol cl, 0xc2 ; ret
0x00000000000ab6b6 : rol cl, cl ; clc ; add eax, 0x2907f9c1 ; ret 0xf089
0x00000000000fbaa7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000009a55c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000eefe1 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000016e3a5 : rol dword ptr [rax], 0 ; cmp al, 0xc0 ; out dx, eax ; call rsp
0x000000000017ed35 : rol dword ptr [rax], 0 ; or byte ptr [rcx - 0xf], bl ; call rsp
0x00000000000641d8 : rol dword ptr [rax], 1 ; ret
0x000000000008d707 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000004cd02 : rol dword ptr [rbx + 0xf65823c], -0x71 ; ret 0xf
0x000000000001f99e : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000000b1407 : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x00000000000c266b : rol dword ptr [rcx - 9], cl ; ror byte ptr [rcx - 0x76bb69f4], 1 ; ret 0xeac1
0x00000000001710dd : rol dword ptr [rcx], 1 ; add byte ptr [rax + rbp*2 - 8], bl ; call rsp
0x00000000000964a9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000033ca5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007dfa9 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004446a : rol ecx, 1 ; jmp 0xffffffff80c73b86
0x0000000000049aa2 : rol ecx, 1 ; jmp 0xffffffff80c791be
0x00000000001121b8 : rol ecx, 1 ; jmp 0xffffffff80d418d4
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000007dfa8 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000033ca4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000f7d92 : ror ax, 8 ; ret
0x0000000000081be7 : ror byte ptr [r10], cl ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000033b44 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000033ca6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000815b2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x815f9 ; add rax, rdi ; ret
0x000000000007e427 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000008f8ce : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000006bd3a : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000010ab0e : ror byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x000000000011557d : ror byte ptr [rax + 0x39], 0xca ; je 0x115597 ; ret
0x00000000000dfcaf : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xdfce7 ; ret
0x00000000000f37b8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000d9f1e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000d9ee6 : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x6c] ; pop rbx ; pop rbp ; ret
0x00000000000da1ad : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x00000000000430c3 : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x0000000000042bbb : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000009d72f : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000f36d8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000040ee5 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000a8480 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000f46e2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000105edc : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000089c97 : ror byte ptr [rax + 0xf], 1 ; ret
0x000000000002b251 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00000000000b6a76 : ror byte ptr [rax + 0xf], 1 ; ret 0x394c
0x00000000000b6aab : ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000b56a5 : ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000ec902 : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000002b242 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000ec701 : ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x000000000008d853 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x0000000000088c5c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000007ffc9 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000006e379 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000a55f2 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000003cec5 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x000000000009cbf5 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000037f75 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x0000000000037eb9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000007e424 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000154328 : ror byte ptr [rax + rax], 0 ; ret
0x0000000000081735 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000098e8c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30e1be8
0x000000000002bef2 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000a2eff : ror byte ptr [rax - 0x39], 4 ; ret 0
0x00000000000e9ab6 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000000a7a38 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000e0d60 : ror byte ptr [rax - 0x73], 0x15 ; ret
0x000000000011aa5b : ror byte ptr [rax - 0x73], 0x3d ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 4
0x000000000011aa37 : ror byte ptr [rax - 0x73], 0x3d ; lodsd eax, dword ptr [rsi] ; ret 4
0x00000000000b8ad8 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000081572 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000815a2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000008d742 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x0000000000081592 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000000ea4f1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000b13e4 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000000000c3c11 : ror byte ptr [rax - 0x75], 4 ; ret
0x00000000000728ba : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000001016c5 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000008d389 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000010a419 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x10a3bb ; xor eax, eax ; pop rbx ; ret
0x0000000000089c94 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x000000000010e668 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000000f45d2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x0000000000114769 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x000000000007b26a : ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000036e5d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000070875 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000aa9f5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000004b62d : ror byte ptr [rax - 0x77], 1 ; ret 0x9ae8
0x000000000010ab11 : ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x0000000000020525 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000007a862 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000010dc99 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000000b56c9 : ror byte ptr [rax - 0x77], cl ; ret
0x00000000000e435b : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x000000000006ebc2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x0000000000087f11 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000368ac : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000111d92 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000dbda0 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000011ab29 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x0000000000035c1d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003f574 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000004110a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000115a9a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001007d6 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d7a2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008d782 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008d762 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000da34e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000774b5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc290bcd4
0x00000000000ae455 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000048ce3 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000000e0995 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000006d74a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000ae3d8 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf976 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000094ab6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000aa656 : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000002510c : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000006f96a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009deab : ror byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000006f9ad : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f64ba : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x000000000009e3e2 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000080324 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000009b697 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x000000000010b82d : ror byte ptr [rbp - 0x77], 1 ; ret 0x334c
0x000000000010ba35 : ror byte ptr [rbp - 0x77], 1 ; ret 0x334d
0x00000000000d58b6 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x00000000000da20f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x0000000000023c8f : ror byte ptr [rcx + 0x39], cl ; ret
0x000000000009f764 : ror byte ptr [rcx + 0xf102444], 0x84 ; ret 0x1c
0x00000000000a7dd1 : ror byte ptr [rcx + rax - 0x40], 1 ; ret
0x0000000000032d14 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000087996 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000010bb9f : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x000000000003300e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x000000000010170e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000c266e : ror byte ptr [rcx - 0x76bb69f4], 1 ; ret 0xeac1
0x0000000000098e84 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x00000000000879d8 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x000000000009469f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000056383 : ror byte ptr [rcx - 0x7d], cl ; mov dword ptr [rcx], 0x9f0fdb85 ; ret 0xd329
0x000000000009af60 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000a7690 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000e795c : ror byte ptr [rcx], 0xf8 ; ret
0x0000000000081f79 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000016c254 : ror byte ptr [rdi - 4], 1 ; call rax
0x00000000000e63a0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000000e3b15 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000d0a00 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000361e5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x00000000001181f8 : ror byte ptr [rdi], 0x82 ; ret
0x00000000000413df : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000cd8ec : ror byte ptr [rdi], 0x84 ; cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x11e9
0x000000000006cf0c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a1d7d : ror byte ptr [rdi], 0x84 ; or qword ptr [r8], r8 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000119465 : ror byte ptr [rdi], 0x84 ; push rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000008b72b : ror byte ptr [rdi], 0x84 ; ret
0x0000000000118758 : ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000055da5 : ror byte ptr [rdi], 0x84 ; ret 0x3c
0x00000000000f1f0a : ror byte ptr [rdi], 0x84 ; ret 0xfffb
0x000000000006db5c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013e2ea : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000008d6cc : ror byte ptr [rdi], 0x85 ; jge 0x8d6da ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000093301 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000005e549 : ror byte ptr [rdi], 0x85 ; ret
0x000000000009dcf2 : ror byte ptr [rdi], 0x85 ; ret 0x10
0x000000000008fc47 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000f822e : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000079b7c : ror byte ptr [rdi], 0x88 ; ret
0x0000000000100870 : ror byte ptr [rdi], 0x88 ; ret 0
0x00000000000dbb47 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000000000b87bf : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000007b42d : ror byte ptr [rdi], 0x94 ; ret
0x00000000000d1065 : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x0000000000111b77 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000052a91 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000020675 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00000000000adc6b : ror byte ptr [rdi], 0x94 ; ret 0x8d4c
0x00000000000a833e : ror byte ptr [rdi], 0x94 ; ret 0xd338
0x000000000006807a : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000a8287 : ror byte ptr [rdi], 0x94 ; ret 0xdf89
0x00000000000d59c8 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000ca8d5 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x00000000000a6b6f : ror byte ptr [rdi], 0x95 ; ret 0xade9
0x00000000000a6a1f : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x0000000000065a62 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000009b8cf : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000009bbbc : ror byte ptr [rdi], 0x95 ; ret 0xf983
0x00000000000ca9ab : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x000000000006b03c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00000000000b8ad5 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000011ab26 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x00000000000d09fd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006382b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x000000000009a7bc : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000dbf8a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000031a3e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x31a28 ; ret
0x00000000000c1e8a : ror byte ptr [rdi], 1 ; ret 0xf039
0x000000000005daa9 : ror byte ptr [rdi], 1 ; xchg dword ptr [rax], esp ; sub byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000008993d : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000025674 : ror byte ptr [rdi], cl ; mov byte ptr [rbp - 0x9000000], dl ; ret 0xf800
0x000000000008d7ed : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000006ccdc : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00000000000e24fa : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8440
0x000000000008ac80 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000a8134 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x000000000016c16c : ror byte ptr [rdx], 1 ; cld ; jmp qword ptr [rax]
0x0000000000081be8 : ror byte ptr [rdx], cl ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000179ab0 : ror byte ptr [rsi], 0xef ; call rsi
0x000000000016c178 : ror byte ptr [rsi], 0xfc ; call qword ptr [rax]
0x000000000006ba53 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000000ae49c : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000b82d1 : ror dword ptr [rax + 0x63], cl ; ret
0x0000000000123275 : ror dword ptr [rax + 1], -8 ; ret
0x0000000000123139 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000012338e : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x00000000000c60c2 : ror dword ptr [rax + 3], 1 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x00000000000ea34c : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000008a7fd : ror dword ptr [rax - 0x3f], -0x1a ; or byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x000000000008d375 : ror dword ptr [rax - 0x77], 0xa ; ret
0x00000000000e61fd : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000898f9 : ror dword ptr [rax - 0x77], 1 ; ret 0x1ee8
0x000000000011c031 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000126762 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000c0000 : ror dword ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, rbx ; call r12
0x0000000000069cad : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x69ca7 ; ret
0x000000000007207d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x72077 ; ret
0x0000000000042be7 : ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x0000000000035d08 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000306c2 : ror dword ptr [rax - 0x7d], cl ; ret
0x0000000000044ea2 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000009da55 : ror dword ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000000acf3a : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000a611b : ror dword ptr [rbp - 0x77], 1 ; ret 0x6348
0x000000000002463f : ror dword ptr [rcx + 0x39], 1 ; ret
0x000000000002aca2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000000874f5 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000000440d0 : ror dword ptr [rcx + rcx*4 - 0x38], 1 ; add rsp, 0x28 ; ret
0x0000000000042a5b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8348
0x00000000001493f7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008d665 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000cca1f : ror dword ptr [rdi], -0x6c ; ret 0x9fe9
0x00000000000c5bd7 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000147b18 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148224 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147ff6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000149120 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147f76 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000001482b4 : ror dword ptr [rdi], -0x7b ; je 0x1482c4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147dab : ror dword ptr [rdi], -0x7b ; jno 0x147dc0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147e73 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f9667 : ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x0000000000147af0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b3617 : ror dword ptr [rdi], -0x7e ; ret 0
0x00000000000dbf6c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000008d457 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000101f65 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000f7d93 : ror eax, 8 ; ret
0x0000000000069cac : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x69ca8 ; ret
0x000000000007207c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x72078 ; ret
0x000000000005c8f5 : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017c995 : sahf ; add byte ptr [rax], al ; cwde ; leave ; out dx, eax ; call qword ptr [rdi]
0x00000000001706fd : sahf ; add dword ptr [rax], eax ; fsub qword ptr [rbx - 9] ; call rsp
0x00000000000c71be : sahf ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000016d261 : sahf ; cld ; jmp rax
0x0000000000186709 : sahf ; cmc ; jmp qword ptr [rcx]
0x000000000003e072 : sahf ; fst dword ptr [rdx] ; add cl, ch ; ret 0xfff3
0x00000000000025e2 : sahf ; jl 0x2577 ; loop 0x25c2 ; ret 0x23cb
0x00000000000025e1 : sahf ; jl 0x2578 ; loop 0x25c3 ; ret 0x23cb
0x000000000016d120 : sahf ; mov ebx, 0xc344fffc ; cld ; inc esp ; ret 0xfffc
0x00000000001240be : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001134e6 : sahf ; ret
0x000000000005e05e : sahf ; ret 0
0x00000000000ab67c : sahf ; ret 0x2941
0x000000000015a845 : sahf ; ret 0x38ae
0x00000000000a81a4 : sahf ; ret 0xe8c1
0x000000000007881e : sahf ; ret 0xffff
0x000000000000245b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000aaeed : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000c4ad1 : sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000111c02 : sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x0000000000111f29 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000dbfe6 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006382e : sal bh, 0xd8 ; pop rbx ; ret
0x00000000000637fb : sal bh, 0xd8 ; ret
0x0000000000099332 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x000000000007dc17 : sal bh, 1 ; ret 0x8000
0x000000000007dad7 : sal bh, 1 ; ret 0xc000
0x000000000007d997 : sal bh, 1 ; ret 0xe000
0x000000000007d857 : sal bh, 1 ; ret 0xf000
0x000000000007d717 : sal bh, 1 ; ret 0xf800
0x000000000007d5d7 : sal bh, 1 ; ret 0xfc00
0x000000000007d497 : sal bh, 1 ; ret 0xfe00
0x000000000007d357 : sal bh, 1 ; ret 0xff00
0x000000000007d217 : sal bh, 1 ; ret 0xff80
0x000000000007d0d7 : sal bh, 1 ; ret 0xffc0
0x000000000007cf97 : sal bh, 1 ; ret 0xffe0
0x000000000007ce57 : sal bh, 1 ; ret 0xfff0
0x000000000007cd17 : sal bh, 1 ; ret 0xfff8
0x000000000007cbd7 : sal bh, 1 ; ret 0xfffc
0x000000000007ca97 : sal bh, 1 ; ret 0xfffe
0x0000000000049c24 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000102157 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x000000000004223b : sal bl, 1 ; ret
0x000000000009ad4f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x0000000000111835 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00000000000d0a3e : sal byte ptr [rax + rdx*2 - 0xd], 1 ; ret
0x0000000000189260 : sal byte ptr [rax], 0xf6 ; call rsi
0x000000000010225f : sal byte ptr [rbp + 0x1e], 0x83 ; ret 0x8401
0x0000000000081568 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x00000000000715c2 : sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x0000000000115bc1 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x00000000000803a0 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x00000000000631b0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000014c550 : sal byte ptr [rbp + 5], 0x5b ; ret
0x000000000004ab5e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000000f37c7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000330d7 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000010a314 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f3ea4 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x00000000000bfff6 : sal byte ptr [rbp + rax + 0x48], 0x39 ; ret
0x00000000000c0059 : sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xcf75
0x0000000000108553 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000007ac09 : sal byte ptr [rbp + rax + 0x48], cl ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000010a071 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000010f7bf : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000001127d9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000123270 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000733e5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000008d125 : sal byte ptr [rbp - 0x10], cl ; ret
0x0000000000041e8e : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000f40ee : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000007c130 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000989c0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000069cb0 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000008d41a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008ad54 : sal byte ptr [rbp - 0x17], 1 ; or byte ptr [rdi], sil ; ret
0x0000000000113356 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000009a7a8 : sal byte ptr [rbp - 0x1b], 1 ; xor eax, eax ; ret
0x00000000000c0069 : sal byte ptr [rbp - 0x1c], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008de4b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b9b27 : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000010b151 : sal byte ptr [rbp - 0x24], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008d1c3 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000031a43 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000e0f45 : sal byte ptr [rbp - 0x28], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e0fa6 : sal byte ptr [rbp - 0x29], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000b985f : sal byte ptr [rbp - 0x2b], cl ; xor eax, eax ; ret
0x000000000009ac52 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000008037d : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x00000000000f4246 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000007c1da : sal byte ptr [rbp - 0xd], cl ; ret
0x000000000009c0eb : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000f3db0 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x00000000001076a2 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000e1e62 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000e1b63 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000109a62 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000000f2ab4 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00000000000e2595 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000112802 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x0000000000108f1a : sal byte ptr [rbx + rcx*2 + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000065f1f : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000010a0ae : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000677ea : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00000000000e0f73 : sal byte ptr [rbx + rsi + 0x48], 0x89 ; ret
0x000000000004e01e : sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000008d44e : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00000000000e61a9 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000007e36c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000f37b6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000d9fb1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000000f0a4b : sal byte ptr [rdi + 0x48], 0x83 ; ret
0x00000000000b5510 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000105806 : sal byte ptr [rdi + rbx + 0x48], 0x83 ; ret
0x000000000015f2fc : sal byte ptr [rdi - 0xd], 1 ; push rax ; ja 0x15f2fd ; call qword ptr [rax]
0x000000000007e53b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000c000b : sal byte ptr [rdx + rbx*8 + 0x5b], 0x5d ; pop r12 ; ret
0x000000000004502e : sal byte ptr [rdx + rcx*2 + 0x4c], 0x63 ; ret
0x000000000008f8d3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x000000000007c5b3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000008d7eb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000e0f13 : sal byte ptr [rdx + rsi + 0x48], 0x89 ; ret
0x00000000000f36dc : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000117487 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x000000000010e6ca : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x10e6e8 ; call rax
0x00000000001133da : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1133f8 ; call rax
0x0000000000113a23 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x113a41 ; call rax
0x000000000011033e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x1103b4 ; call rax
0x0000000000110d5e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x110dc4 ; call rax
0x00000000000f09f7 : sal byte ptr [rsi + rdx + 0x48], 0x83 ; ret
0x000000000015f2dc : sal byte ptr [rsi - 0xd], 1 ; push rax ; jbe 0x15f2dd ; call qword ptr [rax]
0x00000000001803d0 : sal byte ptr [rsi - 0xe], 1 ; jmp rcx
0x000000000016c338 : sal byte ptr [rsi], 1 ; cld ; jmp qword ptr [rax]
0x00000000000235d9 : sal byte ptr [rsp + rbp + 0x48], 0x83 ; ret
0x0000000000040ae6 : sal byte ptr [rsp + rbp + 0x4d], 0x39 ; in eax, 0x77 ; adc ebp, ecx ; ret
0x000000000007e071 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000e9192 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000000c2774 : sal ch, 1 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000018e030 : sal dh, 1 ; clc ; call qword ptr [rax]
0x00000000001700f1 : sal dh, cl ; call rsp
0x0000000000032bea : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 0x28 ; ret
0x00000000000328af : sal dword ptr [rbp + 0xe], 0x48 ; add esp, 0x28 ; ret
0x000000000004248f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00000000000884fa : sal dword ptr [rbp - 0xd], 1 ; ret
0x0000000000115694 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000009ac32 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x000000000004bf4b : sal dword ptr [rcx - 0x76b7ffff], 1 ; ret 0x8ee9
0x000000000011557b : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x115599 ; ret
0x000000000008d387 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x0000000000102155 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000728b8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000000fe9b9 : sal dword ptr [rcx], cl ; fild dword ptr [rbx - 0x6bf0fe03] ; ret
0x0000000000074a89 : sal dword ptr [rdx], cl ; str word ptr [rax - 0x7d] ; ret 0x3110
0x000000000008d219 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x8d218 ; ret
0x000000000016ec51 : sal eax, 1 ; call rsp
0x000000000016f629 : sal ebx, -1 ; add al, 0x37 ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff3
0x0000000000126765 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000330d3 : salc ; add byte ptr ss:[rbp - 0xcf98a40], al ; ret
0x0000000000149436 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000010e66b : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000129aa6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000014bb91 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f2719 : salc ; call rax
0x0000000000098c2a : salc ; clc ; ret
0x00000000000ef00c : salc ; cmovne eax, ecx ; ret
0x00000000000038ed : salc ; jb 0x396f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000c042b : salc ; jne 0xc0434 ; ret
0x000000000006a940 : salc ; mov eax, 0xffffffff ; ja 0x6a959 ; ret
0x0000000000001bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000009ad69 : salc ; mov rax, rdi ; ret
0x00000000000a7deb : salc ; mov rdi, rbp ; sub rsp, 8 ; call r12
0x00000000000b0555 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000009aeab : salc ; or al, byte ptr [rax] ; ret
0x000000000016e4e1 : salc ; out dx, eax ; jmp rsp
0x00000000000022e4 : salc ; ret
0x000000000005e026 : salc ; ret 0
0x00000000000025e6 : salc ; ret 0x23cb
0x000000000016bc74 : salc ; ret 0xfffd
0x000000000016bd4d : salc ; std ; call qword ptr [rax]
0x000000000016bddd : salc ; std ; call rdi
0x000000000016bd2d : salc ; std ; jmp qword ptr [rcx]
0x000000000016bdbd : salc ; std ; jmp rsi
0x0000000000188250 : sar ah, 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000188490 : sar bh, 1 ; cmc ; call qword ptr [rsi]
0x0000000000055845 : sar bl, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x840f
0x000000000005bd38 : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000005cc04 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000ff490 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000100393 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x00000000000ffff1 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x0000000000119fc2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002954b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000000b8aef : sar byte ptr [rax + 1], cl ; ret
0x0000000000079a47 : sar byte ptr [rax + 6], 0xf3 ; ret
0x0000000000079a75 : sar byte ptr [rax + 8], 0xe9 ; ret
0x000000000006d2ac : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000071e8c : sar byte ptr [rax - 0x3776ffce], 0x83 ; ret 0x2501
0x000000000015f348 : sar byte ptr [rax - 0xd], 0xff ; sar byte ptr [rax - 0xd], 1 ; jmp rax
0x000000000015f34c : sar byte ptr [rax - 0xd], 1 ; jmp rax
0x000000000016c5bc : sar byte ptr [rbp - 4], 0xff ; push rax ; jge 0x16c5c6 ; jmp rax
0x000000000016cfe0 : sar byte ptr [rbx - 0x3c6f0004], 1 ; cld ; call qword ptr [rax]
0x00000000000e77d3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x000000000016d080 : sar byte ptr [rdi - 0x40ad0004], cl ; cld ; call rdx
0x00000000000c4b9d : sar byte ptr [rdx], 0xe ; je 0xc4b3c ; pop rbx ; ret
0x000000000016c344 : sar byte ptr [rdx], 0xfc ; call qword ptr [rax]
0x0000000000002b85 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x00000000000899f5 : sar byte ptr [rdx], cl ; cmove rax, rdx ; ret
0x00000000000b811c : sar byte ptr [rsi + 9], 1 ; ret
0x000000000015b1df : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000016d088 : sar byte ptr [rsi - 0x41ad0004], cl ; cld ; call rdx
0x000000000016bce9 : sar ch, 0xff ; and cl, al ; std ; jmp qword ptr [rax]
0x00000000001729e9 : sar ch, 0xff ; in al, 0x1a ; add dword ptr [rax], eax ; in al, dx ; ret
0x000000000016bc69 : sar ch, 0xff ; push rsi ; sar ebp, -1 ; push rsi ; ret 0xfffd
0x0000000000187f40 : sar cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000000e1198 : sar cl, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000171c09 : sar cl, 1 ; jmp rsp
0x0000000000163081 : sar dl, 1 ; call qword ptr [rax]
0x00000000001630a1 : sar dl, 1 ; push qword ptr [rax] ; iretd ; cli ; call qword ptr [rax]
0x000000000016308d : sar dl, 1 ; push qword ptr [rax] ; sar dl, 1 ; call qword ptr [rax]
0x00000000000ca5c5 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xca5e2
0x000000000008e123 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x8e12e ; ret
0x000000000008e876 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x8e881 ; ret
0x000000000008efc3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x8efce ; ret
0x000000000001f949 : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000032ce3 : sar eax, 0x10 ; ret
0x0000000000032949 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000dfb7d : sar eax, 0x1f ; ret
0x0000000000032c9b : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003256d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000006a74c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000006ce30 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000006ae19 : sar eax, 2 ; ret
0x00000000000f7aad : sar eax, 6 ; ret
0x000000000016bc2d : sar ebp, -1 ; jno 0x16bbfc ; std ; push rcx ; ret 0xfffd
0x000000000016bc6d : sar ebp, -1 ; push rsi ; ret 0xfffd
0x000000000015af43 : sar ecx, 1 ; jnp 0x15af04 ; ret
0x00000000000bbb55 : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000036124 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000036137 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000001725e9 : sar edx, 1 ; jmp rsp
0x0000000000081737 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000006a74b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003256c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x000000000006ae18 : sar rax, 2 ; ret
0x00000000000f7aac : sar rax, 6 ; ret
0x0000000000081736 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000018a6b9 : sbb ah, bh ; jmp qword ptr [rsi]
0x00000000000704c2 : sbb ah, byte ptr [rdx + 0xf480032] ; ret 0x8948
0x00000000000de04a : sbb ah, dh ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000184360 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x18 ; add dword ptr [rax], eax ; pop rax ; ret
0x0000000000184380 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0x18 ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000018b810 : sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x8c ; add dword ptr [rax], eax ; clc ; ret 0xfff6
0x00000000000d9de9 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000001843e0 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], bl ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000000f271e : sbb al, 0x20 ; je 0xf2786 ; xor eax, eax ; pop rbx ; ret
0x00000000000f271d : sbb al, 0x20 ; je 0xf2787 ; xor eax, eax ; pop rbx ; ret
0x0000000000174d7c : sbb al, 0x22 ; add byte ptr [rax], al ; mov al, 0xcb ; jmp 0x174d8a
0x000000000018577c : sbb al, 0x2c ; add dword ptr [rax], eax ; and byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x000000000007bbd4 : sbb al, 0x32 ; add byte ptr [rax], al ; je 0x7bbe6 ; ret
0x000000000017637c : sbb al, 0x38 ; add byte ptr [rax], al ; or ebp, esp ; call qword ptr [rdx]
0x000000000018677c : sbb al, 0x3c ; add dword ptr [rax], eax ; push rax ; lahf ; cmc ; jmp qword ptr [rcx]
0x0000000000002f9c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x000000000016fba8 : sbb al, 0x48 ; cmc ; call rsp
0x00000000000e2893 : sbb al, 0x83 ; ret
0x000000000016e1f0 : sbb al, 0x87 ; out dx, eax ; call rsp
0x000000000016dbf8 : sbb al, 0x95 ; in al, dx ; call rsp
0x000000000017d47c : sbb al, 0xa9 ; add byte ptr [rax], al ; push rax ; or eax, esi ; jmp qword ptr [rdx]
0x0000000000171a80 : sbb al, 0xaa ; stc ; call rsp
0x00000000000c01a3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x000000000017ed7c : sbb al, 0xc2 ; add byte ptr [rax], al ; mov al, 0x80 ; int1 ; jmp rbx
0x0000000000171598 : sbb al, 0xd5 ; clc ; call rsp
0x0000000000171cc8 : sbb al, 0xdf ; stc ; jmp rsp
0x00000000001837f1 : sbb al, 0xf4 ; jmp qword ptr [rdi]
0x000000000016017d : sbb al, 0xf5 ; call qword ptr [rax]
0x000000000016d740 : sbb al, 0xfc ; jmp 0x16d746
0x00000000001727c0 : sbb al, 0xfe ; cli ; jmp rsp
0x0000000000171690 : sbb al, 6 ; stc ; call rsp
0x0000000000070c30 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001745fd : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x80], al ; jmp 0x174609
0x0000000000174615 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x80], cl ; jmp 0x174621
0x000000000017462d : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x80], dl ; jmp 0x174639
0x0000000000008f38 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000102030 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000009ad5c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000053c2a : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000001729ed : sbb al, byte ptr [rcx] ; add ah, ch ; ret
0x0000000000184595 : sbb al, byte ptr [rcx] ; add byte ptr [rax - 0x3c], bh ; hlt ; call qword ptr [rdx]
0x0000000000115ba7 : sbb al, ch ; ret
0x000000000002dacc : sbb al, dh ; add byte ptr ss:[rax - 0x77], cl ; ret 0x8348
0x000000000016c19d : sbb bh, ah ; call rax
0x00000000000bab09 : sbb bh, ah ; dec dword ptr [rax - 0x77] ; ret 0x1deb
0x00000000000c015a : sbb bh, byte ptr [rax + 2] ; ret
0x000000000018cb79 : sbb bh, dh ; call qword ptr [rdi]
0x00000000001702f9 : sbb bh, dh ; jmp rsp
0x000000000017db39 : sbb bh, dl ; call qword ptr [rax]
0x00000000000e9922 : sbb bl, byte ptr [rcx] ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000159cc5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000031c31 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000006e36e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000011c85f : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000001155f1 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000000b4b42 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000115906 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000984a4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000984c6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098504 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000006baea : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000006e36f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000074f13 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000c11bc : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000011c860 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000f6463 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d19dbb
0x00000000001155f2 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000116f3d : sbb byte ptr [rax + 1], cl ; ret
0x00000000000823f1 : sbb byte ptr [rax + rax], cl ; ret
0x000000000017b898 : sbb byte ptr [rax - 0x11], dh ; call qword ptr [rcx]
0x00000000000b4262 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000023d10 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000000245bb : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000c42ce : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a646d : sbb byte ptr [rax - 0x75], cl ; jnp 0xa6489 ; call 0x22767
0x0000000000074457 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d53b0 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000722a1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000076695 : sbb byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x10 ; call rdi
0x0000000000112b55 : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000007be86 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000a94f8 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000006b841 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000006feba : sbb byte ptr [rax - 0x7b], cl ; push qword ptr [rbx + rcx - 0x18] ; ret
0x0000000000070585 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000b4b43 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000dc559 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008736e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000078877 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000008736d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000b5de9 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000747af : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x000000000007285f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000115907 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000006ebc6 : sbb byte ptr [rax], al ; setne al ; ret
0x000000000000245c : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000984a5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000984c7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098505 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000118038 : sbb byte ptr [rbp + 0x39], cl ; ret
0x000000000008a3d8 : sbb byte ptr [rbp - 0x77], al ; ret 0x3845
0x0000000000021521 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x000000000010b834 : sbb byte ptr [rbp - 0x77], cl ; ret
0x000000000003d802 : sbb byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret 8
0x0000000000185958 : sbb byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x00000000000da352 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006e2d4 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007c07a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006e387 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000108d74 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x0000000000036c77 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000172d80 : sbb byte ptr [rbx + 0xa950203], al ; ret
0x0000000000176988 : sbb byte ptr [rbx - 0x14], ah ; jmp rax
0x0000000000073427 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000e9971 : sbb byte ptr [rbx], ch ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x000000000008d19f : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000006a24b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001166fc : sbb byte ptr [rcx + 0x63], cl ; ret
0x00000000000c0e06 : sbb byte ptr [rcx + rcx*4 + 0x70], al ; add al, 0x83 ; ret 0x4101
0x000000000009b9d0 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x000000000009bc88 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000006c893 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000009bf60 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x000000000017db98 : sbb byte ptr [rcx - 0x10], cl ; call qword ptr [rax]
0x00000000000c2066 : sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000001076f4 : sbb byte ptr [rcx - 0x76b7000f], al ; ret
0x000000000008cf3e : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x000000000006bde3 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000006baeb : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000009ad51 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001843a5 : sbb byte ptr [rcx], al ; add byte ptr [rax - 0x3d], bl ; hlt ; call qword ptr [rbx]
0x00000000001843e5 : sbb byte ptr [rcx], al ; add byte ptr [rax - 0x3d], bl ; hlt ; call qword ptr [rsi]
0x0000000000184425 : sbb byte ptr [rcx], al ; add byte ptr [rax - 0x3d], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018443d : sbb byte ptr [rcx], al ; add byte ptr [rax - 0x3d], dh ; hlt ; jmp qword ptr [rcx]
0x000000000003850c : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000001186b3 : sbb byte ptr [rcx], al ; je 0x1186c6 ; xor eax, eax ; ret
0x00000000000dfae2 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000bf643 : sbb byte ptr [rcx], bh ; ret 0x850f
0x000000000004ce2b : sbb byte ptr [rcx], ch ; ret 0xe583
0x000000000006c8e7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000f64b8 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000001843a4 : sbb byte ptr [rcx], r8b ; add byte ptr [rax - 0x3d], bl ; hlt ; call qword ptr [rbx]
0x0000000000181348 : sbb byte ptr [rdi], ah ; jmp qword ptr [rdi]
0x00000000000637f8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000114af8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000115a9e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000031c32 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000010a4c8 : sbb byte ptr [rdi], cl ; test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000010cd77 : sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xffe9
0x0000000000105bfc : sbb byte ptr [rdx + 0x29], dl ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x0000000000002057 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000000fdda2 : sbb byte ptr [rdx], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000176278 : sbb byte ptr [rdx], cl ; in al, dx ; call qword ptr [rsi]
0x000000000002ca81 : sbb byte ptr [rip + 0x788d4800], al ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000e9d3c : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000e9d3b : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000015f090 : sbb byte ptr [rsi - 0xd], 0xff ; mov al, 0x5e ; jmp rax
0x000000000016c080 : sbb byte ptr [rsi], 0xfc ; inc dword ptr [rax + 0x20] ; cld ; jmp qword ptr [rax]
0x00000000000e97ea : sbb ch, byte ptr [rbx] ; add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000016039d : sbb ch, dh ; push qword ptr [rax] ; mov ebp, esi ; call rax
0x00000000000bf640 : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000171701 : sbb cl, bh ; jmp rsp
0x00000000000a64c5 : sbb cl, byte ptr [rax - 0x75] ; jl 0xa64f6 ; or al, ch ; nop ; ret 0xfff7
0x00000000000d9b57 : sbb cl, byte ptr [rax - 0x77] ; ret 0x894c
0x0000000000106403 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000008076f : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x0000000000094eff : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000011e33d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001204ad : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011df2d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000011da39 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e249 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012445a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000123c7a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000012406a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012388a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012100d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001207ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000011dcbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011ffcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000011dffd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000011e319 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123a29 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e3e9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120b2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012030d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011faed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000120ccd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000011e19d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011d98d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000011dd8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000123f1a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012373a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012484a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e26d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000011da5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000011fe2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011daff : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011de5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000011ff63 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120c63 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120783 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123e1b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012474b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e0cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000120fa3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001202a3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000011fdc3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120ac3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000123f6b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012378b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011db23 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000160365 : sbb dh, ch ; jmp qword ptr [rax]
0x0000000000037b2a : sbb dh, dh ; ret 0x7501
0x00000000000f0f4b : sbb dh, dh ; ret 0x7508
0x000000000001ea90 : sbb dl, byte ptr [rax + 0x16] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000001eaa8 : sbb dl, byte ptr [rax + 0x16] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x0000000000121768 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c0133 : sbb dword ptr [rax + 1], edi ; ret
0x000000000002c8c7 : sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000e61b6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x00000000001197e4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00000000001216f1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121769 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000179cbd : sbb dword ptr [rax], eax ; add byte ptr [rax], dh ; adc al, 0xef ; call qword ptr [rax]
0x000000000005d6b7 : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret 0x19
0x00000000000b88f5 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000000c3b1c : sbb dword ptr [rbp - 0x73], eax ; outsd dx, dword ptr [rsi] ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009936e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x000000000015c57d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000010222a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000001844b5 : sbb dword ptr [rcx], eax ; add al, ch ; ret
0x000000000018449d : sbb dword ptr [rcx], eax ; add al, dl ; ret
0x000000000009661e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x00000000000702c3 : sbb dword ptr [rdx + rsi + 0x4f0f4800], esp ; ret 0x8948
0x000000000014bd72 : sbb dword ptr [rip + 0x5be17500], esp ; ret
0x000000000002c8c1 : sbb dword ptr [rip + 0x788d4800], eax ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000ed28b : sbb dword ptr [rip - 0x76b7ffd5], edx ; ret 0x8d48
0x00000000000f4f03 : sbb dword ptr [rsi], ebx ; add eax, dword ptr [rax] ; ret
0x00000000001456fc : sbb eax, -1 ; ret
0x00000000000f4764 : sbb eax, 0 ; leave ; ret
0x0000000000041032 : sbb eax, 0x1245a7 ; mov rax, rbx ; pop rbx ; ret
0x0000000000160309 : sbb eax, 0x1ba3fff5 ; cmc ; jmp rcx
0x000000000014bd70 : sbb eax, 0x2519cb ; jne 0x14bd60 ; pop rbx ; ret
0x00000000000e9921 : sbb eax, 0x2b191a ; pop rbx ; ret
0x0000000000094f89 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000f2712 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000966dd : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000000e623a : sbb eax, 0x7f39f ; mov rax, rbx ; pop rbx ; ret
0x000000000002db39 : sbb eax, 0x8948ffff ; ret 0x4e9
0x0000000000174935 : sbb eax, 0x9c980000 ; jmp 0x174941
0x0000000000184865 : sbb eax, 0xc280001 ; cmc ; call rdi
0x000000000002568f : sbb eax, 0xf7000003 ; ret 0
0x000000000007bc42 : sbb eax, 0xfffffb99 ; call 0x67f37
0x0000000000104cfa : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x0000000000121511 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121589 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001746bd : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x80], ah ; jmp 0x1746c9
0x00000000001746a5 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x80], bl ; jmp 0x1746b1
0x0000000000174675 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x80], cl ; jmp 0x174681
0x000000000017468d : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x80], dl ; jmp 0x174699
0x0000000000172a0d : sbb eax, dword ptr [rcx] ; add byte ptr [rbx], bh ; std ; call rsp
0x000000000010e910 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000c4a86 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x00000000000421da : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000c4ad0 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x000000000014ae05 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000014c041 : sbb ebp, dword ptr [rbx + rdi*8 - 1] ; nop dword ptr [rax] ; ret
0x00000000000cc8bd : sbb ebx, edi ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000e1b65 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x000000000004e050 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000000acb8d : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000170f59 : sbb edi, eax ; jmp rsp
0x00000000000025df : sbb esi, dword ptr [rdx] ; sahf ; jl 0x257a ; loop 0x25c5 ; ret 0x23cb
0x000000000016030d : sbb esi, ebp ; jmp rcx
0x0000000000160361 : sbb esi, ebp ; push rbx ; sbb dh, ch ; jmp qword ptr [rax]
0x00000000000f44de : sbb esi, ebx ; ret
0x000000000016c199 : sbb esp, edi ; call qword ptr [rax - 0x2f0003e6]
0x00000000001746a4 : sbb r8d, dword ptr [rax] ; add byte ptr [rax - 0x80], bl ; jmp 0x1746b2
0x00000000001456fb : sbb rax, -1 ; ret
0x000000000011f492 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018d965 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; sub byte ptr [rdx - 9], dh ; call qword ptr [rcx]
0x00000000001244ae : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000016d24d : scasb al, byte ptr [rdi] ; cld ; jmp rax
0x00000000000b8dde : scasb al, byte ptr [rdi] ; push rsp ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000011adbe : scasb al, byte ptr [rdi] ; ret
0x000000000017ec31 : scasb al, byte ptr [rdi] ; sti ; call qword ptr [rax]
0x00000000000f4284 : scasb al, byte ptr [rdi] ; sub al, byte ptr [rax] ; test rax, rax ; je 0xf4298 ; ret
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000010038e : scasb al, byte ptr [rdi] ; xchg dh, bh ; inc dword ptr [rbp - 0x76a18740] ; ret
0x00000000001245ad : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016e165 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; cmp al, 0x66 ; out dx, eax ; jmp rsp
0x000000000017daa5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; fadd dword ptr [rdi - 0x10] ; call qword ptr [rcx]
0x000000000017db35 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sub byte ptr [rdx], bl ; cli ; call qword ptr [rax]
0x000000000016f9c9 : scasd eax, dword ptr [rdi] ; hlt ; jmp rsp
0x00000000000f62b3 : scasd eax, dword ptr [rdi] ; jmp 0x76d19c05
0x00000000000f6466 : scasd eax, dword ptr [rdi] ; jmp 0x76d19db8
0x00000000000f7d7f : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x000000000017c4c9 : scasd eax, dword ptr [rdi] ; out dx, eax ; call qword ptr [rsi]
0x000000000010c51d : scasd eax, dword ptr [rdi] ; ret
0x000000000006b98c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000009903e : scasd eax, dword ptr [rdi] ; ret 0x74e9
0x000000000007a868 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000099029 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000034876 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000031c34 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000e9abd : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000000ea34b : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000002bcf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd1 ; ret
0x00000000000e9de5 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000dbf88 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000f37bc : setae al ; ret
0x00000000000b2818 : setbe al ; movzx eax, al ; pop rbx ; ret
0x00000000000ea7a0 : setbe al ; ret
0x0000000000107658 : sete al ; add rsp, 8 ; ret
0x00000000000bbf88 : sete al ; movzx eax, al ; ret
0x000000000002c525 : sete al ; ret
0x00000000000c0889 : setg dl ; jmp 0xc0812
0x000000000009a7ba : setl al ; movzx eax, al ; neg eax ; ret
0x0000000000111c62 : setne al ; add rsp, 0x78 ; ret
0x00000000000d3ef0 : setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000d09fb : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x0000000000063829 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000d09dd : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000e43e4 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000033b06 : setne al ; movzx eax, al ; ret
0x0000000000111c00 : setne al ; neg eax ; add rsp, 0x18 ; ret
0x000000000006a97c : setne al ; neg eax ; ret
0x000000000006ebc8 : setne al ; ret
0x000000000009d214 : setne dl ; jmp 0x9d229
0x000000000009f7e4 : setne dl ; jmp 0x9f7f9
0x00000000000a1c14 : setne dl ; jmp 0xa1c29
0x000000000000e618 : shl al, 1 ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015f0fc : shl byte ptr [rax - 0xd], 0xff ; shl byte ptr [rax - 0xd], 1 ; jmp rax
0x000000000015f100 : shl byte ptr [rax - 0xd], 1 ; jmp rax
0x000000000016caa8 : shl byte ptr [rbp - 0x5aaf0004], 0xfc ; jmp rax
0x000000000016c8d0 : shl byte ptr [rcx - 0x5eaf0004], 0xfc ; jmp rax
0x000000000015f174 : shl byte ptr [rdx - 0xd], 0xff ; shl byte ptr [rdx - 0xd], 1 ; jmp rax
0x000000000015f178 : shl byte ptr [rdx - 0xd], 1 ; jmp rax
0x00000000000988df : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000032633 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x00000000001493f3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000007c7f5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000001484ab : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001484c2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000000800d6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000800e7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000008d628 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000001483a1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c114 : shl byte ptr [rsi], 1 ; cld ; call rax
0x000000000016bff4 : shl ch, 1 ; sti ; jmp qword ptr [rax]
0x000000000016bfac : shl dl, 0xfb ; call qword ptr [rax]
0x0000000000155550 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000015b0c8 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000000b60b3 : shl dword ptr [rsi + 0x2e], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000148426 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009873b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x00000000000800d2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001484dd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000001484c6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001484af : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000146f6b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000148441 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008138c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000008d868 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000148301 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000010245a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000033c63 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000004275c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000426e7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000426b6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000874f1 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000207f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x0000000000036178 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00000000000c780b : shl edx, 2 ; xor esi, esi ; call 0x81c99
0x000000000004ac2d : shl edx, 3 ; call 0x86ed5
0x00000000001022eb : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000010248c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000004275b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000426e6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000426b5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000033c62 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000207ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x000000000004ac2c : shl rdx, 3 ; call 0x86ed6
0x000000000010248b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000f274b : shr al, 0x8f ; ret 0xfff5
0x00000000000f3736 : shr ax, 0xe ; and eax, 1 ; ret
0x000000000015deb5 : shr bh, cl ; jmp rsi
0x000000000011d051 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000c45c6 : shr bl, cl ; ret
0x00000000000290e2 : shr byte ptr [rax + 0x41], 0x39 ; ret
0x000000000016c118 : shr byte ptr [rax], 1 ; cld ; call rax
0x00000000000adcd2 : shr byte ptr [rcx - 0x40], 0x90 ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0xf40
0x000000000008de4f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000a642f : shr byte ptr [rcx], 1 ; ret
0x00000000000289a8 : shr byte ptr [rcx], cl ; ret
0x000000000008173b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000dbf8d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000059a9d : shr cl, 0x1a ; ret
0x0000000000060a61 : shr cl, 0x91 ; ret
0x000000000016c000 : shr cl, 0xfb ; call qword ptr [rax]
0x00000000000e1f46 : shr dword ptr [rbx], 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000ad981 : shr dword ptr [rcx], cl ; ret
0x00000000000f7e28 : shr eax, 0x18 ; ret
0x0000000000032971 : shr eax, 0x1f ; ret
0x000000000014936c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x14937f ; xor eax, eax ; ret
0x00000000000325a0 : shr eax, 0x3f ; ret
0x00000000000e7958 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000009925a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000f3737 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000f1678 : shr eax, 1 ; ret 0xffd3
0x00000000000c4b85 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x000000000006f6e2 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000102460 : shr eax, 4 ; ret
0x000000000006f6f2 : shr eax, 5 ; and eax, 1 ; ret
0x0000000000099239 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000033b1f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000ea53b : shr eax, cl ; and eax, 1 ; ret
0x000000000016d501 : shr ebx, -1 ; push rsp ; imul eax, dword ptr [rax], 0 ; pop rsp ; ret
0x000000000011c291 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000033b77 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000004286c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000427f1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000427c0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000007bf83 : shr edi, 1 ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000006a7f3 : shr edx, 2 ; sub eax, edx ; ret
0x0000000000115e2a : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000006d180 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x000000000006d270 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002c069 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2c080 ; ret
0x0000000000178661 : shr esi, 1 ; jmp qword ptr [rax]
0x000000000004286b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000427f0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000427bf : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003259f : shr rax, 0x3f ; ret
0x00000000000e7957 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000010245f : shr rax, 4 ; ret
0x000000000006a7f2 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000115e29 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000008d0d1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008d041 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000d3e5e : sldt word ptr [rax] ; add byte ptr [rsp + rcx*2 - 0xd], dh ; ret
0x00000000000e7943 : sldt word ptr [rax] ; or eax, edi ; ret
0x0000000000154729 : sldt word ptr [rax] ; ret
0x000000000010a4cb : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001716fd : stc ; add dword ptr [rax], eax ; fcomp qword ptr [rax] ; stc ; jmp rsp
0x0000000000101f61 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000ab679 : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x00000000000bd2f4 : stc ; and al, 0xf ; xchg eax, esp ; ret 0x394c
0x00000000000e15de : stc ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8041
0x0000000000104cfc : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x0000000000184f2a : stc ; call qword ptr [rax]
0x000000000009bf66 : stc ; call rbx
0x0000000000171692 : stc ; call rsp
0x0000000000187f71 : stc ; cmc ; call qword ptr [rax]
0x0000000000187eb1 : stc ; cmc ; call qword ptr [rcx]
0x0000000000187ec9 : stc ; cmc ; jmp qword ptr [rcx]
0x0000000000107252 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000884a0 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000089535 : stc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e1b5f : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00000000000e61a5 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x0000000000171cc2 : stc ; dec esp ; and eax, dword ptr [rdx] ; add byte ptr [rdi + rbx*8], bl ; stc ; jmp rsp
0x00000000000e28d9 : stc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000123562 : stc ; je 0x12352e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000124bf2 : stc ; je 0x124bbe ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016d719 : stc ; jmp 0x16d71d
0x000000000016d718 : stc ; jmp 0x16d71e
0x000000000018a3fa : stc ; jmp qword ptr [rsi]
0x0000000000171702 : stc ; jmp rsp
0x000000000015af44 : stc ; jnp 0x15af03 ; ret
0x0000000000171b62 : stc ; ljmp ptr [rdx + rbx - 0x42c3fffe] ; stc ; jmp rsp
0x000000000017199a : stc ; ljmp ptr [rdx + rcx - 0x7213fffe] ; stc ; jmp rsp
0x0000000000171c02 : stc ; ljmp ptr [rsi + rbx - 0x2f83fffe] ; stc ; jmp rsp
0x0000000000171a7a : stc ; ljmp ptr [rsp + rdx + 2] ; add byte ptr [rdx + rbp*4], bl ; stc ; call rsp
0x000000000012c288 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000104f82 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cfbb : stc ; mov rax, rdi ; ret
0x00000000000d0a3b : stc ; or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x000000000007ff61 : stc ; or eax, dword ptr [rax] ; ret
0x000000000015e2b1 : stc ; out dx, eax ; jmp rsp
0x00000000001128f7 : stc ; pop rbx ; mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x00000000000428ad : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009affd : stc ; push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x0000000000171c9a : stc ; push qword ptr [rdx - 0x2403fffe] ; stc ; jmp rsp
0x000000000017168a : stc ; push qword ptr [rsi + rsi*8 + 0x61c0001] ; stc ; call rsp
0x0000000000098c29 : stc ; salc ; clc ; ret
0x000000000009d213 : stc ; setne dl ; jmp 0x9d22a
0x000000000009f7e3 : stc ; setne dl ; jmp 0x9f7fa
0x00000000000a1c13 : stc ; setne dl ; jmp 0xa1c2a
0x00000000000ea53a : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000015e2c4 : stc ; stc ; out dx, eax ; jmp rsp
0x000000000016bf49 : stc ; sti ; call qword ptr [rax]
0x000000000008e624 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000007df45 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000bf0d2 : stc ; xor eax, eax ; mov rdx, r8 ; jmp 0xbf0fb
0x00000000000b88ae : std ; add byte ptr [rax], al ; jne 0xb8881 ; ret
0x00000000001928fd : std ; add dword ptr [rax], eax ; loopne 0x1928a0 ; sti ; jmp qword ptr [rdx]
0x00000000000fe9bd : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000016bbe2 : std ; call qword ptr [rax]
0x000000000016bc4a : std ; call qword ptr [rcx]
0x000000000016bc76 : std ; call qword ptr [rsi - 0x3d]
0x000000000016bc92 : std ; call qword ptr [rsi]
0x000000000016bc12 : std ; call rax
0x000000000016bc56 : std ; call rcx
0x000000000016bc9e : std ; call rdi
0x000000000016bc72 : std ; call rsi
0x0000000000172a12 : std ; call rsp
0x0000000000172799 : std ; cli ; call rsp
0x00000000001882b1 : std ; cmc ; jmp qword ptr [rcx]
0x00000000000d99c1 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000014b64d : std ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010aa49 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000006e217 : std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000172a0a : std ; dec dword ptr [rbx + rbx - 0x1cc3ffff] ; std ; call rsp
0x00000000000cc1b0 : std ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000cc9be : std ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000d95ed : std ; dec ecx ; ret
0x0000000000032e3d : std ; fstp st(1) ; ret
0x000000000015fd91 : std ; hlt ; inc esi ; push rsp ; jmp qword ptr [rax]
0x000000000016bbea : std ; inc dword ptr [rax] ; ret 0xfffd
0x00000000000cca1b : std ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x9fe9
0x00000000000fdf8b : std ; jbe 0xfdf93 ; ret
0x000000000016bcf2 : std ; jmp qword ptr [rax + 0x20fffdc2]
0x000000000016bcfa : std ; jmp qword ptr [rax + 0x20fffdc3]
0x000000000016bc0e : std ; jmp qword ptr [rax]
0x000000000016bc4e : std ; jmp qword ptr [rcx + 0x31fffdc6]
0x000000000016bd2e : std ; jmp qword ptr [rcx]
0x0000000000173dca : std ; jmp qword ptr [rdi]
0x000000000017321a : std ; jmp qword ptr [rdx]
0x000000000016bd12 : std ; jmp rax
0x000000000016bdbe : std ; jmp rsi
0x00000000001729ea : std ; jmp rsp
0x0000000000172af2 : std ; ljmp ptr [rbx + rcx] ; add al, byte ptr [rax] ; cmp al, 0xee ; std ; jmp rsp
0x000000000012baab : std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000020912 : std ; neg eax ; mov dword ptr fs:[r9], eax ; jmp 0x208e5
0x000000000016bc36 : std ; push qword ptr [rcx - 0x3d] ; std ; push rcx ; ret
0x000000000016bc2e : std ; push qword ptr [rcx - 0x3e] ; std ; push rcx ; ret 0xfffd
0x000000000016bc3a : std ; push rcx ; ret
0x000000000016bc32 : std ; push rcx ; ret 0xfffd
0x000000000011aa57 : std ; sti ; inc dword ptr [rbp + 0x3d8d48c0] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 4
0x000000000011aa33 : std ; sti ; inc dword ptr [rbp + 0x3d8d48c0] ; lodsd eax, dword ptr [rsi] ; ret 4
0x000000000016beb1 : std ; sti ; jmp rax
0x000000000006413e : std ; str word ptr [rax - 0x77] ; ret 0x8948
0x0000000000079dd9 : sti ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000079fb3 : sti ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000053868 : sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x000000000016bfce : sti ; call qword ptr [rax - 0x1f000412]
0x000000000016bfe2 : sti ; call qword ptr [rax - 0x1f000420]
0x000000000016bb8a : sti ; call qword ptr [rax - 0x1f000477]
0x000000000016ba7e : sti ; call qword ptr [rax]
0x000000000016ba6e : sti ; call rax
0x00000000000c7813 : sti ; call rcx
0x00000000001880a1 : sti ; cmc ; jmp qword ptr [rcx]
0x00000000000e5098 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000065f1b : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00000000000677e6 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00000000001634ee : sti ; dec dword ptr [rax] ; sub bh, bl ; call qword ptr [rax]
0x0000000000065661 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000000cc8be : sti ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000016ba66 : sti ; inc dword ptr [rax + 0x20] ; sti ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016ba7a : sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016baa2 : sti ; inc dword ptr [rax + 0x2d] ; sti ; push qword ptr [rax] ; sti ; jmp qword ptr [rax]
0x000000000016ba8a : sti ; inc dword ptr [rax + 0x50fffb27] ; sub bl, bh ; jmp qword ptr [rax]
0x000000000016bb2e : sti ; inc dword ptr [rax + 0x60] ; sti ; jmp qword ptr [rax]
0x000000000016bb4e : sti ; inc dword ptr [rax + 0x6f] ; sti ; jmp qword ptr [rax]
0x000000000016bf16 : sti ; inc dword ptr [rax + 1] ; cld ; inc dword ptr [rax + 3] ; cld ; call rax
0x000000000016bfca : sti ; inc dword ptr [rax - 0x13] ; sti ; call qword ptr [rax - 0x1f000412]
0x000000000016bfee : sti ; inc dword ptr [rax - 0x2f00041c] ; in eax, 0xfb ; jmp qword ptr [rax]
0x000000000016bb86 : sti ; inc dword ptr [rax - 0x78] ; sti ; call qword ptr [rax - 0x1f000477]
0x000000000016bef6 : sti ; inc dword ptr [rax - 0x7f0003ff] ; add edi, esp ; call qword ptr [rax]
0x000000000016bf76 : sti ; inc dword ptr [rax - 0x7f000400] ; add bh, ah ; call qword ptr [rax]
0x000000000016be6a : sti ; inc dword ptr [rax - 4] ; sti ; jmp qword ptr [rax]
0x000000000016ba6a : sti ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016bee2 : sti ; inc dword ptr [rax] ; clc ; sti ; jmp rax
0x000000000016bb56 : sti ; inc dword ptr [rax] ; jae 0x16bb5f ; push qword ptr [rax] ; push rdi ; sti ; jmp qword ptr [rax]
0x000000000016bb36 : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x000000000016bab2 : sti ; inc dword ptr [rax] ; xor ebx, edi ; push rax ; xor ebx, edi ; jmp rax
0x000000000011aa58 : sti ; inc dword ptr [rbp + 0x3d8d48c0] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 4
0x000000000011aa34 : sti ; inc dword ptr [rbp + 0x3d8d48c0] ; lodsd eax, dword ptr [rsi] ; ret 4
0x0000000000103057 : sti ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000016bb66 : sti ; inc eax ; jge 0x16bb6b ; call qword ptr [rax]
0x000000000016bfaa : sti ; inc eax ; loop 0x16bfaf ; call qword ptr [rax]
0x0000000000161458 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x000000000016bada : sti ; jmp qword ptr [rax + 0x10fffb2b]
0x000000000016bb1a : sti ; jmp qword ptr [rax - 0x2f0004c5]
0x00000000001634f6 : sti ; jmp qword ptr [rax]
0x000000000018dde2 : sti ; jmp qword ptr [rdx]
0x000000000016ba82 : sti ; jmp rax
0x00000000001727da : sti ; jmp rsp
0x000000000012be88 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008cf9d : sti ; mov rax, rdi ; ret
0x00000000000cefe9 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00000000000fb99a : sti ; or dword ptr [rdi], ecx ; ret
0x000000000015e185 : sti ; out dx, eax ; jmp rsp
0x000000000016ba76 : sti ; push qword ptr [rax + 0x23] ; sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016bad6 : sti ; push qword ptr [rax + 0x39] ; sti ; jmp qword ptr [rax + 0x10fffb2b]
0x000000000016bafa : sti ; push qword ptr [rax + 0x48] ; sti ; call qword ptr [rax]
0x000000000016bb62 : sti ; push qword ptr [rax + 0x7c] ; sti ; inc eax ; jge 0x16bb6f ; call qword ptr [rax]
0x000000000016bfa6 : sti ; push qword ptr [rax - 0x1f] ; sti ; inc eax ; loop 0x16bfb3 ; call qword ptr [rax]
0x000000000016bf96 : sti ; push qword ptr [rax] ; add ah, bh ; push qword ptr [rax] ; add bh, ah ; jmp rax
0x000000000016bec2 : sti ; push qword ptr [rax] ; clc ; sti ; call qword ptr [rax]
0x000000000016be8a : sti ; push qword ptr [rax] ; cld ; sti ; call qword ptr [rax]
0x000000000016bea6 : sti ; push qword ptr [rax] ; cli ; sti ; call qword ptr [rax]
0x000000000016bb5a : sti ; push qword ptr [rax] ; push rdi ; sti ; jmp qword ptr [rax]
0x000000000016bb12 : sti ; push qword ptr [rax] ; push rdx ; sti ; call rax
0x000000000016bf46 : sti ; push qword ptr [rax] ; stc ; sti ; call qword ptr [rax]
0x000000000016baf2 : sti ; push qword ptr [rax] ; sti ; call rax
0x000000000016baa6 : sti ; push qword ptr [rax] ; sti ; jmp qword ptr [rax]
0x000000000016beae : sti ; push rax ; std ; sti ; jmp rax
0x000000000016beca : sti ; push rax ; sti ; sti ; call rax
0x000000000016ba96 : sti ; push rax ; sub ebx, edi ; call qword ptr [rax]
0x000000000016bab6 : sti ; push rax ; xor ebx, edi ; jmp rax
0x000000000005feac : sti ; ret
0x000000000003c908 : sti ; ret 0xffbf
0x000000000014c591 : sti ; ret 0xfffb
0x000000000016becd : sti ; sti ; call rax
0x000000000006427a : sti ; str word ptr [rax - 0x77] ; ret 0x8948
0x000000000002ad47 : sti ; test rax, rax ; je 0x2ad55 ; call rax
0x00000000000e4670 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000002314 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x0000000000101972 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000180329 : stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rbx]
0x000000000016d281 : stosb byte ptr [rdi], al ; cld ; jmp rax
0x000000000015b5a4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000184261 : stosb byte ptr [rdi], al ; hlt ; jmp qword ptr [rdi]
0x0000000000002317 : stosb byte ptr [rdi], al ; ret
0x0000000000171a81 : stosb byte ptr [rdi], al ; stc ; call rsp
0x00000000000a8829 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x00000000000f46eb : stosb byte ptr [rdi], al ; sub al, byte ptr [rax] ; pop rbp ; ret
0x00000000000a882a : stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x00000000000e383b : stosb byte ptr [rdi], al ; sub eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016e0ad : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; in eax, dx ; out dx, al ; call rsp
0x000000000018d6cd : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; rcr byte ptr [rbp - 9], 1 ; jmp qword ptr [rcx]
0x000000000016d245 : stosd dword ptr [rdi], eax ; cld ; jmp rax
0x000000000016307d : stosd dword ptr [rdi], eax ; cli ; call qword ptr [rax]
0x000000000015ecad : stosd dword ptr [rdi], eax ; int1 ; jmp rax
0x000000000016f589 : stosd dword ptr [rdi], eax ; jmp rsp
0x00000000001022a4 : stosd dword ptr [rdi], eax ; mov eax, 0xffffffff ; ret
0x000000000010215a : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000030371 : stosd dword ptr [rdi], eax ; ret
0x00000000000bff81 : stosd dword ptr [rdi], eax ; ret 0xfff6
0x0000000000171aa1 : stosd dword ptr [rdi], eax ; stc ; call rsp
0x00000000000a8828 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x0000000000102159 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000033b7b : stosq qword ptr [rdi], rax ; ret
0x0000000000064f81 : str word ptr [rax + 0x63] ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x0000000000064162 : str word ptr [rax + 0x63] ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000064e9f : str word ptr [rax + 0x63] ; or al, 0x8e ; add rsi, rcx ; jmp rsi
0x0000000000111225 : str word ptr [rax - 0x77] ; ret 0x8348
0x000000000006413f : str word ptr [rax - 0x77] ; ret 0x8948
0x0000000000074a8b : str word ptr [rax - 0x7d] ; ret 0x3110
0x000000000015ca91 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000016c139 : sub ah, bh ; call qword ptr [rax + 0x20fffc2a]
0x000000000016c055 : sub ah, bh ; call qword ptr [rax]
0x000000000016c119 : sub ah, bh ; call rax
0x0000000000183998 : sub al, 0 ; add byte ptr [rax], al ; cmp al, 0xe ; add dword ptr [rax], eax ; ret 0xffe9
0x00000000000d06b5 : sub al, 0 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000ce0c5 : sub al, 0 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000017428c : sub al, 0x17 ; add byte ptr [rax], al ; jo 0x174316 ; jmp 0x17429a
0x00000000000eb994 : sub al, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000018588c : sub al, 0x2d ; add dword ptr [rax], eax ; xor byte ptr [rdx - 0xb], ah ; call rax
0x0000000000175f8c : sub al, 0x34 ; add byte ptr [rax], al ; nop ; add ebp, esp ; jmp qword ptr [rsi]
0x000000000018628c : sub al, 0x37 ; add dword ptr [rax], eax ; loopne 0x18622e ; cmc ; jmp qword ptr [rcx]
0x000000000009a242 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000c1f36 : sub al, 0x44 ; mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000c171c : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x000000000018708c : sub al, 0x45 ; add dword ptr [rax], eax ; add dl, 0xf5 ; call qword ptr [rdx]
0x000000000018818c : sub al, 0x56 ; add dword ptr [rax], eax ; loopne 0x188194 ; cmc ; jmp qword ptr [rcx]
0x000000000018848c : sub al, 0x59 ; add dword ptr [rax], eax ; sar bh, 1 ; cmc ; call qword ptr [rsi]
0x000000000016d898 : sub al, 0x5a ; in al, dx ; call rsp
0x000000000017888c : sub al, 0x5d ; add byte ptr [rax], al ; add al, bl ; out dx, al ; call qword ptr [rax]
0x00000000001718b0 : sub al, 0x61 ; stc ; call rsp
0x000000000009a245 : sub al, 0x75 ; pop rax ; ret
0x00000000000c52f9 : sub al, 0x83 ; ret 0x4801
0x000000000016dcc8 : sub al, 0x9c ; in al, dx ; jmp rsp
0x0000000000147af3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016dfb4 : sub al, 0xa4 ; add byte ptr [rax], al ; cld ; ret 0xffed
0x0000000000172af4 : sub al, 0xb ; add al, byte ptr [rax] ; cmp al, 0xee ; std ; jmp rsp
0x00000000001724e0 : sub al, 0xba ; cli ; jmp rsp
0x000000000017f18c : sub al, 0xc6 ; add byte ptr [rax], al ; mov sil, 0xf1 ; jmp rsi
0x0000000000160af8 : sub al, 0xe0 ; cmc ; push qword ptr [rsi + rbx*8] ; cmc ; jmp rsp
0x000000000018128c : sub al, 0xe7 ; add byte ptr [rax], al ; jo 0x1812bf ; call qword ptr [rbx]
0x000000000019138c : sub al, 0xe8 ; add dword ptr [rax], eax ; loopne 0x1913b8 ; clc ; call qword ptr [rdx]
0x00000000001051cd : sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x0000000000181539 : sub al, 0xf3 ; jmp rcx
0x000000000019238c : sub al, 0xf8 ; add dword ptr [rax], eax ; mov al, 0x38 ; clc ; jmp qword ptr [rcx]
0x00000000000e39df : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x000000000009c5ae : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000172c8c : sub al, 1 ; add byte ptr [rax], al ; rcr bl, 0xea ; call qword ptr [rax]
0x000000000007dce0 : sub al, 4 ; or al, 0 ; ret
0x0000000000031c82 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000f3f12 : sub al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000fec35 : sub al, byte ptr [rax] ; call rax
0x00000000000f40af : sub al, byte ptr [rax] ; cmp rdx, rax ; jne 0xf4098 ; ret
0x00000000000f46ec : sub al, byte ptr [rax] ; pop rbp ; ret
0x00000000000f37f4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3808 ; xor eax, eax ; ret
0x00000000000f3824 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3838 ; xor eax, eax ; ret
0x00000000000f3854 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3868 ; xor eax, eax ; ret
0x00000000000f3884 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3898 ; xor eax, eax ; ret
0x00000000000f38b4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf38c8 ; xor eax, eax ; ret
0x00000000000f38e4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf38f8 ; xor eax, eax ; ret
0x00000000000f3914 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3928 ; xor eax, eax ; ret
0x00000000000f3944 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3958 ; xor eax, eax ; ret
0x00000000000f3974 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3988 ; xor eax, eax ; ret
0x00000000000f39a4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf39b8 ; xor eax, eax ; ret
0x00000000000f39d4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf39e8 ; xor eax, eax ; ret
0x00000000000f3a04 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3a18 ; xor eax, eax ; ret
0x00000000000f3a34 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3a48 ; xor eax, eax ; ret
0x00000000000f3a64 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3a78 ; xor eax, eax ; ret
0x00000000000f3a94 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3aa8 ; xor eax, eax ; ret
0x00000000000f3ac4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3ad8 ; xor eax, eax ; ret
0x00000000000f3af4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3b08 ; xor eax, eax ; ret
0x00000000000f3b24 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3b38 ; xor eax, eax ; ret
0x00000000000f3b54 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3b68 ; xor eax, eax ; ret
0x00000000000f3b84 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3b98 ; xor eax, eax ; ret
0x00000000000f3be4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3bf8 ; xor eax, eax ; ret
0x00000000000f3c14 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3c28 ; xor eax, eax ; ret
0x00000000000f3c44 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3c58 ; xor eax, eax ; ret
0x00000000000f3c74 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3c88 ; xor eax, eax ; ret
0x00000000000f3ca4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3cb8 ; xor eax, eax ; ret
0x00000000000f3cd4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3ce8 ; xor eax, eax ; ret
0x00000000000f3d04 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3d18 ; xor eax, eax ; ret
0x00000000000f3d34 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3d48 ; xor eax, eax ; ret
0x00000000000f3d64 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf3d78 ; xor eax, eax ; ret
0x00000000000f4285 : sub al, byte ptr [rax] ; test rax, rax ; je 0xf4297 ; ret
0x00000000001855dd : sub al, byte ptr [rcx] ; add al, al ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001855f5 : sub al, byte ptr [rcx] ; add al, bl ; push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000018560d : sub al, byte ptr [rcx] ; add al, dh ; push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000018563d : sub al, byte ptr [rcx] ; add byte ptr [rax], ah ; pop rax ; cmc ; jmp qword ptr [rcx]
0x0000000000185625 : sub al, byte ptr [rcx] ; add byte ptr [rax], cl ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000016f445 : sub al, byte ptr [rcx] ; add byte ptr [rcx + rbp*2 - 0xd], cl ; jmp rsp
0x00000000000c1783 : sub al, ch ; jmp rax
0x000000000017d699 : sub al, dh ; jmp rdx
0x000000000016e7d1 : sub al, dh ; jmp rsp
0x0000000000053944 : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000016c059 : sub bh, ah ; call qword ptr [rax]
0x000000000016c13d : sub bh, ah ; jmp qword ptr [rax]
0x00000000001917d1 : sub bh, al ; call qword ptr [rdx]
0x000000000006a39c : sub bh, bh ; loopne 0x6a339 ; mov eax, 0xffffffff ; ret
0x00000000000261eb : sub bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x00000000000255ce : sub bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x5f5e
0x00000000001634f1 : sub bh, bl ; call qword ptr [rax]
0x00000000001634f5 : sub bh, bl ; jmp qword ptr [rax]
0x00000000001703e1 : sub bh, dh ; call rsp
0x000000000011c96d : sub bl, al ; nop ; call qword ptr [rax]
0x000000000016ba91 : sub bl, bh ; jmp qword ptr [rax]
0x0000000000181471 : sub bl, dh ; call rdi
0x00000000000a94fb : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000009a236 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000cf76a : sub byte ptr [r13 - 0x7c218b37], r8b ; ret 0x4901
0x000000000006e375 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x000000000006baee : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000001158d1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000011c027 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000115691 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000005564c : sub byte ptr [rax + 0x34], bl ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x00000000000d7513 : sub byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c7bfb : sub byte ptr [rax + 0x63], cl ; ret
0x00000000000d91e7 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000006e376 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000110c4e : sub byte ptr [rax + 1], bh ; ret
0x000000000006baef : sub byte ptr [rax + 1], cl ; ret 0x8949
0x00000000001158d2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c1f0e : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000079274 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000010de28 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000309ad : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000aa366 : sub byte ptr [rax - 0x77], cl ; ret 0x4eb
0x00000000000cc09d : sub byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000008899f : sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006b845 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000006550c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000694a8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000c17d3 : sub byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x0000000000057c87 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000022e1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x000000000011c7d0 : sub byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x000000000005daad : sub byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000112815 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000119c45 : sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000001132f5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x113308 ; ret
0x000000000011c8f7 : sub byte ptr [rax], al ; jne 0x11c908 ; add rsp, 0x38 ; ret
0x000000000011273c : sub byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000117484 : sub byte ptr [rax], al ; test eax, eax ; je 0x117498 ; xor eax, eax ; ret
0x000000000011d5a4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11d5b8 ; xor eax, eax ; ret
0x000000000011d5d4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11d5e8 ; xor eax, eax ; ret
0x000000000011d604 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11d618 ; xor eax, eax ; ret
0x000000000011d634 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11d648 ; xor eax, eax ; ret
0x000000000011d664 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11d678 ; xor eax, eax ; ret
0x000000000011d694 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11d6a8 ; xor eax, eax ; ret
0x000000000018a6b8 : sub byte ptr [rax], bl ; cld ; jmp qword ptr [rsi]
0x00000000000022e2 : sub byte ptr [rax], dl ; salc ; ret
0x000000000009a23a : sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009a239 : sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000017beb8 : sub byte ptr [rbp - 0x11], bh ; call qword ptr [rdx]
0x00000000000cf76b : sub byte ptr [rbp - 0x7c218b37], al ; ret 0x4901
0x00000000000c01c2 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000017ee28 : sub byte ptr [rbp - 6], al ; call qword ptr [rdi]
0x00000000000205bf : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a94fc : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003ee57 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000011c7a3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000011c7a2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000055800 : sub byte ptr [rbx - 0x5f743], al ; call qword ptr [rax]
0x000000000015edf4 : sub byte ptr [rbx - 0xe], bl ; jmp rax
0x000000000009a237 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000003d7a6 : sub byte ptr [rcx + 0x39], cl ; ret 0x840f
0x00000000000c7a84 : sub byte ptr [rcx + 0x497c245c], cl ; mov edx, eax ; jmp 0xc7abf
0x0000000000115957 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000762bd : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000330c5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x000000000011c7d1 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x0000000000115692 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x0000000000113571 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000f232f : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010a95c : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000069434 : sub byte ptr [rdi - 0x3d770000], cl ; jmp 0x693d6
0x0000000000176638 : sub byte ptr [rdi], dl ; in al, dx ; call rax
0x000000000018d968 : sub byte ptr [rdx - 9], dh ; call qword ptr [rcx]
0x000000000017db38 : sub byte ptr [rdx], bl ; cli ; call qword ptr [rax]
0x000000000017ff92 : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x000000000017b7d0 : sub byte ptr [rsi - 0x11], 0xff ; ret
0x0000000000184f08 : sub byte ptr [rsi - 0xb], al ; call qword ptr [rax]
0x00000000000c5e61 : sub byte ptr [rsi], al ; mov qword ptr [rsp + 0x20], r14 ; call 0xc20a9
0x0000000000032912 : sub cl, al ; add rsp, 0x28 ; ret
0x00000000000328ae : sub cl, al ; jne 0x328c8 ; add rsp, 0x28 ; ret
0x0000000000032be9 : sub cl, al ; jne 0x32c00 ; add rsp, 0x28 ; ret
0x0000000000032711 : sub cl, al ; ret
0x0000000000187898 : sub cl, bl ; cmc ; jmp rax
0x00000000000884f7 : sub cl, byte ptr [rax + 0x39] ; sal dword ptr [rbp - 0xd], 1 ; ret
0x000000000005f7ae : sub cl, byte ptr [rax - 0x77] ; or cl, ch ; ret 0xffde
0x00000000000a882b : sub cl, byte ptr [rbp + 0x63] ; ret
0x000000000004553a : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e519d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2f97 : sub dh, dh ; ret
0x00000000000d51be : sub dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000febb3 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000105845 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x105859 ; ret
0x0000000000109fe5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001059e5 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x00000000000ff4f5 : sub dword ptr [rax], eax ; ret
0x00000000001054be : sub dword ptr [rax], eax ; test eax, eax ; je 0x1054ce ; ret
0x00000000001088d4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x1088e6 ; ret
0x00000000001415e3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x0000000000185475 : sub dword ptr [rcx], eax ; add byte ptr [rax + 0x53], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018ac65 : sub dword ptr [rcx], eax ; add byte ptr [rax], bl ; test al, 0xf6 ; jmp rbx
0x000000000012a0d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a0ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a227 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a23d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a377 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a38d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a4c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a4dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a617 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a62d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a767 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a77d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a8b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a8cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012aa07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12aa1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ab57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ab6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012aca7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12acbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012adf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ae0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012af47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12af5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b097 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b0ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b1e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b1fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b337 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b34d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012caa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cabd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cbf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cc0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cd47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cd5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ce97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cead ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cfe7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cffd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d137 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d14d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d287 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d29d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d3d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d3ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d527 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d53d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d677 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d68d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d7c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d7dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d917 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d92d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012da67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12da7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dbb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12dbcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dd07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12dd1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f48d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f5c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f5dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f717 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f72d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f867 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f87d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f9b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f9cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fb07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fb1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fc57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fc6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fda7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fdbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fef7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ff0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130047 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13005d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130197 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1301ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001302e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1302fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130437 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13044d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130587 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13059d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001306d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1306ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001186b1 : sub dword ptr [rdi + 0x18], 1 ; je 0x1186c8 ; xor eax, eax ; ret
0x000000000012a033 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a02f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012a0dd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000149149 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001482d6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000112836 : sub eax, -0x80 ; add rsp, 8 ; ret
0x0000000000079375 : sub eax, 0x10 ; add rsp, 8 ; ret
0x000000000011576a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000171e25 : sub eax, 0x13dc0002 ; cli ; call rsp
0x000000000016baa5 : sub eax, 0x2e30fffb ; sti ; jmp qword ptr [rax]
0x000000000006f961 : sub eax, 0x39480000 ; ret
0x0000000000107682 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018588d : sub eax, 0x62300001 ; cmc ; call rax
0x00000000001858f5 : sub eax, 0x64b80001 ; cmc ; jmp qword ptr [rcx]
0x0000000000185925 : sub eax, 0x64e80001 ; cmc ; jmp qword ptr [rcx]
0x000000000018593d : sub eax, 0x65000001 ; cmc ; jmp qword ptr [rcx]
0x0000000000185955 : sub eax, 0x65180001 ; cmc ; jmp qword ptr [rcx]
0x0000000000032989 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x000000000004fa7b : sub eax, 0x83000000 ; ret
0x00000000000f9ae9 : sub eax, 0x8948002a ; ret 0x850f
0x000000000010eeb4 : sub eax, 0x8948f631 ; out 0x89, eax ; ret
0x000000000016f4bd : sub eax, 0x95ec0001 ; call rsp
0x0000000000111f72 : sub eax, 1 ; add rsp, 0x18 ; ret
0x00000000000b8fb4 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000293e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000001068dd : sub eax, 1 ; pop r13 ; pop r14 ; ret
0x00000000000421df : sub eax, 1 ; ret
0x000000000009b002 : sub eax, 4 ; ret
0x00000000001756c5 : sub eax, dword ptr [rax] ; add al, bl ; out 0xeb, al ; jmp qword ptr [rsi]
0x00000000000e99f3 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000e99e6 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000005cec3 : sub eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; out dx, al ; add dword ptr [rax + 1], ecx ; ret
0x00000000000e3e33 : sub eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000000e1003 : sub eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000e9ad8 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000e9972 : sub eax, dword ptr [rax] ; je 0xe997d ; pop rbp ; ret
0x00000000000e0e34 : sub eax, dword ptr [rax] ; jne 0xe0e49 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e1f47 : sub eax, dword ptr [rax] ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000e4455 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000ea405 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e9cfd : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000e1099 : sub eax, dword ptr [rax] ; mov rdx, rax ; jmp 0xe1033
0x00000000000e3ddf : sub eax, dword ptr [rax] ; pop rbp ; pop r12 ; ret
0x00000000000e2416 : sub eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e224c : sub eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9924 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000e3da9 : sub eax, dword ptr [rax] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e331e : sub eax, dword ptr [rax] ; ret
0x000000000002ce4f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000454ea : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000099401 : sub eax, dword ptr [rcx + r8*4] ; je 0x993e7 ; ret
0x0000000000099402 : sub eax, dword ptr [rcx + rax*4] ; je 0x993e6 ; ret
0x000000000018574d : sub eax, dword ptr [rcx] ; add al, dh ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x0000000000073c2e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000006ecb5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x000000000006eba5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000006ae15 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000006eca6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000006eb96 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000ef01b : sub eax, dword ptr [rdx + 8] ; ret
0x00000000000993ba : sub eax, dword ptr [rdx + rcx*4] ; je 0x993a6 ; ret
0x0000000000073403 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000001756c4 : sub eax, dword ptr fs:[rax] ; add al, bl ; out 0xeb, al ; jmp qword ptr [rsi]
0x00000000000ef008 : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000012313e : sub eax, eax ; ret
0x0000000000072705 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009b77b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000072c19 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000043a0d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007dc7c : sub eax, ecx ; ret
0x000000000007e429 : sub eax, edi ; ret
0x00000000000a7dd0 : sub eax, edx ; add rax, r8 ; ret
0x00000000000eefa7 : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000036129 : sub eax, edx ; ret
0x000000000003296f : sub eax, edx ; shr eax, 0x1f ; ret
0x000000000003259d : sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000ab72c : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000014b5d7 : sub eax, edx ; vzeroupper ; ret
0x00000000000eef71 : sub eax, esi ; cmp dil, dl ; cmovne eax, ecx ; ret
0x000000000006a65d : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000708c8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ef007 : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000015b33e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000016ddf1 : sub ebp, ebp ; call rsp
0x0000000000066117 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000159dd5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000a62fc : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016d311 : sub ebx, ebp ; call rsp
0x000000000016ba99 : sub ebx, edi ; call qword ptr [rax]
0x00000000001634ed : sub ebx, edi ; dec dword ptr [rax] ; sub bh, bl ; call qword ptr [rax]
0x000000000016ba95 : sub ebx, edi ; push rax ; sub ebx, edi ; call qword ptr [rax]
0x00000000000fe9b1 : sub ebx, esi ; add dword ptr [rax], eax ; mov rdi, r12 ; call rbx
0x0000000000033b74 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000755ce : sub ecx, dword ptr [rax + 0x39] ; ret
0x000000000005ad11 : sub ecx, dword ptr [rax - 0x77] ; ret
0x0000000000042de5 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000094c41 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ab72e : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000995cc : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000005885e : sub edi, 1 ; mov rax, r13 ; test edx, edx ; je 0x58833 ; jmp 0x58815
0x000000000008d146 : sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000016badd : sub edi, ebx ; call qword ptr [rax]
0x00000000000bb77e : sub edi, esp ; dec dword ptr [rax - 0x77] ; ret
0x000000000016c0bd : sub edi, esp ; jmp qword ptr [rax]
0x000000000016c0dd : sub edi, esp ; jmp rax
0x000000000009a892 : sub edx, 1 ; mov dword ptr [rcx], r8d ; jne 0x9a889 ; ret
0x0000000000073430 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000073425 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000815b4 : sub edx, eax ; jbe 0x815f7 ; add rax, rdi ; ret
0x00000000000815c4 : sub edx, eax ; jbe 0x815f9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000815d4 : sub edx, eax ; jbe 0x815f9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000815e4 : sub edx, eax ; jbe 0x815f9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000032cdf : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000032c9e : sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000006b922 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000070044 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000000899a2 : sub esi, 1 ; jne 0x899a0 ; xor eax, eax ; pop rbx ; ret
0x0000000000101f3e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000c1fb4 : sub esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011beea : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000017d6b1 : sub esi, eax ; jmp qword ptr [rdx]
0x00000000000dfcb4 : sub esi, ebx ; ret
0x0000000000170419 : sub esi, edi ; call rsp
0x0000000000189131 : sub esi, esi ; call rdi
0x00000000000da350 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115a4e : sub esp, -0x80 ; pop rbx ; ret
0x0000000000067b5f : sub esp, 0x80 ; call 0xf3d98
0x00000000000a7df0 : sub esp, 8 ; call r12
0x0000000000106bdf : sub esp, 8 ; mov rcx, rdx ; xor edx, edx ; call rax
0x000000000016c0b9 : sub esp, edi ; call qword ptr [rax + 0x20fffc2b]
0x000000000016c0f9 : sub esp, edi ; call qword ptr [rax]
0x0000000000072c18 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000a7dcf : sub r8, rdx ; add rax, r8 ; ret
0x0000000000112835 : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000079374 : sub rax, 0x10 ; add rsp, 8 ; ret
0x0000000000098b13 : sub rax, 1 ; ret
0x000000000009b001 : sub rax, 4 ; ret
0x00000000000e9ad7 : sub rax, qword ptr [r8] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000073c2d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000006ecb4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000006eba4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000006ae14 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000006eca5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000006eb95 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000e9ad6 : sub rax, qword ptr ds:[r8] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000012313d : sub rax, r8 ; ret
0x000000000009b77a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000007e428 : sub rax, rdi ; ret
0x000000000003613d : sub rax, rdx ; ret
0x000000000003259c : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000014b5d6 : sub rax, rdx ; vzeroupper ; ret
0x00000000000995cb : sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000815b3 : sub rdx, rax ; jbe 0x815f8 ; add rax, rdi ; ret
0x000000000006b921 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000070043 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000899a1 : sub rsi, 1 ; jne 0x899a1 ; xor eax, eax ; pop rbx ; ret
0x00000000000da34f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115a4d : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000067b5e : sub rsp, 0x80 ; call 0xf3d99
0x00000000000a7def : sub rsp, 8 ; call r12
0x0000000000106bde : sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call rax
0x0000000000032670 : subps xmm0, xmm1 ; ret
0x000000000003266f : subsd xmm0, xmm1 ; ret
0x0000000000032a04 : subss xmm0, xmm1 ; ret
0x0000000000103480 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000e09a7 : syscall ; mov eax, edx ; ret
0x00000000000d9ded : syscall ; neg eax ; ret
0x00000000000f3dd7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000a83f5 : syscall ; ret
0x00000000000e77cf : syscall ; test rax, rax ; jl 0xe781e ; je 0xe77e2 ; ret
0x000000000005ec5f : test ah, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x8304
0x0000000000112897 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010dcb2 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001119b6 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002b560 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000017d3bd : test al, 0 ; add byte ptr [rax], dl ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000d06b4 : test al, 0x2c ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x000000000018a3f8 : test al, 0x31 ; stc ; jmp qword ptr [rsi]
0x0000000000003cda : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000ca908 : test al, 0x48 ; add eax, edx ; jmp rax
0x0000000000181ec8 : test al, 0x51 ; call qword ptr [rdx]
0x0000000000182388 : test al, 0x60 ; jmp qword ptr [rcx]
0x00000000000bff0c : test al, 0x89 ; ret
0x000000000015a697 : test al, 0x97 ; xchg eax, esp ; ret
0x0000000000186978 : test al, 0xa3 ; cmc ; jmp rdx
0x00000000001783d8 : test al, 0xba ; out dx, al ; jmp qword ptr [rcx]
0x000000000016d0e0 : test al, 0xbb ; cld ; dec dword ptr [rsi - 0x3d] ; cld ; dec esi ; ret 0xfffc
0x000000000017f418 : test al, 0xbf ; int1 ; call qword ptr [rdx]
0x0000000000174cb8 : test al, 0xc2 ; jmp 0x174cbc
0x000000000016309c : test al, 0xcf ; cli ; call qword ptr [rax]
0x0000000000174f88 : test al, 0xd9 ; jmp 0x174f8e
0x0000000000175568 : test al, 0xe4 ; jmp 0x17556e
0x0000000000187cf8 : test al, 0xe7 ; cmc ; jmp qword ptr [rcx]
0x00000000000bfe08 : test al, 0xe8 ; ret 0xfdb9
0x000000000009ab79 : test al, 0xf0 ; jne 0x9abd8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009ab78 : test al, 0xf0 ; jne 0x9abd9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000018ac69 : test al, 0xf6 ; jmp rbx
0x00000000001709e9 : test al, 0xf7 ; call rsp
0x0000000000187f28 : test al, 0xf9 ; cmc ; jmp qword ptr [rcx]
0x000000000016d23d : test al, 0xfc ; jmp rax
0x0000000000175df8 : test al, 1 ; in al, dx ; call qword ptr [rdx]
0x000000000006ba63 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000fd9d3 : test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008d1c2 : test al, al ; jne 0x8d1a5 ; ret
0x000000000008d300 : test al, al ; jne 0x8d2e6 ; xor eax, eax ; ret
0x000000000008de4a : test al, al ; jne 0x8de38 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000010cb77 : test al, bh ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000100afe : test al, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000023369 : test bh, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000378f8 : test bh, bh ; cmove eax, edx ; add rsp, 8 ; ret
0x0000000000037930 : test bh, bh ; cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000067294 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d7c13 : test bl, dh ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002c4e6 : test byte ptr [rax + 0x200], bh ; ret
0x00000000000b8bfa : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x000000000010db85 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x00000000000314b9 : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000000b04ef : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x0000000000110bd5 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x0000000000061206 : test byte ptr [rax + rax - 0x7cb80000], ch ; ret
0x000000000010bd55 : test byte ptr [rax + rax*2], ah ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000d8bd4 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000068272 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000ccc53 : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000078573 : test byte ptr [rax - 0x18000000], bl ; ret
0x00000000000d9fb3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000000266cb : test byte ptr [rax - 0x77000000], dh ; ret 0xe283
0x0000000000041029 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x00000000000d34f0 : test byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000006f6ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000011cc2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x00000000001495ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000014177a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009436a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009533a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000001417aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009535a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009536a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000c4ada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000001417ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000953aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000736aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000014178a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009534a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007176a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000006d09a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000631ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000006fa7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008d7ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001843e4 : test byte ptr [rax], bl ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000003d6b0 : test byte ptr [rax], dh ; or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x00000000000f2ab2 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00000000000c4666 : test byte ptr [rbp + 0x39], al ; ret 0xe975
0x0000000000066706 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000001880e4 : test byte ptr [rbp + 1], dl ; add byte ptr [rax], bh ; sti ; cmc ; jmp qword ptr [rcx]
0x0000000000172204 : test byte ptr [rbp + 2], al ; add ah, bl ; jb 0x17220c ; jmp rsp
0x000000000006ccde : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x0000000000117be9 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x00000000001778e4 : test byte ptr [rbp], cl ; add byte ptr [rax], cl ; in eax, dx ; call qword ptr [rcx]
0x00000000000f271c : test byte ptr [rbx + 0x1c], 0x20 ; je 0xf2788 ; xor eax, eax ; pop rbx ; ret
0x000000000016de2c : test byte ptr [rbx + 0x40cc0000], bl ; in eax, dx ; jmp rsp
0x0000000000072b06 : test byte ptr [rbx], 0x80 ; jne 0x72b16 ; pop rbx ; ret
0x0000000000078b1e : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000787cf : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016d7f4 : test byte ptr [rbx], bh ; add byte ptr [rdx + rdx*2 - 0x14], bh ; call rsp
0x0000000000025682 : test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000002b52c : test byte ptr [rbx], dl ; add bl, dh ; ret
0x000000000016ddec : test byte ptr [rcx + 0x298c0000], bl ; in eax, dx ; call rsp
0x00000000001867e4 : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x5f], cl ; cmc ; jmp rdx
0x00000000000f5d2f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c0428 : test byte ptr [rcx + rcx - 0x2a], 0x75 ; add dh, bl ; ret
0x000000000007812e : test byte ptr [rcx + rcx*4 - 0x10], 0x5b ; pop r14 ; pop r15 ; ret
0x00000000000390d2 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x00000000000a69a3 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00000000000eedf4 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x00000000000c28eb : test byte ptr [rcx - 0x44], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xc28be
0x000000000009e784 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000000e4672 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000ca952 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00000000000b294a : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000074982 : test byte ptr [rcx - 0xa000000], cl ; ret
0x000000000011db26 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017168d : test byte ptr [rcx], 0 ; sbb al, 6 ; stc ; call rsp
0x000000000018afad : test byte ptr [rcx], al ; add al, ah ; mov cl, 0xf6 ; call qword ptr [rbx]
0x000000000018af95 : test byte ptr [rcx], al ; add al, ch ; mov cl, 0xf6 ; call qword ptr [rax]
0x000000000018af7d : test byte ptr [rcx], al ; add al, dh ; mov cl, 0xf6 ; call qword ptr [rax]
0x000000000018affd : test byte ptr [rcx], al ; add byte ptr [rax], ah ; mov dl, 0xf6 ; call qword ptr [rax]
0x000000000018b035 : test byte ptr [rcx], al ; add byte ptr [rax], ch ; mov dl, 0xf6 ; call qword ptr [rax]
0x000000000018afac : test byte ptr [rcx], r8b ; add al, ah ; mov cl, 0xf6 ; call qword ptr [rbx]
0x00000000000bc026 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000d58ac : test byte ptr [rdi - 0x76000003], bl ; ret 0xdb31
0x00000000000eef5c : test byte ptr [rdi - 0x77000000], dh ; ret 0xf789
0x00000000000415ce : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000011298c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00000000000aeb69 : test byte ptr [rdi], 0x48 ; ret 0x8349
0x00000000000d7c11 : test byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a459c : test byte ptr [rdi], 0x84 ; ret
0x000000000005d6bc : test byte ptr [rdi], 0x84 ; ret 0x19
0x000000000004cfb0 : test byte ptr [rdi], 0x84 ; ret 0xb
0x000000000003d805 : test byte ptr [rdi], 0x84 ; ret 8
0x00000000000a8282 : test byte ptr [rdi], 0x94 ; ret
0x00000000000cd412 : test byte ptr [rdi], 0x94 ; ret 0xfa09
0x00000000000c874b : test byte ptr [rdi], 0x95 ; ret
0x0000000000058c4a : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000006ebf2 : test byte ptr [rdi], 4 ; sete al ; ret
0x000000000006ec02 : test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000094ce8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000005e333 : test byte ptr [rdi], al ; and dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000171fb4 : test byte ptr [rdi], dh ; add al, byte ptr [rax] ; cld ; cli ; call rsp
0x000000000002c474 : test byte ptr [rdx + 0x200], al ; ret
0x000000000007574d : test byte ptr [rdx + rdi*8 - 0x76b30001], bl ; ret 0x8d48
0x000000000005c97d : test byte ptr [rdx - 0x77000000], al ; ret
0x000000000016e1cc : test byte ptr [rdx - 0x7fa40000], dh ; out dx, eax ; call rsp
0x00000000001750e4 : test byte ptr [rip - 0x22b80000], ah ; jmp 0x1750f2
0x00000000000d20c5 : test byte ptr [rip - 0x76fffff4], ah ; ret 0x894c
0x000000000002568e : test byte ptr [rip - 0x8fffffd], bl ; ret 0
0x00000000000c2f86 : test byte ptr [rip - 0x9ffffff], dl ; ret
0x000000000007e4cd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000001871e4 : test byte ptr [rsi + 1], al ; add byte ptr [rax - 0x3b], cl ; cmc ; jmp qword ptr [rcx]
0x000000000010435f : test byte ptr [rsi + rax - 0x7cb80000], bl ; ret 0xf01
0x000000000002b805 : test byte ptr [rsi - 0x7c000002], cl ; ret
0x0000000000030d65 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007e30d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000004d7f3 : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000099222 : test ch, 0xf0 ; je 0x9921b ; movzx eax, cl ; pop rbx ; ret
0x00000000001037af : test ch, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000159109 : test ch, ch ; dec dword ptr [rsi] ; test ebp, ebp ; jmp rsp
0x00000000000400ac : test ch, dh ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000cd8ee : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x11e9
0x000000000010a4ca : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000103dcb : test cl, cl ; jne 0x103d1c ; ret
0x000000000008d168 : test cl, cl ; jne 0x8d15d ; ret
0x000000000008d2a7 : test cl, cl ; jne 0x8d29e ; xor eax, eax ; ret
0x000000000009879f : test cl, cl ; jne 0x98794 ; ret
0x000000000009884f : test cl, cl ; jne 0x98844 ; ret
0x0000000000098b0f : test cl, cl ; jne 0x98b08 ; sub rax, 1 ; ret
0x00000000000eee85 : test cl, cl ; jne 0xeee75 ; ret
0x00000000000229ab : test cl, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009924a : test dh, 0xf0 ; je 0x99219 ; movzx eax, dl ; pop rbx ; ret
0x000000000009924a : test dh, 0xf0 ; je 0x9921b ; movzx eax, dl ; pop rbx ; ret
0x00000000000321a5 : test dh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000010a4b8 : test dh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000008d360 : test dh, dh ; jne 0x8d357 ; mov qword ptr [rdx], rcx ; ret
0x0000000000023695 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000000d34ef : test dh, dh ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000149454 : test dl, 0x40 ; jne 0x149419 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000149482 : test dl, 4 ; jne 0x149419 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016e3d4 : test dl, al ; add byte ptr [rax], al ; ret
0x00000000000bd698 : test dl, dl ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000031a42 : test dl, dl ; jne 0x31a24 ; ret
0x000000000008d124 : test dl, dl ; jne 0x8d11d ; ret
0x00000000000989bf : test dl, dl ; jne 0x989b8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000b985e : test dl, dl ; jne 0xb983d ; xor eax, eax ; ret
0x00000000000b9b26 : test dl, dl ; jne 0xb9b0e ; ret
0x0000000000060a5b : test dword ptr [rax + 0x31fffffa], esi ; shr cl, 0x91 ; ret
0x0000000000044a8a : test dword ptr [rax + 0x39fffffb], ecx ; fmul dword ptr [rdi] ; ret
0x0000000000082249 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x000000000009501b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009652b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009642b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x0000000000087c3f : test dword ptr [rax + rax - 0x76b80000], esi ; ret 0xf748
0x000000000005ffba : test dword ptr [rax - 0x76000006], edi ; ret
0x000000000005fa26 : test dword ptr [rax - 0x76000038], eax ; ret
0x00000000000ed2d3 : test dword ptr [rax - 0x77], 0x1d8948de ; ret 0x2b14
0x0000000000022041 : test dword ptr [rax - 0x77], 0x45e89875 ; ret 5
0x00000000000f2950 : test dword ptr [rax - 0x9000002], ebx ; ret
0x0000000000067295 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x000000000016ec2d : test dword ptr [rax], 0xf0c89c00 ; jmp rsp
0x0000000000182265 : test dword ptr [rax], 0xf35f3800 ; jmp qword ptr [rcx]
0x00000000001822dd : test dword ptr [rax], 0xf3606000 ; jmp qword ptr [rcx]
0x00000000001822f5 : test dword ptr [rax], 0xf3607800 ; jmp qword ptr [rcx]
0x000000000004edf9 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000079777 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x0000000000079776 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000d3fc6 : test dword ptr [rbp - 0x9ffffff], esi ; ret 0xf01
0x000000000008722f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000008d6ce : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009a150 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x000000000009aa68 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001416c8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000001416a8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000001415c0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000096620 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000147dd7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148226 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b83 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x000000000008d638 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000374ca : test dword ptr [rbx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008152a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000081f60 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00000000001413ca : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000147dad : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000094c02 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000147cbd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147bcd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009a197 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000014b307 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x000000000009a167 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000014176a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000192345 : test dword ptr [rcx], 0xf8385800 ; call qword ptr [rdx]
0x000000000008214a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x0000000000094d67 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000094d47 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000033b03 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00000000000f0da8 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000f123c : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x0000000000058ab9 : test dword ptr [rdi + rdx], esi ; add byte ptr [rax - 0x77], cl ; ret 0xeeb
0x0000000000087045 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000033ce6 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000094f01 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000096309 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x0000000000036ffa : test dword ptr [rdx + rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000149122 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147af2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000056683 : test dword ptr [rdx - 0x7600000a], edx ; ret
0x0000000000141687 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x000000000009ab0d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000014ac92 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000094d25 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000094d05 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x0000000000094c1d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000004e6c0 : test dword ptr [rsi - 0x7c000004], ecx ; ret
0x000000000008732e : test dword ptr [rsi - 0xc000005], esp ; ret
0x0000000000147ff8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000000b82f3 : test eax, 0x39fffffe ; ret
0x00000000000f6767 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x000000000015c380 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000131b26 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000032a38 : test eax, 0x7fffff ; je 0x32a31 ; ret
0x000000000015ec69 : test eax, 0xa9b0fff1 ; int1 ; call qword ptr [rax]
0x000000000016d241 : test eax, 0xab60fffc ; cld ; jmp rax
0x0000000000161456 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000000e639f : test eax, eax ; cmove eax, edx ; ret
0x00000000000361e4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00000000001054c0 : test eax, eax ; je 0x1054cc ; ret
0x00000000001076a1 : test eax, eax ; je 0x10768f ; xor eax, eax ; pop rbx ; ret
0x0000000000107ee1 : test eax, eax ; je 0x107ef1 ; mov rdi, rsp ; call rax
0x0000000000108552 : test eax, eax ; je 0x108562 ; mov rdi, rbp ; call rax
0x00000000001088d6 : test eax, eax ; je 0x1088e4 ; ret
0x0000000000109513 : test eax, eax ; je 0x109523 ; mov rdi, r14 ; call rax
0x0000000000109a61 : test eax, eax ; je 0x109a76 ; xor eax, eax ; ret
0x000000000010e4e8 : test eax, eax ; je 0x10e4f8 ; mov rdi, r12 ; call rax
0x000000000010e6c9 : test eax, eax ; je 0x10e6db ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000010f6ff : test eax, eax ; je 0x10f70f ; mov rdi, rbp ; call rax
0x000000000010f7be : test eax, eax ; je 0x10f7ce ; mov rdi, r13 ; call rax
0x000000000011033d : test eax, eax ; je 0x11034f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001109e9 : test eax, eax ; je 0x1109f9 ; mov rdi, r12 ; call rax
0x0000000000110d5d : test eax, eax ; je 0x110d6f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001127d8 : test eax, eax ; je 0x11276a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011275d : test eax, eax ; je 0x11276d ; pop rbx ; ret
0x00000000001133d9 : test eax, eax ; je 0x1133eb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000113a22 : test eax, eax ; je 0x113a34 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000117486 : test eax, eax ; je 0x117496 ; xor eax, eax ; ret
0x000000000011e533 : test eax, eax ; je 0x11e53f ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011f518 : test eax, eax ; je 0x11f524 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000014b9cc : test eax, eax ; je 0x14b9db ; call rax
0x0000000000029b69 : test eax, eax ; je 0x29b73 ; call rax
0x000000000002ad49 : test eax, eax ; je 0x2ad53 ; call rax
0x000000000003fc73 : test eax, eax ; je 0x3fc85 ; pop rbx ; ret
0x000000000006fc6d : test eax, eax ; je 0x6fc7d ; pop rbx ; ret
0x000000000007503a : test eax, eax ; je 0x75044 ; call rax
0x0000000000079799 : test eax, eax ; je 0x797a3 ; call rax
0x000000000007e070 : test eax, eax ; je 0x7e088 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b27ee : test eax, eax ; je 0xb2810 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000b72ff : test eax, eax ; je 0xb7309 ; call rax
0x00000000000b7531 : test eax, eax ; je 0xb753e ; call rax
0x00000000000c000a : test eax, eax ; je 0xbfff0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e025c : test eax, eax ; je 0xe0267 ; ret
0x00000000000e1e61 : test eax, eax ; je 0xe1e70 ; mov qword ptr [rax], rdx ; ret
0x00000000000e581c : test eax, eax ; je 0xe58c0 ; call rax
0x00000000000e5993 : test eax, eax ; je 0xe5a98 ; call rax
0x00000000000f4288 : test eax, eax ; je 0xf4294 ; ret
0x00000000000f4470 : test eax, eax ; je 0xf44a4 ; call rax
0x00000000000f623a : test eax, eax ; je 0xf6250 ; add rsp, 8 ; ret
0x00000000000fdfa4 : test eax, eax ; je 0xfdfb4 ; mov rdi, rbx ; call rax
0x00000000000e77d2 : test eax, eax ; jl 0xe781b ; je 0xe77df ; ret
0x000000000010584a : test eax, eax ; jne 0x105854 ; ret
0x000000000010b0f0 : test eax, eax ; jne 0x10b0d7 ; xor eax, eax ; pop rbx ; ret
0x000000000010e8f6 : test eax, eax ; jne 0x10e904 ; ret
0x0000000000113355 : test eax, eax ; jne 0x113345 ; pop rbx ; ret
0x00000000001135e6 : test eax, eax ; jne 0x1135f4 ; ret
0x000000000011a1ca : test eax, eax ; jne 0x11a1df ; xor eax, eax ; pop rbx ; ret
0x000000000011d5a6 : test eax, eax ; jne 0x11d5b6 ; xor eax, eax ; ret
0x000000000011d5d6 : test eax, eax ; jne 0x11d5e6 ; xor eax, eax ; ret
0x000000000011d606 : test eax, eax ; jne 0x11d616 ; xor eax, eax ; ret
0x000000000011d636 : test eax, eax ; jne 0x11d646 ; xor eax, eax ; ret
0x000000000011d666 : test eax, eax ; jne 0x11d676 ; xor eax, eax ; ret
0x000000000011d696 : test eax, eax ; jne 0x11d6a6 ; xor eax, eax ; ret
0x000000000014bee6 : test eax, eax ; jne 0x14bef5 ; ret
0x000000000014c54f : test eax, eax ; jne 0x14c55d ; pop rbx ; ret
0x00000000000330d6 : test eax, eax ; jne 0x330e5 ; ret
0x00000000000631af : test eax, eax ; jne 0x631c8 ; mov rax, rbx ; pop rbx ; ret
0x00000000000733e4 : test eax, eax ; jne 0x733dd ; ret
0x0000000000074805 : test eax, eax ; jne 0x74839 ; xor edi, edi ; call qword ptr [r14]
0x000000000007c12f : test eax, eax ; jne 0x7c125 ; ret
0x000000000008037c : test eax, eax ; jne 0x80346 ; add rsp, 8 ; ret
0x000000000008039f : test eax, eax ; jne 0x803b8 ; add rsp, 8 ; ret
0x0000000000081567 : test eax, eax ; jne 0x815c7 ; xor rax, rax ; ret
0x000000000008d708 : test eax, eax ; jne 0x8d786 ; xor eax, eax ; ret
0x000000000009ac51 : test eax, eax ; jne 0x9ac25 ; ret
0x000000000009ad0a : test eax, eax ; jne 0x9ad06 ; xor eax, eax ; ret
0x00000000000f37c6 : test eax, eax ; jne 0xf37d9 ; mov eax, 1 ; ret
0x00000000000f37f6 : test eax, eax ; jne 0xf3806 ; xor eax, eax ; ret
0x00000000000f3826 : test eax, eax ; jne 0xf3836 ; xor eax, eax ; ret
0x00000000000f3856 : test eax, eax ; jne 0xf3866 ; xor eax, eax ; ret
0x00000000000f3886 : test eax, eax ; jne 0xf3896 ; xor eax, eax ; ret
0x00000000000f38b6 : test eax, eax ; jne 0xf38c6 ; xor eax, eax ; ret
0x00000000000f38e6 : test eax, eax ; jne 0xf38f6 ; xor eax, eax ; ret
0x00000000000f3916 : test eax, eax ; jne 0xf3926 ; xor eax, eax ; ret
0x00000000000f3946 : test eax, eax ; jne 0xf3956 ; xor eax, eax ; ret
0x00000000000f3976 : test eax, eax ; jne 0xf3986 ; xor eax, eax ; ret
0x00000000000f39a6 : test eax, eax ; jne 0xf39b6 ; xor eax, eax ; ret
0x00000000000f39d6 : test eax, eax ; jne 0xf39e6 ; xor eax, eax ; ret
0x00000000000f3a06 : test eax, eax ; jne 0xf3a16 ; xor eax, eax ; ret
0x00000000000f3a36 : test eax, eax ; jne 0xf3a46 ; xor eax, eax ; ret
0x00000000000f3a66 : test eax, eax ; jne 0xf3a76 ; xor eax, eax ; ret
0x00000000000f3a96 : test eax, eax ; jne 0xf3aa6 ; xor eax, eax ; ret
0x00000000000f3ac6 : test eax, eax ; jne 0xf3ad6 ; xor eax, eax ; ret
0x00000000000f3af6 : test eax, eax ; jne 0xf3b06 ; xor eax, eax ; ret
0x00000000000f3b26 : test eax, eax ; jne 0xf3b36 ; xor eax, eax ; ret
0x00000000000f3b56 : test eax, eax ; jne 0xf3b66 ; xor eax, eax ; ret
0x00000000000f3b86 : test eax, eax ; jne 0xf3b96 ; xor eax, eax ; ret
0x00000000000f3be6 : test eax, eax ; jne 0xf3bf6 ; xor eax, eax ; ret
0x00000000000f3c16 : test eax, eax ; jne 0xf3c26 ; xor eax, eax ; ret
0x00000000000f3c46 : test eax, eax ; jne 0xf3c56 ; xor eax, eax ; ret
0x00000000000f3c76 : test eax, eax ; jne 0xf3c86 ; xor eax, eax ; ret
0x00000000000f3ca6 : test eax, eax ; jne 0xf3cb6 ; xor eax, eax ; ret
0x00000000000f3cd6 : test eax, eax ; jne 0xf3ce6 ; xor eax, eax ; ret
0x00000000000f3d06 : test eax, eax ; jne 0xf3d16 ; xor eax, eax ; ret
0x00000000000f3d36 : test eax, eax ; jne 0xf3d46 ; xor eax, eax ; ret
0x00000000000f3d66 : test eax, eax ; jne 0xf3d76 ; xor eax, eax ; ret
0x00000000000f3daf : test eax, eax ; jne 0xf3dab ; pop rdx ; pop r10 ; ret
0x00000000000f3ea3 : test eax, eax ; jne 0xf3eb5 ; ret
0x00000000000f4245 : test eax, eax ; jne 0xf41e9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000006d2ab : test eax, eax ; js 0x6d2bd ; ret
0x0000000000079a46 : test eax, eax ; js 0x79a55 ; ret
0x000000000009a68d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0x9a661 ; ret
0x0000000000107656 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00000000001590e5 : test ebp, ebp ; jmp rbx
0x000000000015910d : test ebp, ebp ; jmp rsp
0x00000000001590e1 : test ebp, ebp ; lcall ptr [rax - 0x7b] ; in eax, dx ; jmp rbx
0x000000000009d20f : test ebp, ebp ; mov r9, r15 ; setne dl ; jmp 0x9d22e
0x000000000009f7df : test ebp, ebp ; mov r9, r15 ; setne dl ; jmp 0x9f7fe
0x00000000000a1c0f : test ebp, ebp ; mov r9, r15 ; setne dl ; jmp 0xa1c2e
0x0000000000173219 : test ebp, edi ; jmp qword ptr [rdx]
0x0000000000081490 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000c54a8 : test ebx, ebx ; je 0xc5460 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f93e : test ebx, ebx ; jne 0x6f958 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ad66 : test ebx, ebx ; jne 0x9ad48 ; mov rax, rdi ; ret
0x000000000014bfc4 : test ebx, ebx ; mov rdx, rbx ; jne 0x14bfc1 ; pop rbx ; ret
0x00000000000789f2 : test ecx, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000149442 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000029eb5 : test ecx, ecx ; je 0x29ebf ; call rcx
0x0000000000063938 : test ecx, ecx ; je 0x63945 ; ret
0x000000000009ac3b : test ecx, ecx ; jne 0x9ac35 ; ret
0x000000000009c0a9 : test ecx, ecx ; jne 0x9c068 ; mov rax, rdx ; ret
0x0000000000099453 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0x9944f ; ret
0x0000000000055d03 : test edi, 0xfffa0885 ; call qword ptr [rax]
0x000000000007ac20 : test edi, edi ; je 0x7ac39 ; mov eax, 0x16 ; ret
0x000000000014bccb : test edi, edi ; jne 0x14bcbf ; pop rbx ; ret
0x00000000000f7e22 : test edi, edi ; js 0xf7e39 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001723a1 : test edx, edi ; jmp rsp
0x000000000010a070 : test edx, edx ; je 0x10a080 ; mov rdi, rbp ; call rdx
0x000000000014b8b4 : test edx, edx ; je 0x14b8be ; call rdx
0x0000000000058864 : test edx, edx ; je 0x5882d ; jmp 0x5880f
0x000000000006f00a : test edx, edx ; je 0x6f021 ; mov eax, 0xffffffff ; ret
0x000000000006f36a : test edx, edx ; je 0x6f381 ; mov eax, 0xffffffff ; ret
0x000000000007e2c2 : test edx, edx ; je 0x7e2d0 ; bsf eax, edx ; ret
0x000000000007e2c2 : test edx, edx ; je 0x7e2d1 ; bsf eax, edx ; ret
0x000000000007e36b : test edx, edx ; je 0x7e387 ; bsf rax, rdx ; ret
0x000000000007e36b : test edx, edx ; je 0x7e388 ; bsf rax, rdx ; ret
0x000000000007e53a : test edx, edx ; je 0x7e567 ; bsf rax, rdx ; ret
0x000000000007e53a : test edx, edx ; je 0x7e568 ; bsf rax, rdx ; ret
0x00000000000b74a8 : test edx, edx ; je 0xb74b5 ; call rdx
0x0000000000115bc0 : test edx, edx ; jne 0x115bd9 ; mov eax, 1 ; ret
0x0000000000115c00 : test edx, edx ; jne 0x115c19 ; mov eax, 1 ; ret
0x0000000000069caf : test edx, edx ; jne 0x69ca5 ; ret
0x00000000000715c1 : test edx, edx ; jne 0x715d6 ; xor eax, eax ; ret
0x000000000007207f : test edx, edx ; jne 0x72075 ; ret
0x000000000007c1d9 : test edx, edx ; jne 0x7c1d5 ; ret
0x000000000009c0ea : test edx, edx ; jne 0x9c0e5 ; ret
0x00000000000f40ed : test edx, edx ; jne 0xf40e9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000203be : test edx, edx ; jns 0x202b2 ; jmp 0x20393
0x000000000009af5f : test edx, edx ; mov dword ptr [rax], edx ; jne 0x9af5f ; ret
0x00000000000a768f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xa7690 ; ret
0x000000000009b389 : test edx, edx ; sete al ; ret
0x000000000015edfd : test edx, esi ; dec dword ptr [rax] ; xchg dl, dh ; jmp qword ptr [rax]
0x0000000000149435 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000007e431 : test esi, esi ; jne 0x7e440 ; xor rax, rax ; ret
0x000000000008919e : test esi, esi ; jne 0x891b1 ; jmp 0x8916b
0x000000000014944f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000033ce5 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000009ad65 : test r11d, r11d ; jne 0x9ad49 ; mov rax, rdi ; ret
0x000000000009d20e : test r13d, r13d ; mov r9, r15 ; setne dl ; jmp 0x9d22f
0x000000000009f7de : test r13d, r13d ; mov r9, r15 ; setne dl ; jmp 0x9f7ff
0x00000000000a1c0e : test r13d, r13d ; mov r9, r15 ; setne dl ; jmp 0xa1c2f
0x000000000008d1c1 : test r8b, r8b ; jne 0x8d1a6 ; ret
0x000000000008d2ff : test r8b, r8b ; jne 0x8d2e7 ; xor eax, eax ; ret
0x000000000011e532 : test r8d, r8d ; je 0x11e540 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011f517 : test r8d, r8d ; je 0x11f525 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000009ac50 : test r8d, r8d ; jne 0x9ac26 ; ret
0x000000000009c0a8 : test r9d, r9d ; jne 0x9c069 ; mov rax, rdx ; ret
0x00000000001076a0 : test rax, rax ; je 0x107690 ; xor eax, eax ; pop rbx ; ret
0x0000000000107ee0 : test rax, rax ; je 0x107ef2 ; mov rdi, rsp ; call rax
0x0000000000108551 : test rax, rax ; je 0x108563 ; mov rdi, rbp ; call rax
0x0000000000109512 : test rax, rax ; je 0x109524 ; mov rdi, r14 ; call rax
0x000000000010e4e7 : test rax, rax ; je 0x10e4f9 ; mov rdi, r12 ; call rax
0x000000000010e6c8 : test rax, rax ; je 0x10e6dc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000010f6fe : test rax, rax ; je 0x10f710 ; mov rdi, rbp ; call rax
0x000000000010f7bd : test rax, rax ; je 0x10f7cf ; mov rdi, r13 ; call rax
0x000000000011033c : test rax, rax ; je 0x110350 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001109e8 : test rax, rax ; je 0x1109fa ; mov rdi, r12 ; call rax
0x0000000000110d5c : test rax, rax ; je 0x110d70 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011275c : test rax, rax ; je 0x11276e ; pop rbx ; ret
0x00000000001133d8 : test rax, rax ; je 0x1133ec ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000113a21 : test rax, rax ; je 0x113a35 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000014b9cb : test rax, rax ; je 0x14b9dc ; call rax
0x0000000000029b68 : test rax, rax ; je 0x29b74 ; call rax
0x000000000002ad48 : test rax, rax ; je 0x2ad54 ; call rax
0x000000000006fc6c : test rax, rax ; je 0x6fc7e ; pop rbx ; ret
0x0000000000075039 : test rax, rax ; je 0x75045 ; call rax
0x0000000000079798 : test rax, rax ; je 0x797a4 ; call rax
0x000000000007e06f : test rax, rax ; je 0x7e089 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b72fe : test rax, rax ; je 0xb730a ; call rax
0x00000000000b7530 : test rax, rax ; je 0xb753f ; call rax
0x00000000000e025b : test rax, rax ; je 0xe0268 ; ret
0x00000000000e1e60 : test rax, rax ; je 0xe1e71 ; mov qword ptr [rax], rdx ; ret
0x00000000000e581b : test rax, rax ; je 0xe58c1 ; call rax
0x00000000000e5992 : test rax, rax ; je 0xe5a99 ; call rax
0x00000000000f4287 : test rax, rax ; je 0xf4295 ; ret
0x00000000000f446f : test rax, rax ; je 0xf44a5 ; call rax
0x00000000000f6239 : test rax, rax ; je 0xf6251 ; add rsp, 8 ; ret
0x00000000000fdfa3 : test rax, rax ; je 0xfdfb5 ; mov rdi, rbx ; call rax
0x00000000000e77d1 : test rax, rax ; jl 0xe781c ; je 0xe77e0 ; ret
0x0000000000113354 : test rax, rax ; jne 0x113346 ; pop rbx ; ret
0x00000000000733e3 : test rax, rax ; jne 0x733de ; ret
0x0000000000074804 : test rax, rax ; jne 0x7483a ; xor edi, edi ; call qword ptr [r14]
0x000000000007c12e : test rax, rax ; jne 0x7c126 ; ret
0x000000000006f93d : test rbx, rbx ; jne 0x6f959 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029eb4 : test rcx, rcx ; je 0x29ec0 ; call rcx
0x000000000014bcca : test rdi, rdi ; jne 0x14bcc0 ; pop rbx ; ret
0x000000000010a06f : test rdx, rdx ; je 0x10a081 ; mov rdi, rbp ; call rdx
0x000000000014b8b3 : test rdx, rdx ; je 0x14b8bf ; call rdx
0x000000000007e36a : test rdx, rdx ; je 0x7e388 ; bsf rax, rdx ; ret
0x000000000007e36a : test rdx, rdx ; je 0x7e389 ; bsf rax, rdx ; ret
0x000000000007e539 : test rdx, rdx ; je 0x7e568 ; bsf rax, rdx ; ret
0x000000000007e539 : test rdx, rdx ; je 0x7e569 ; bsf rax, rdx ; ret
0x00000000000b74a7 : test rdx, rdx ; je 0xb74b6 ; call rdx
0x0000000000069cae : test rdx, rdx ; jne 0x69ca6 ; ret
0x00000000000715c0 : test rdx, rdx ; jne 0x715d7 ; xor eax, eax ; ret
0x000000000007207e : test rdx, rdx ; jne 0x72076 ; ret
0x000000000007c1d8 : test rdx, rdx ; jne 0x7c1d6 ; ret
0x000000000007e430 : test rsi, rsi ; jne 0x7e441 ; xor rax, rax ; ret
0x000000000008919d : test rsi, rsi ; jne 0x891b2 ; jmp 0x8916c
0x000000000008d35f : test sil, sil ; jne 0x8d358 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b82 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000070e75 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000008e1ba : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001268fa : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000126830 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x00000000001265f9 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000098c15 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000012673f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x0000000000126563 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000001265c6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000098c19 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000008e1a6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000008e18d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000098c0b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000098c0f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000098c24 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000098c28 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000008e4c3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000008e35c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000008e15e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000008e122 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000008e625 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000098dc8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000098d2b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000098bca : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000123561 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b5d9 : vzeroupper ; ret
0x00000000000ef0ae : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000016caf5 : wait ; cld ; jmp rax
0x000000000004cbe4 : wait ; nop dword ptr [rax] ; call 0x68e66
0x000000000004ac31 : wait ; ret 3
0x0000000000192581 : wait ; sti ; jmp qword ptr [rdx]
0x00000000000983dd : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009845f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000098561 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bd4 : xabort -0xd ; ret
0x0000000000002bd0 : xbegin 0xfffffffff8c6efd0 ; ret
0x0000000000100f45 : xchg ah, bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000011e33f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011eb63 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001204af : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011df2f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000011ec53 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011ea73 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011da3b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e24b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012445c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000123c7c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000012406c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012388c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012638d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000124e91 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000126091 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000125791 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000125a91 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000125189 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f4bb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000012100f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001207ef : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000011dcbf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011ffcf : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000011dfff : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000011f013 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000ce356 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x000000000011e31b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000109144 : xchg byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000123a2b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e3eb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000063176 : xchg byte ptr [rbp + 0x5d5b0033], ah ; ret
0x0000000000120b2f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e7a3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000012030f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011faef : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000120ccf : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000011e19f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f1f3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011e983 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000011d98f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000017e241 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000011f3d3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000507a2 : xchg byte ptr [rcx], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000011dd8f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000123f1c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012373c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012484c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e26f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000011f2e3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011da5f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000011fe2f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011db01 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ec25 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ed15 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011eb35 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011de5f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000125436 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ff65 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120c65 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126336 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125a36 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125736 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000120785 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123e1d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012512e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012474d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e0cf : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011e893 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000006e216 : xchg ch, bh ; dec dword ptr [rax - 0x7f] ; ret
0x000000000015920d : xchg ch, ch ; call rsi
0x0000000000159209 : xchg ch, ch ; dec dword ptr [rcx] ; xchg ch, ch ; call rsi
0x00000000001227bf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001225df : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122fb7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000121ed7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000122dd7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000016ce00 : xchg cl, cl ; cld ; call qword ptr [rsi]
0x0000000000120fa5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001202a5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000011fdc5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120ac5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000016bc90 : xchg dh, al ; std ; call qword ptr [rsi]
0x000000000010038f : xchg dh, bh ; inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000123f6d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012378d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011db25 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011ea45 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e865 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e955 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e775 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000015ee01 : xchg dl, dh ; jmp qword ptr [rax]
0x00000000000bef51 : xchg dword ptr [rax - 0x77000000], esi ; jmp 0x49ce78a6
0x000000000002a448 : xchg dword ptr [rax - 0x7c000004], esi ; ret 0x8901
0x000000000017b315 : xchg dword ptr [rax], eax ; add byte ptr [rax + 0x5d], cl ; out dx, eax ; call rcx
0x00000000000b7f7c : xchg dword ptr [rax], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000005daab : xchg dword ptr [rax], esp ; sub byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000062856 : xchg dword ptr [rbp - 0x77000000], eax ; ret 0x348
0x000000000009ac4f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005064d : xchg dword ptr [rbx + rcx], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c6616 : xchg dword ptr [rbx - 0x7cfffffe], ebp ; ret 0xb880
0x000000000015a04c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000d9cd1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000575a4 : xchg dword ptr [rdi - 0x7cffffe8], edx ; ret 0x8308
0x00000000000f3dad : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0xf3dad ; pop rdx ; pop r10 ; ret
0x000000000015a1eb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000121b18 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x000000000006a5fe : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000025677 : xchg eax, ebp ; add byte ptr [rax], al ; add bh, dh ; ret 0xf800
0x000000000006db5f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001013f7 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x6348
0x000000000017c155 : xchg eax, ebp ; add byte ptr [rax], al ; popfq ; cmp edx, ebp ; jmp qword ptr [rax]
0x000000000016f4c1 : xchg eax, ebp ; call rsp
0x000000000016cca1 : xchg eax, ebp ; cld ; call qword ptr [rax]
0x000000000016cc9d : xchg eax, ebp ; cld ; ljmp ptr [rdx - 0x6b] ; cld ; call qword ptr [rax]
0x0000000000186291 : xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x000000000016dbf9 : xchg eax, ebp ; in al, dx ; call rsp
0x00000000000fb812 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000160394 : xchg eax, ebp ; or eax, 0x1b38fff5 ; cmc ; jmp rcx
0x00000000000020d3 : xchg eax, ebp ; ret
0x00000000000ff795 : xchg eax, ebp ; ret 0x2041
0x00000000001051cf : xchg eax, ebp ; ret 0x233c
0x0000000000104cd8 : xchg eax, ebp ; ret 0x2c3c
0x000000000008d1a5 : xchg eax, ebp ; ret 0x3941
0x00000000000652d7 : xchg eax, ebp ; ret 0x5389
0x00000000000339d5 : xchg eax, ebp ; ret 0x5489
0x0000000000107255 : xchg eax, ebp ; ret 0x8041
0x00000000000ca8d7 : xchg eax, ebp ; ret 0x8341
0x0000000000076f0e : xchg eax, ebp ; ret 0x8349
0x00000000000e24fc : xchg eax, ebp ; ret 0x8440
0x0000000000037c38 : xchg eax, ebp ; ret 0x8545
0x00000000000415d6 : xchg eax, ebp ; ret 0x854d
0x00000000000a69be : xchg eax, ebp ; ret 0x8b4c
0x000000000003cc57 : xchg eax, ebp ; ret 0x93e9
0x00000000000390d7 : xchg eax, ebp ; ret 0x941
0x000000000002eac7 : xchg eax, ebp ; ret 0x953d
0x000000000003a47f : xchg eax, ebp ; ret 0xa5e9
0x00000000000a6b71 : xchg eax, ebp ; ret 0xade9
0x0000000000037ccf : xchg eax, ebp ; ret 0xb5e9
0x000000000008ac82 : xchg eax, ebp ; ret 0xb60f
0x00000000000e250b : xchg eax, ebp ; ret 0xc084
0x00000000000414c1 : xchg eax, ebp ; ret 0xc221
0x000000000004cdc6 : xchg eax, ebp ; ret 0xc283
0x0000000000037b67 : xchg eax, ebp ; ret 0xc748
0x00000000000a8136 : xchg eax, ebp ; ret 0xd138
0x0000000000037bed : xchg eax, ebp ; ret 0xd348
0x0000000000033f91 : xchg eax, ebp ; ret 0xd521
0x00000000000a6a21 : xchg eax, ebp ; ret 0xd721
0x0000000000065a64 : xchg eax, ebp ; ret 0xdaf7
0x0000000000102ae5 : xchg eax, ebp ; ret 0xe083
0x000000000009b8d1 : xchg eax, ebp ; ret 0xe883
0x000000000009d215 : xchg eax, ebp ; ret 0xeeb
0x000000000006f096 : xchg eax, ebp ; ret 0xf44
0x0000000000103043 : xchg eax, ebp ; ret 0xf45
0x0000000000104cff : xchg eax, ebp ; ret 0xf980
0x000000000009bbbe : xchg eax, ebp ; ret 0xf983
0x00000000000ca9ad : xchg eax, ebp ; ret 0xfb83
0x00000000000c35ef : xchg eax, ebp ; ret 0xfff5
0x00000000000e0eb2 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000d09fc : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006382a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000d09de : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000111c01 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x000000000006a97d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000005bd37 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000117483 : xchg eax, ebp ; sub byte ptr [rax], al ; test eax, eax ; je 0x117499 ; xor eax, eax ; ret
0x0000000000002b81 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000072722 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000017beb5 : xchg eax, ebx ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x11], bh ; call qword ptr [rdx]
0x000000000017beed : xchg eax, ebx ; add byte ptr [rax], al ; xor byte ptr [rbp - 0x11], bh ; call qword ptr [rdx]
0x00000000000761f7 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000146f40 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003959 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000186159 : xchg eax, ebx ; cmc ; call rdx
0x00000000000a6489 : xchg eax, ebx ; idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000009422c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000129be2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005a4f7 : xchg eax, ebx ; ret
0x00000000000b7419 : xchg eax, ebx ; ret 0xfffb
0x000000000010a41e : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x000000000005c9cc : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x0000000000193649 : xchg eax, ecx ; clc ; call qword ptr [rdi]
0x00000000000f163b : xchg eax, ecx ; loopne 0xf1642 ; dec dword ptr [rcx] ; ret
0x00000000001210b1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000060a63 : xchg eax, ecx ; ret
0x000000000011f7df : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000d9d9c : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000193869 : xchg eax, edi ; clc ; call qword ptr [rcx]
0x000000000016cb91 : xchg eax, edi ; cld ; jmp qword ptr [rdx]
0x000000000016cd11 : xchg eax, edi ; cld ; jmp rax
0x000000000016cd0d : xchg eax, edi ; cld ; push qword ptr [rax - 0x69] ; cld ; jmp rax
0x000000000016cc55 : xchg eax, edi ; cld ; push qword ptr [rsi + rdx*4 - 4] ; jmp rsp
0x0000000000033eed : xchg eax, edi ; jno 0x33f2b ; add byte ptr [rcx], bh ; ret 0x237f
0x00000000000787b5 : xchg eax, edi ; mov eax, 0xc031ffff ; pop rbx ; ret
0x00000000000f4248 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000a5ff2 : xchg eax, edi ; ret 0x1489
0x000000000003ff66 : xchg eax, edi ; ret 0x870f
0x0000000000038e9b : xchg eax, edi ; ret 0xd284
0x00000000000b87be : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000e9de6 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000dbf89 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000c5bd6 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000015a698 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000007402b : xchg eax, edi ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000043dea : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000016dd25 : xchg eax, edx ; add byte ptr [rax], al ; jl 0x16dcd6 ; in al, dx ; call rsp
0x000000000017be3d : xchg eax, edx ; add byte ptr [rax], al ; mov al, 0x7c ; out dx, eax ; call qword ptr [rsi]
0x000000000017bd65 : xchg eax, edx ; add byte ptr [rax], al ; or byte ptr [rdx - 0x11], bh ; jmp qword ptr [rax]
0x0000000000065c4e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001937c9 : xchg eax, edx ; clc ; jmp qword ptr [rsi]
0x00000000001860d9 : xchg eax, edx ; cmc ; call qword ptr [rbx]
0x0000000000104a47 : xchg eax, edx ; idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000015bf5d : xchg eax, edx ; jae 0x15bf3a ; push rsi ; pop rdx ; je 0x15bf2f ; ret 0xacfc
0x000000000006f8ca : xchg eax, edx ; mov edx, eax ; jmp 0x6f862
0x00000000000a99a0 : xchg eax, edx ; ret 0x394c
0x00000000000dbf6e : xchg eax, edx ; ret 0x970f
0x00000000000b87c1 : xchg eax, edx ; ret 0xd029
0x00000000000c5bd9 : xchg eax, edx ; ret 0xd138
0x000000000010cb7d : xchg eax, edx ; ret 0xd284
0x000000000012312d : xchg eax, edx ; ret 0xf40
0x000000000015a04f : xchg eax, edx ; ret 0xf869
0x000000000010cd79 : xchg eax, edx ; ret 0xffe9
0x00000000001719b1 : xchg eax, edx ; stc ; jmp rsp
0x00000000000f46ea : xchg eax, edx ; stosb byte ptr [rdi], al ; sub al, byte ptr [rax] ; pop rbp ; ret
0x000000000011e537 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000147240 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000133323 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000171389 : xchg eax, esi ; clc ; jmp rsp
0x000000000016ccd9 : xchg eax, esi ; cld ; call rax
0x000000000016cc59 : xchg eax, esi ; cld ; jmp rsp
0x00000000001862c1 : xchg eax, esi ; cmc ; jmp qword ptr [rcx]
0x000000000016dfb1 : xchg eax, esi ; in eax, dx ; ljmp ptr [rsp] ; add byte ptr [rax], al ; cld ; ret 0xffed
0x000000000016c400 : xchg eax, esi ; jge 0x16c402 ; jmp qword ptr [rsi]
0x00000000001472fd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c8ec : xchg eax, esi ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x000000000014725b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c4bd3 : xchg eax, esi ; pop rbx ; ret
0x00000000000fb794 : xchg eax, esi ; ret
0x000000000007dec4 : xchg eax, esi ; ret 0xc031
0x000000000015c8ec : xchg eax, esi ; ret 0xcd11
0x0000000000101f67 : xchg eax, esi ; ret 0xfb83
0x00000000001472ac : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017c04d : xchg eax, esp ; add byte ptr [rax], al ; mov al, 3 ; std ; jmp rsp
0x00000000001870f4 : xchg eax, esp ; add dword ptr [r8], r8d ; clc ; ret
0x00000000000c85d6 : xchg eax, esp ; and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000069917 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001850f4 : xchg eax, esp ; and eax, 0x4e680001 ; cmc ; call qword ptr [rcx]
0x00000000001764f4 : xchg eax, esp ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x13], cl ; in al, dx ; call qword ptr [rdx]
0x000000000016e79c : xchg eax, esp ; fiadd dword ptr [rax] ; add byte ptr [rsi - 0x10], ch ; call rsp
0x0000000000171384 : xchg eax, esp ; fild word ptr [rcx] ; add ah, cl ; xchg eax, esi ; clc ; jmp rsp
0x000000000016e1ec : xchg eax, esp ; mov bl, 0 ; add byte ptr [rdi + rax*4], bl ; out dx, eax ; call rsp
0x00000000001727d4 : xchg eax, esp ; mov byte ptr [rcx], al ; add byte ptr [rdx + rax], cl ; sti ; jmp rsp
0x000000000017f2f4 : xchg eax, esp ; mov dword ptr [rax], 0xf1bd9800 ; call qword ptr [rsi]
0x00000000000b989b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000016efec : xchg eax, esp ; or al, 1 ; add byte ptr [rsi + rsi*4 - 0xf], bl ; jmp rsp
0x000000000000d050 : xchg eax, esp ; or al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rax], ah ; add al, bl ; ret
0x0000000000171594 : xchg eax, esp ; out dx, al ; add dword ptr [rax], eax ; sbb al, 0xd5 ; clc ; call rsp
0x00000000000d9eeb : xchg eax, esp ; pop rbx ; pop rbp ; ret
0x00000000000c4ba1 : xchg eax, esp ; pop rbx ; ret
0x00000000001724bc : xchg eax, esp ; push rbp ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; mov bl, 0xfa ; jmp rsp
0x0000000000187ef4 : xchg eax, esp ; push rbx ; add dword ptr [rax], eax ; js 0x187efa ; cmc ; jmp qword ptr [rcx]
0x0000000000187cf4 : xchg eax, esp ; push rcx ; add dword ptr [rax], eax ; test al, 0xe7 ; cmc ; jmp qword ptr [rcx]
0x000000000015caff : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15ca90 ; ret 0x48f
0x000000000002cc8c : xchg eax, esp ; rcr dword ptr [rbx + 0x48], -0x77 ; enter 0x415d, 0x5c ; ret
0x000000000002ab38 : xchg eax, esp ; ret
0x000000000017edf4 : xchg eax, esp ; ret 0
0x00000000000d1067 : xchg eax, esp ; ret 0x1589
0x000000000008d25e : xchg eax, esp ; ret 0x3941
0x00000000000bd2f7 : xchg eax, esp ; ret 0x394c
0x0000000000111b79 : xchg eax, esp ; ret 0x3d83
0x00000000000c65b3 : xchg eax, esp ; ret 0x4422
0x00000000000d16cf : xchg eax, esp ; ret 0x5408
0x0000000000075d57 : xchg eax, esp ; ret 0x62e9
0x0000000000052a93 : xchg eax, esp ; ret 0x7f3c
0x00000000000e15e1 : xchg eax, esp ; ret 0x8041
0x0000000000040d7e : xchg eax, esp ; ret 0x8341
0x0000000000038e79 : xchg eax, esp ; ret 0x8348
0x00000000000dda1d : xchg eax, esp ; ret 0x8440
0x0000000000098fa5 : xchg eax, esp ; ret 0x8444
0x00000000000fc12c : xchg eax, esp ; ret 0x8545
0x00000000000cb6ba : xchg eax, esp ; ret 0x854d
0x00000000000d2740 : xchg eax, esp ; ret 0x8944
0x00000000000d3219 : xchg eax, esp ; ret 0x8b48
0x0000000000020677 : xchg eax, esp ; ret 0x8d48
0x00000000000adc6d : xchg eax, esp ; ret 0x8d4c
0x00000000001042f1 : xchg eax, esp ; ret 0x93c
0x000000000004791d : xchg eax, esp ; ret 0x9522
0x00000000000cc99d : xchg eax, esp ; ret 0x9848
0x00000000000cca21 : xchg eax, esp ; ret 0x9fe9
0x000000000002d660 : xchg eax, esp ; ret 0xb60f
0x00000000000d3680 : xchg eax, esp ; ret 0xc085
0x00000000000c773a : xchg eax, esp ; ret 0xc683
0x00000000000cf7ac : xchg eax, esp ; ret 0xc931
0x00000000000bd30a : xchg eax, esp ; ret 0xd008
0x00000000000caa1f : xchg eax, esp ; ret 0xd009
0x00000000000a817a : xchg eax, esp ; ret 0xd021
0x0000000000040d93 : xchg eax, esp ; ret 0xd084
0x000000000006325e : xchg eax, esp ; ret 0xd089
0x000000000002076c : xchg eax, esp ; ret 0xd284
0x000000000008d45f : xchg eax, esp ; ret 0xd308
0x00000000000a8340 : xchg eax, esp ; ret 0xd338
0x000000000006807c : xchg eax, esp ; ret 0xdaf7
0x00000000000a8289 : xchg eax, esp ; ret 0xdf89
0x000000000007df48 : xchg eax, esp ; ret 0xf201
0x00000000000cc9c1 : xchg eax, esp ; ret 0xf44
0x00000000000c041a : xchg eax, esp ; ret 0xf631
0x00000000000fc312 : xchg eax, esp ; ret 0xf741
0x000000000009d333 : xchg eax, esp ; ret 0xf883
0x00000000000cd414 : xchg eax, esp ; ret 0xfa09
0x0000000000098f07 : xchg eax, esp ; ret 0xfd83
0x0000000000098f28 : xchg eax, esp ; ret 0xfe83
0x000000000018edf4 : xchg eax, esp ; ret 1
0x000000000009b38c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x000000000016e3a4 : xchg eax, esp ; rol dword ptr [rax], 0 ; cmp al, 0xc0 ; out dx, eax ; call rsp
0x0000000000087f10 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dbd9f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003f573 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000115a99 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001716fc : xchg eax, esp ; stc ; add dword ptr [rax], eax ; fcomp qword ptr [rax] ; stc ; jmp rsp
0x00000000001855f4 : xchg eax, esp ; sub al, byte ptr [rcx] ; add al, bl ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001858f4 : xchg eax, esp ; sub eax, 0x64b80001 ; cmc ; jmp qword ptr [rcx]
0x00000000001822f4 : xchg eax, esp ; test dword ptr [rax], 0xf3607800 ; jmp qword ptr [rcx]
0x00000000000f2b4e : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000e399c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017c1a1 : xchg edi, ebp ; call rax
0x000000000016e1f1 : xchg edi, ebp ; call rsp
0x000000000018df29 : xchg edi, esi ; call rcx
0x00000000000e3f1c : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e62a1 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000015e0d0 : xchg esp, edi ; out dx, eax ; jmp qword ptr [rsi]
0x00000000000b8f0f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000159208 : xchg r13b, bpl ; dec dword ptr [rcx] ; xchg ch, ch ; call rsi
0x0000000000186158 : xchg rax, rbx ; cmc ; call rdx
0x000000000018df28 : xchg rdi, rsi ; call rcx
0x00000000000aa7f5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000180325 : xlatb ; add byte ptr [rax], al ; clc ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rbx]
0x0000000000157579 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000129aa9 : xlatb ; add r9, r11 ; jmp r9
0x0000000000187809 : xlatb ; cmc ; call qword ptr [rax]
0x0000000000187731 : xlatb ; cmc ; call qword ptr [rdx]
0x00000000000eef75 : xlatb ; cmovne eax, ecx ; ret
0x00000000000dfcb2 : xlatb ; ja 0xdfce4 ; ret
0x0000000000074321 : xlatb ; je 0x7418b ; ret
0x00000000000f3eb9 : xlatb ; jmp rax
0x00000000000e6626 : xlatb ; jne 0xe661f ; mov rax, qword ptr [rax + 8] ; ret
0x000000000015b0c3 : xlatb ; jo 0x15b13f ; mov ebp, 0xfb67d10d ; ret
0x0000000000044072 : xlatb ; mov byte ptr [rsi], al ; jne 0x44058 ; mov rax, rsi ; ret
0x0000000000178811 : xlatb ; out dx, al ; jmp qword ptr [rax]
0x00000000000e0fa8 : xlatb ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000007c749 : xlatb ; ret
0x00000000000759b5 : xlatb ; ret 0
0x000000000015c566 : xlatb ; ret 0x4e27
0x0000000000003268 : xlatb ; ret 0x5a51
0x0000000000080137 : xlatb ; ret 0x94c
0x000000000008138f : xlatb ; ret 0xc085
0x000000000007c740 : xlatb ; ret 0xc148
0x000000000008d86b : xlatb ; ret 0xf188
0x000000000007e2e4 : xlatb ; ret 0xf66
0x0000000000088d81 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000008d706 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000009469e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000001493f6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008d664 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000007dc16 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000007dad6 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000007d996 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000007d856 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000007d716 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000007d5d6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000007d496 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000007d356 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000007d216 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000007d0d6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000007cf96 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000007ce56 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000007cd16 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000007cbd6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000007ca96 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000001493f2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000800d5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000800e6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000054995 : xlatb ; xor al, 0 ; call rax
0x0000000000033b48 : xlatb ; xor eax, eax ; ret
0x0000000000093e98 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000093e2e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000016c325 : xor ah, bh ; call qword ptr [rax - 0x1f0003cf]
0x000000000016be8c : xor ah, bh ; sti ; call qword ptr [rax]
0x00000000000025e0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2579 ; loop 0x25c4 ; ret 0x23cb
0x0000000000054997 : xor al, 0 ; call rax
0x000000000015a04a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000184594 : xor al, 0x1a ; add dword ptr [rax], eax ; js 0x184565 ; hlt ; call qword ptr [rdx]
0x0000000000078cd2 : xor al, 0x24 ; jmp rax
0x000000000008919b : xor al, 0x24 ; test rsi, rsi ; jne 0x891b4 ; jmp 0x8916e
0x0000000000175394 : xor al, 0x28 ; add byte ptr [rax], al ; cwde ; loope 0x17538d ; jmp qword ptr [rcx]
0x0000000000020833 : xor al, 0x2d ; adc al, 0 ; ret
0x00000000000c1e48 : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000176394 : xor al, 0x38 ; add byte ptr [rax], al ; or rbp, rsp ; call qword ptr [rax]
0x0000000000002051 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000a8167 : xor al, 0x39 ; ret
0x000000000008d78b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000187894 : xor al, 0x4d ; add dword ptr [rax], eax ; sub cl, bl ; cmc ; jmp rax
0x0000000000187c94 : xor al, 0x51 ; add dword ptr [rax], eax ; out 0xf5, eax ; jmp qword ptr [rcx]
0x00000000000992d1 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00000000000cf71e : xor al, 0x83 ; ret 0x4101
0x000000000018af94 : xor al, 0x84 ; add dword ptr [rax], eax ; call 0x1118a655
0x00000000000308dd : xor al, 0x89 ; ret 0x5525
0x000000000017b894 : xor al, 0x8d ; add byte ptr [rax], al ; sbb byte ptr [rax - 0x11], dh ; call qword ptr [rcx]
0x0000000000099299 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x000000000017c994 : xor al, 0x9e ; add byte ptr [rax], al ; cwde ; leave ; out dx, eax ; call qword ptr [rdi]
0x000000000017db94 : xor al, 0xb0 ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x10], cl ; call qword ptr [rax]
0x00000000000b0558 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000000b04f2 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x00000000000c4f05 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xc4ee8 ; mov edx, eax ; jmp 0xc4ef1
0x00000000000314bc : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x000000000015b22a : xor al, 0xd8 ; ret
0x0000000000160afc : xor al, 0xde ; cmc ; jmp rsp
0x00000000001704d1 : xor al, 0xf7 ; jmp rsp
0x000000000009a168 : xor al, 1 ; add byte ptr [rax], al ; ret
0x0000000000171f35 : xor al, 2 ; add byte ptr [rax + rsi], cl ; cli ; call rsp
0x00000000000e795b : xor al, al ; or eax, edi ; ret
0x000000000016bec4 : xor al, bh ; sti ; call qword ptr [rax]
0x0000000000073789 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007ad4c : xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000007add8 : xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000073f63 : xor al, byte ptr [rax] ; add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000073716 : xor al, byte ptr [rax] ; add dword ptr [rip + 0x32a045], 1 ; ret
0x000000000007881b : xor al, byte ptr [rax] ; call 0x74ac4
0x0000000000074871 : xor al, byte ptr [rax] ; jne 0x74889 ; jmp 0x748a3
0x0000000000078523 : xor al, byte ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000000765ce : xor al, byte ptr [rax] ; mov qword ptr [rsp + 0x10], rdx ; xor edi, edi ; call qword ptr [rax]
0x00000000000764e3 : xor al, byte ptr [rax] ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000073685 : xor al, byte ptr [rax] ; ret
0x0000000000079a44 : xor al, byte ptr [rax] ; test eax, eax ; js 0x79a57 ; ret
0x00000000000766b8 : xor al, byte ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x000000000016f585 : xor al, byte ptr [rcx] ; add dh, al ; stosd dword ptr [rdi], eax ; jmp rsp
0x0000000000171ee5 : xor al, byte ptr [rdx] ; add byte ptr [rbp - 6], bh ; jmp rsp
0x000000000004853e : xor al, byte ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000163090 : xor al, dl ; cli ; call qword ptr [rax]
0x000000000016308c : xor al, dl ; cli ; push qword ptr [rax] ; sar dl, 1 ; call qword ptr [rax]
0x00000000000de5e8 : xor ax, ax ; ret
0x0000000000191d19 : xor bh, al ; call qword ptr [rcx]
0x000000000016babd : xor bh, bl ; call rax
0x00000000000e224a : xor bh, byte ptr [rsi + 0x5d5b002b] ; pop r12 ; ret
0x000000000016c48c : xor bh, byte ptr [rsp + rdi*8 - 1] ; ret 0xfc7b
0x00000000001630a4 : xor bh, cl ; cli ; call qword ptr [rax]
0x000000000016d1a4 : xor bl, al ; cld ; push qword ptr [rax + 0x20fffcc2] ; ret 0xfffc
0x00000000000815ec : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000016cb8c : xor bl, byte ptr [rax - 0x684d0004] ; cld ; jmp qword ptr [rdx]
0x0000000000160308 : xor bl, byte ptr [rip + 0x1ba3fff5] ; cmc ; jmp rcx
0x000000000005a7a8 : xor bl, ch ; ret
0x0000000000105ed8 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000009a25c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000814ad : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000041aa7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x41b1d ; xor eax, eax ; ret
0x00000000000cf719 : xor byte ptr [r9 - 0x75], r8b ; xor al, 0x83 ; ret 0x4101
0x00000000000cd80f : xor byte ptr [rax + 0x63], cl ; cmp byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x00000000000aee45 : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000d929f : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000007c651 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000008d766 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000096d77 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000041e28 : xor byte ptr [rax - 0x75], cl ; jbe 0x41ea4 ; xor eax, eax ; ret
0x0000000000041aa8 : xor byte ptr [rax - 0x75], cl ; jg 0x41b1c ; xor eax, eax ; ret
0x0000000000041e27 : xor byte ptr [rax - 0x75], r9b ; jbe 0x41ea5 ; xor eax, eax ; ret
0x000000000007c57f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000115a2a : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x000000000009bb7d : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000006e383 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000076624 : xor byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x28 ; call rax
0x000000000002e671 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000eee36 : xor byte ptr [rax - 0x77], cl ; ret 0x4d64
0x00000000000c4aae : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000105ed9 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000eee73 : xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006bfbd : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000209b9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00000000000803c8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002074e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035b5a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000002ca25 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000029a3a : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rbp, qword ptr [r13 + 0x10] ; call rax
0x00000000000360e4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002d4f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000992f5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f446b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xf44a9 ; call rax
0x0000000000046af9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000016bf98 : xor byte ptr [rax], al ; cld ; push qword ptr [rax] ; add bh, ah ; jmp rax
0x000000000006a18a : xor byte ptr [rax], al ; je 0x6a194 ; ret
0x00000000000985f7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009a260 : xor byte ptr [rbp + 0x3d], dh ; ret
0x000000000009a25f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000cf46d : xor byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000072b08 : xor byte ptr [rbp + 5], 0x5b ; ret
0x000000000017bef0 : xor byte ptr [rbp - 0x11], bh ; call qword ptr [rdx]
0x00000000000b7421 : xor byte ptr [rbp - 0x24], 0x4c ; mov edi, esp ; call 0x736b8
0x000000000016c300 : xor byte ptr [rbp - 4], al ; jmp rax
0x000000000016baf4 : xor byte ptr [rbp - 5], al ; call rax
0x000000000004cddf : xor byte ptr [rbx + 0x1082444], cl ; ret 0x2941
0x00000000000797ac : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010002c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000192bd7 : xor byte ptr [rbx + 0xa550206], al ; ret
0x000000000017c4e7 : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000000821ab : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000016bb94 : xor byte ptr [rbx + rdi*8 - 0x4727f01], cl ; call qword ptr [rax]
0x000000000015f27c : xor byte ptr [rbx + rsi*8 - 1], 0xb0 ; je 0x15f27d ; jmp rax
0x0000000000072bce : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000107eed : xor byte ptr [rbx - 0x3d], bl ; ret
0x0000000000038e96 : xor byte ptr [rbx - 0x68f0f606], al ; ret 0xd284
0x00000000000cc9bc : xor byte ptr [rbx - 0x6bf00003], al ; ret 0xf44
0x000000000016c2cc : xor byte ptr [rbx - 4], cl ; call qword ptr [rax]
0x000000000009a25d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000cf71a : xor byte ptr [rcx - 0x75], al ; xor al, 0x83 ; ret 0x4101
0x00000000001603dc : xor byte ptr [rcx - 0x7677000b], cl ; cmc ; call qword ptr [rax]
0x00000000001603a0 : xor byte ptr [rcx - 0x772f000b], cl ; cmc ; call rax
0x00000000000df40c : xor byte ptr [rcx], 0xc0 ; ret
0x000000000006bfbe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006fc97 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000065ef9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000010005b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ea79a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000000c01b2 : xor byte ptr [rcx], dl ; je 0xc01c6 ; xor eax, eax ; ret
0x0000000000179cc0 : xor byte ptr [rdi + rbp*8], dl ; call qword ptr [rax]
0x000000000016080c : xor byte ptr [rdi - 0x7077000b], cl ; cmc ; call qword ptr [rax]
0x00000000001607d0 : xor byte ptr [rdi - 0x712f000b], cl ; cmc ; call rax
0x000000000016c2e4 : xor byte ptr [rdi - 4], al ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000016bb5c : xor byte ptr [rdi - 5], dl ; jmp qword ptr [rax]
0x00000000000e39e1 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x0000000000058ab7 : xor byte ptr [rdi], cl ; test dword ptr [rdi + rdx], esi ; add byte ptr [rax - 0x77], cl ; ret 0xeeb
0x000000000007df46 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x000000000009d331 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x0000000000185890 : xor byte ptr [rdx - 0xb], ah ; call rax
0x000000000016c248 : xor byte ptr [rdx - 4], cl ; call qword ptr [rax]
0x000000000016bb14 : xor byte ptr [rdx - 5], dl ; call rax
0x000000000016bf9c : xor byte ptr [rdx], al ; cld ; jmp rax
0x000000000017eebf : xor byte ptr [rdx], al ; ret
0x0000000000180f5f : xor byte ptr [rdx], al ; ret 0xe0a
0x000000000016c334 : xor byte ptr [rip + 0x36d0fffc], 0xfc ; jmp qword ptr [rax]
0x0000000000146fef : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008009c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000814ae : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000184ec0 : xor byte ptr [rsi - 0xb], al ; call qword ptr [rsi]
0x000000000016c280 : xor byte ptr [rsi - 4], al ; push rax ; cld ; call rax
0x000000000016c210 : xor byte ptr [rsi - 4], cl ; jmp qword ptr [rax]
0x000000000016baa8 : xor byte ptr [rsi], ch ; sti ; jmp qword ptr [rax]
0x00000000001871d0 : xor ch, al ; cmc ; jmp qword ptr [rcx]
0x00000000001882b0 : xor ch, bh ; cmc ; jmp qword ptr [rcx]
0x000000000014cb8c : xor ch, bl ; in eax, dx ; jmp qword ptr [rax]
0x0000000000098388 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009839e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000983c0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000983de : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000983fe : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000098424 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000098440 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000098460 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000098480 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000984a6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000984c8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000984e6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000098506 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000098522 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000098542 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000098562 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000098582 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000985a8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000985f8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000982ce : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000982ec : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009830c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009832e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009834e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009836e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000098204 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000098216 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009822c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000098244 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009825a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009826c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009828a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000098296 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000982ac : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000981f0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000fbb3d : xor ch, dh ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000016bf48 : xor cl, bh ; sti ; call qword ptr [rax]
0x00000000000aee40 : xor cl, byte ptr [rax - 0x75] ; jl 0xaee71 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000010dbcf : xor cl, byte ptr [rax - 0x77] ; jp 0x10dbe1 ; ret
0x00000000001103cf : xor cl, byte ptr [rax - 0x77] ; jp 0x1103e1 ; ret
0x00000000001103e7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1103f9 ; ret
0x0000000000110c1f : xor cl, byte ptr [rax - 0x77] ; jp 0x110c31 ; ret
0x0000000000110c37 : xor cl, byte ptr [rax - 0x77] ; jp 0x110c49 ; ret
0x0000000000110c67 : xor cl, byte ptr [rax - 0x77] ; jp 0x110c79 ; ret
0x00000000000e0f15 : xor cl, byte ptr [rax - 0x77] ; ret
0x00000000000c9bce : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x000000000010ca2c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000c01c7 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000074a8a : xor cl, byte ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret 0x3110
0x0000000000093d10 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000016cfdc : xor dh, al ; cld ; call rax
0x0000000000189261 : xor dh, dh ; call rsi
0x000000000010b624 : xor dh, dh ; ret 0xc707
0x0000000000171f39 : xor dl, bh ; call rsp
0x000000000016bea8 : xor dl, bh ; sti ; call qword ptr [rax]
0x000000000002beef : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000007a865 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000008d35e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000116441 : xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008118c : xor dword ptr [rax], eax ; add rsp, 0x100 ; ret
0x000000000008034a : xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000007becd : xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000f0c35 : xor dword ptr [rbp + 7], edx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ce579 : xor dword ptr [rcx + 0x4cfffffd], 0x63 ; ret 0x8b49
0x00000000000f9662 : xor dword ptr [rdx], ebp ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000014c004 : xor dword ptr [rip - 0x7cb800], esp ; add dword ptr [rdi + 3], esi ; ret
0x000000000014bff5 : xor dword ptr [rip], esp ; add bl, dh ; ret
0x000000000003128b : xor eax, 0x127e50 ; add rdx, rsi ; jmp rdx
0x0000000000047d78 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00000000000230b7 : xor eax, 0x1480a4 ; jmp 0x23086
0x000000000003f2a0 : xor eax, 0x1cb ; call rax
0x00000000000df213 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000673eb : xor eax, 0x30 ; call rax
0x000000000005c6e3 : xor eax, 0x33e888 ; call rax
0x0000000000054ff0 : xor eax, 0x345f7b ; call rax
0x0000000000054994 : xor eax, 0x3465d7 ; call rax
0x00000000000497ac : xor eax, 0x3517bf ; call rax
0x0000000000046b30 : xor eax, 0x35443b ; call rax
0x000000000016c335 : xor eax, 0x36d0fffc ; cld ; jmp qword ptr [rax]
0x000000000009e7d6 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011d0c7 : xor eax, 0x48fffbc5 ; add esp, 0x18 ; ret
0x000000000003fbad : xor eax, 0x4c64100 ; adc byte ptr [rax], al ; ret
0x000000000017606d : xor eax, 0x5e00000 ; in al, dx ; jmp rsp
0x0000000000033eea : xor eax, 0x7197058b ; add byte ptr ss:[rcx], bh ; ret 0x237f
0x00000000000f2745 : xor eax, 0x73e44 ; xor eax, eax ; call 0x4e9e9
0x000000000003fd35 : xor eax, 0x8b486400 ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001860d5 : xor eax, 0x92880001 ; cmc ; call qword ptr [rbx]
0x0000000000186155 : xor eax, 0x93480001 ; cmc ; call rdx
0x0000000000176155 : xor eax, 0x9780000 ; in al, dx ; jmp qword ptr [rbx]
0x000000000016f5fd : xor eax, 0xbafc0001 ; jmp rsp
0x0000000000002479 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x000000000007334b : xor eax, 0xffffe720 ; call rax
0x0000000000072efb : xor eax, 0xffffeb70 ; call rax
0x0000000000071feb : xor eax, 0xfffffa80 ; call rax
0x0000000000071da3 : xor eax, 0xfffffcc8 ; call rax
0x00000000000676e4 : xor eax, 0xfffffd37 ; call rax
0x000000000002074b : xor eax, dword ptr [0x30] ; call rax
0x000000000002ca22 : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000046af6 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x0000000000175f45 : xor eax, dword ptr [rax] ; add byte ptr [rax], cl ; add ebp, esp ; jmp qword ptr [rsi]
0x000000000005c6e6 : xor eax, dword ptr [rax] ; call rax
0x0000000000063178 : xor eax, dword ptr [rax] ; pop rbx ; pop rbp ; ret
0x0000000000103054 : xor eax, dword ptr [rcx - 0x7d] ; sti ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000185ed5 : xor eax, dword ptr [rcx] ; add al, ch ; mov ch, dh ; jmp rcx
0x000000000016f5a5 : xor eax, dword ptr [rcx] ; add byte ptr [rcx + rsi*4], bh ; call rsp
0x00000000000484eb : xor eax, dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000b2b10 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000041109 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007a13e : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000aaf82 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001007d5 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000fd2e8 : xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000111d91 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000011d048 : xor eax, eax ; add rsp, 0x38 ; ret
0x0000000000035c1c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033690 : xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x0000000000079380 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002c520 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000f274a : xor eax, eax ; call 0x4e9e4
0x000000000006ca67 : xor eax, eax ; call rbx
0x0000000000115a30 : xor eax, eax ; call rdx
0x00000000000361b6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x361c8 ; pop rbx ; ret
0x00000000000c4b9c : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xc4b3d ; pop rbx ; ret
0x00000000000ea79b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c1ae3 : xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xc1af8 ; ret
0x00000000000e435a : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xe4371 ; pop rbx ; ret
0x00000000000dfcae : xor eax, eax ; cmp rdi, rdx ; ja 0xdfce8 ; ret
0x000000000011557c : xor eax, eax ; cmp rdx, rcx ; je 0x115598 ; ret
0x00000000000f37b7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000087eac : xor eax, eax ; jmp 0x87e76
0x000000000009c5f2 : xor eax, eax ; jmp 0x9c3d9
0x000000000009ca11 : xor eax, eax ; jmp 0x9c849
0x00000000000b34ff : xor eax, eax ; jmp 0xb34c8
0x00000000000c858f : xor eax, eax ; jmp 0xc8559
0x000000000010a2b0 : xor eax, eax ; jmp rcx
0x00000000000f4775 : xor eax, eax ; leave ; ret
0x0000000000102438 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x000000000010170d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000df3a0 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000036782 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000001016c4 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000008d388 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f45d1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000114768 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00000000000bf0d3 : xor eax, eax ; mov rdx, r8 ; jmp 0xbf0fa
0x000000000010e667 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000036e70 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000669b9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb55 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000b8327 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000108292 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001099cf : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000002281f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a79a8 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000028eba : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000022967 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000031cc6 : xor eax, eax ; pop rbx ; ret
0x0000000000102156 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000001fb5b : xor eax, eax ; ret
0x000000000008de4e : xor eax, eax ; sub eax, ecx ; ret
0x000000000006ebf0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000006ec00 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000099248 : xor eax, eax ; test dh, 0xf0 ; je 0x9921b ; movzx eax, dl ; pop rbx ; ret
0x000000000009b387 : xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000036abe : xor eax, ecx ; ret
0x0000000000191ca9 : xor eax, edi ; call qword ptr [rsi]
0x0000000000036127 : xor eax, edx ; sub eax, edx ; ret
0x000000000003613b : xor eax, edx ; sub rax, rdx ; ret
0x000000000011af3b : xor ebp, ebp ; mov edi, r14d ; call 0xb7177
0x00000000000a8b4b : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001738f1 : xor ebx, ebp ; jmp qword ptr [rdi]
0x000000000007b44a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000016bab9 : xor ebx, edi ; jmp rax
0x000000000016bab5 : xor ebx, edi ; push rax ; xor ebx, edi ; jmp rax
0x00000000000e0f75 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000089555 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000023bdd : xor ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000007bf1c : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x000000000002ae82 : xor ecx, eax ; ret 0x4809
0x0000000000028933 : xor ecx, ecx ; call r15
0x0000000000032850 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000d7d16 : xor ecx, ecx ; mov edx, 0xa ; call 0x43fb9
0x000000000002cd00 : xor ecx, ecx ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x000000000009b694 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000018a3f9 : xor ecx, edi ; jmp qword ptr [rsi]
0x0000000000106064 : xor edi, dword ptr [0x30] ; call rax
0x0000000000103e09 : xor edi, dword ptr [rdx + 0xf480029] ; ret 0xff81
0x000000000016bc54 : xor edi, eax ; std ; call rcx
0x000000000011ae8d : xor edi, edi ; call 0xb7174
0x0000000000074809 : xor edi, edi ; call qword ptr [r14]
0x00000000000765d5 : xor edi, edi ; call qword ptr [rax]
0x00000000000b27f5 : xor edi, edi ; call rax
0x00000000000747da : xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x0000000000035b57 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0x5a ; ret 0x2a63
0x00000000000215a3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000ab631 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000106be5 : xor edx, edx ; call rax
0x0000000000049c23 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000006f969 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f9ac : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f64b9 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00000000000c45c5 : xor edx, edx ; jmp 0xc458f
0x000000000009b696 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000008d41d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000728b9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000080323 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000eca77 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000d9fb0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x000000000007881a : xor esi, dword ptr [rdx] ; add al, ch ; sahf ; ret 0xffff
0x000000000016e831 : xor esi, eax ; call rsp
0x00000000000c780e : xor esi, esi ; call 0x81c96
0x0000000000046afd : xor esi, esi ; call rax
0x0000000000189321 : xor esi, esi ; call rdx
0x00000000000d9fb2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000000e4671 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000000cefee : xor esi, esi ; ret
0x000000000016c329 : xor esp, edi ; jmp rax
0x00000000000766b7 : xor r8b, byte ptr [r8] ; xor edi, edi ; call qword ptr [rax]
0x000000000010175e : xor r8d, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006ca66 : xor r8d, r8d ; call rbx
0x00000000000c01c6 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000028932 : xor r9d, r9d ; call r15
0x00000000000df212 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002074a : xor rax, qword ptr [0x30] ; call rax
0x000000000002ca21 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020749 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002ca20 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000007e435 : xor rax, rax ; ret
0x000000000003613a : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000106063 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000106062 : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000035b56 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000035b55 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000016c324 : xor spl, dil ; call qword ptr [rax - 0x1f0003cf]

Unique gadgets found: 20523
